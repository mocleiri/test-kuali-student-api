<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="RuleManagementService" targetNamespace="http://student.kuali.org/wsdl/brms/RuleManagement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleManagement" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://org.kuali.student/core/exceptions" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleManagement" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/brms/RuleManagement">
    <xs:element name="createBusinessRule" type="tns:createBusinessRule"/>
    <xs:element name="createBusinessRuleResponse" type="tns:createBusinessRuleResponse"/>
    <xs:element name="createNewVersion" type="tns:createNewVersion"/>
    <xs:element name="createNewVersionResponse" type="tns:createNewVersionResponse"/>
    <xs:element name="deleteBusinessRule" type="tns:deleteBusinessRule"/>
    <xs:element name="deleteBusinessRuleResponse" type="tns:deleteBusinessRuleResponse"/>
    <xs:element name="getAgendaInfo" type="tns:getAgendaInfo"/>
    <xs:element name="getAgendaInfoDeterminationStructure" type="tns:getAgendaInfoDeterminationStructure"/>
    <xs:element name="getAgendaInfoDeterminationStructureResponse" type="tns:getAgendaInfoDeterminationStructureResponse"/>
    <xs:element name="getAgendaInfoResponse" type="tns:getAgendaInfoResponse"/>
    <xs:element name="getAgendaTypes" type="tns:getAgendaTypes"/>
    <xs:element name="getAgendaTypesResponse" type="tns:getAgendaTypesResponse"/>
    <xs:element name="getAnchorTypes" type="tns:getAnchorTypes"/>
    <xs:element name="getAnchorTypesResponse" type="tns:getAnchorTypesResponse"/>
    <xs:element name="getAnchorsByAnchorType" type="tns:getAnchorsByAnchorType"/>
    <xs:element name="getAnchorsByAnchorTypeResponse" type="tns:getAnchorsByAnchorTypeResponse"/>
    <xs:element name="getBusinessRuleByAnchor" type="tns:getBusinessRuleByAnchor"/>
    <xs:element name="getBusinessRuleByAnchorList" type="tns:getBusinessRuleByAnchorList"/>
    <xs:element name="getBusinessRuleByAnchorListResponse" type="tns:getBusinessRuleByAnchorListResponse"/>
    <xs:element name="getBusinessRuleByAnchorResponse" type="tns:getBusinessRuleByAnchorResponse"/>
    <xs:element name="getBusinessRuleEnglish" type="tns:getBusinessRuleEnglish"/>
    <xs:element name="getBusinessRuleEnglishResponse" type="tns:getBusinessRuleEnglishResponse"/>
    <xs:element name="getBusinessRuleIdsByBusinessRuleType" type="tns:getBusinessRuleIdsByBusinessRuleType"/>
    <xs:element name="getBusinessRuleIdsByBusinessRuleTypeResponse" type="tns:getBusinessRuleIdsByBusinessRuleTypeResponse"/>
    <xs:element name="getBusinessRuleInfo" type="tns:getBusinessRuleInfo"/>
    <xs:element name="getBusinessRuleInfoResponse" type="tns:getBusinessRuleInfoResponse"/>
    <xs:element name="getBusinessRuleType" type="tns:getBusinessRuleType"/>
    <xs:element name="getBusinessRuleTypeResponse" type="tns:getBusinessRuleTypeResponse"/>
    <xs:element name="getBusinessRuleTypes" type="tns:getBusinessRuleTypes"/>
    <xs:element name="getBusinessRuleTypesByAgendaType" type="tns:getBusinessRuleTypesByAgendaType"/>
    <xs:element name="getBusinessRuleTypesByAgendaTypeResponse" type="tns:getBusinessRuleTypesByAgendaTypeResponse"/>
    <xs:element name="getBusinessRuleTypesResponse" type="tns:getBusinessRuleTypesResponse"/>
    <xs:element name="getDetailedBusinessRuleInfo" type="tns:getDetailedBusinessRuleInfo"/>
    <xs:element name="getDetailedBusinessRuleInfoResponse" type="tns:getDetailedBusinessRuleInfoResponse"/>
    <xs:element name="updateBusinessRule" type="tns:updateBusinessRule"/>
    <xs:element name="updateBusinessRuleResponse" type="tns:updateBusinessRuleResponse"/>
    <xs:element name="updateBusinessRuleState" type="tns:updateBusinessRuleState"/>
    <xs:element name="updateBusinessRuleStateResponse" type="tns:updateBusinessRuleStateResponse"/>
    <xs:complexType name="getAgendaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="agendaDeterminationInfo" type="tns:agendaDeterminationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="agendaDeterminationInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaDeterminationKey" type="tns:jaxbAttributeList"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getAgendaInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:agendaInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="agendaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="agendaDeterminationInfo" type="tns:agendaDeterminationInfo"/>
            <xs:element minOccurs="0" name="businessRuleTypeInfoList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuletype" type="tns:businessRuleTypeInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="agendaOrchestration" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="bussinessRuleTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="factStructureList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRuleState">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
            <xs:element minOccurs="0" name="brState" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRuleStateResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="originalRuleId" type="xs:string"/>
            <xs:element minOccurs="0" name="type" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="state" type="xs:string"/>
            <xs:element minOccurs="0" name="compiledId" type="xs:string"/>
            <xs:element minOccurs="0" name="repositorySnapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="businessRuleElementList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuleElement" type="tns:ruleElementInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleElementInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleElemnetTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="ordinalPosition" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="businessRuleProposition" type="tns:rulePropositionInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="rulePropositionInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="comparisonDataTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="leftHandSide" type="tns:leftHandSideInfo"/>
            <xs:element minOccurs="0" name="comparisonOperatorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="rightHandSide" type="tns:rightHandSideInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="leftHandSideInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunction" type="tns:yieldValueFunctionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="yieldValueFunctionInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunctionType" type="xs:string"/>
            <xs:element minOccurs="0" name="factStructureList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="tns:factStructureInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factStructureInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="criteriaTypeInfo" type="tns:factCriteriaTypeInfo"/>
            <xs:element minOccurs="0" name="anchorFlag" type="xs:boolean"/>
            <xs:element minOccurs="0" name="resultColumnKeyTranslations" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="paramValueMap" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="staticValueDataType" type="xs:string"/>
            <xs:element minOccurs="0" name="staticValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="factStructureId" type="xs:string"/>
        <xs:attribute name="factTypeKey" type="xs:string"/>
        <xs:attribute name="staticFact" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="factCriteriaTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="factParamMap" type="tns:factParamList"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="factParamList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:factParamMapEntry"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factParamMapEntry">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="tns:factParamInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="factParamInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:int"/>
            <xs:element minOccurs="0" name="validCharacters" type="xs:string"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="defTime" type="tns:factParamDefTimeKey"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="rightHandSideInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="expectedValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleByAnchor">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="tns:businessRuleAnchorInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleAnchorInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleByAnchorResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="success" type="xs:boolean"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleType">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="xs:string"/>
            <xs:element minOccurs="0" name="arg1" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
            <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDetailedBusinessRuleInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDetailedBusinessRuleInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAgendaTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getAgendaTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleByAnchorList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="arg0" type="tns:businessRuleAnchorInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleByAnchorListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleIdsByBusinessRuleType">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleIdsByBusinessRuleTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAnchorTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getAnchorTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAgendaInfoDeterminationStructure">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAgendaInfoDeterminationStructureResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:agendaDeterminationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createNewVersion">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createNewVersionResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleTypesByAgendaType">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleTypesByAgendaTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleEnglish">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getBusinessRuleEnglishResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAnchorsByAnchorType">
        <xs:sequence>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAnchorsByAnchorTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="factParamDefTimeKey">
        <xs:restriction base="xs:string">
            <xs:enumeration value="KUALI_FACT_DEFINITION_TIME_KEY"/>
            <xs:enumeration value="KUALI_FACT_EXECUTION_TIME_KEY"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
    <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
    <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
    <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
    <xs:element name="ReadOnlyException" nillable="true" type="ns0:ReadOnlyException"/>
    <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
    <xs:element name="DependentObjectsExistException" nillable="true" type="ns0:DependentObjectsExistException"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://org.kuali.student/core/exceptions" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.kuali.student/core/exceptions">
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:element name="ReadOnlyException" type="tns:ReadOnlyException"/>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OperationFailedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="MissingParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ReadOnlyException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DependentObjectsExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgendaInfoDeterminationStructure">
    <wsdl:part name="parameters" element="tns:getAgendaInfoDeterminationStructure">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgendaInfoResponse">
    <wsdl:part name="parameters" element="tns:getAgendaInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:createBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleIdsByBusinessRuleTypeResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleIdsByBusinessRuleTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleTypesResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:deleteBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleState">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRule">
    <wsdl:part name="parameters" element="tns:updateBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnchorsByAnchorType">
    <wsdl:part name="parameters" element="tns:getAnchorsByAnchorType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReadOnlyException">
    <wsdl:part name="ReadOnlyException" element="tns:ReadOnlyException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnchorsByAnchorTypeResponse">
    <wsdl:part name="parameters" element="tns:getAnchorsByAnchorTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleTypesByAgendaTypeResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleTypesByAgendaTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleByAnchorList">
    <wsdl:part name="parameters" element="tns:getBusinessRuleByAnchorList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleEnglishResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleEnglishResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgendaInfoDeterminationStructureResponse">
    <wsdl:part name="parameters" element="tns:getAgendaInfoDeterminationStructureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgendaTypesResponse">
    <wsdl:part name="parameters" element="tns:getAgendaTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part name="DependentObjectsExistException" element="tns:DependentObjectsExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleEnglish">
    <wsdl:part name="parameters" element="tns:getBusinessRuleEnglish">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleByAnchorListResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleByAnchorListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnchorTypesResponse">
    <wsdl:part name="parameters" element="tns:getAnchorTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgendaTypes">
    <wsdl:part name="parameters" element="tns:getAgendaTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleTypes">
    <wsdl:part name="parameters" element="tns:getBusinessRuleTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleStateResponse">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleStateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleByAnchor">
    <wsdl:part name="parameters" element="tns:getBusinessRuleByAnchor">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createNewVersionResponse">
    <wsdl:part name="parameters" element="tns:createNewVersionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleTypeResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createNewVersion">
    <wsdl:part name="parameters" element="tns:createNewVersion">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBusinessRule">
    <wsdl:part name="parameters" element="tns:deleteBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDetailedBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:getDetailedBusinessRuleInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleTypesByAgendaType">
    <wsdl:part name="parameters" element="tns:getBusinessRuleTypesByAgendaType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:getBusinessRuleInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnchorTypes">
    <wsdl:part name="parameters" element="tns:getAnchorTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleIdsByBusinessRuleType">
    <wsdl:part name="parameters" element="tns:getBusinessRuleIdsByBusinessRuleType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleByAnchorResponse">
    <wsdl:part name="parameters" element="tns:getBusinessRuleByAnchorResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBusinessRule">
    <wsdl:part name="parameters" element="tns:createBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBusinessRuleType">
    <wsdl:part name="parameters" element="tns:getBusinessRuleType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDetailedBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:getDetailedBusinessRuleInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgendaInfo">
    <wsdl:part name="parameters" element="tns:getAgendaInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleManagementService">
    <wsdl:operation name="getAgendaInfo">
      <wsdl:input name="getAgendaInfo" message="tns:getAgendaInfo">
    </wsdl:input>
      <wsdl:output name="getAgendaInfoResponse" message="tns:getAgendaInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRuleState">
      <wsdl:input name="updateBusinessRuleState" message="tns:updateBusinessRuleState">
    </wsdl:input>
      <wsdl:output name="updateBusinessRuleStateResponse" message="tns:updateBusinessRuleStateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleByAnchor">
      <wsdl:input name="getBusinessRuleByAnchor" message="tns:getBusinessRuleByAnchor">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleByAnchorResponse" message="tns:getBusinessRuleByAnchorResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBusinessRule">
      <wsdl:input name="createBusinessRule" message="tns:createBusinessRule">
    </wsdl:input>
      <wsdl:output name="createBusinessRuleResponse" message="tns:createBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBusinessRule">
      <wsdl:input name="deleteBusinessRule" message="tns:deleteBusinessRule">
    </wsdl:input>
      <wsdl:output name="deleteBusinessRuleResponse" message="tns:deleteBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleType">
      <wsdl:input name="getBusinessRuleType" message="tns:getBusinessRuleType">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleTypeResponse" message="tns:getBusinessRuleTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRule">
      <wsdl:input name="updateBusinessRule" message="tns:updateBusinessRule">
    </wsdl:input>
      <wsdl:output name="updateBusinessRuleResponse" message="tns:updateBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleInfo">
      <wsdl:input name="getBusinessRuleInfo" message="tns:getBusinessRuleInfo">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleInfoResponse" message="tns:getBusinessRuleInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDetailedBusinessRuleInfo">
      <wsdl:input name="getDetailedBusinessRuleInfo" message="tns:getDetailedBusinessRuleInfo">
    </wsdl:input>
      <wsdl:output name="getDetailedBusinessRuleInfoResponse" message="tns:getDetailedBusinessRuleInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAgendaTypes">
      <wsdl:input name="getAgendaTypes" message="tns:getAgendaTypes">
    </wsdl:input>
      <wsdl:output name="getAgendaTypesResponse" message="tns:getAgendaTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleByAnchorList">
      <wsdl:input name="getBusinessRuleByAnchorList" message="tns:getBusinessRuleByAnchorList">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleByAnchorListResponse" message="tns:getBusinessRuleByAnchorListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleIdsByBusinessRuleType">
      <wsdl:input name="getBusinessRuleIdsByBusinessRuleType" message="tns:getBusinessRuleIdsByBusinessRuleType">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleIdsByBusinessRuleTypeResponse" message="tns:getBusinessRuleIdsByBusinessRuleTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnchorTypes">
      <wsdl:input name="getAnchorTypes" message="tns:getAnchorTypes">
    </wsdl:input>
      <wsdl:output name="getAnchorTypesResponse" message="tns:getAnchorTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAgendaInfoDeterminationStructure">
      <wsdl:input name="getAgendaInfoDeterminationStructure" message="tns:getAgendaInfoDeterminationStructure">
    </wsdl:input>
      <wsdl:output name="getAgendaInfoDeterminationStructureResponse" message="tns:getAgendaInfoDeterminationStructureResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createNewVersion">
      <wsdl:input name="createNewVersion" message="tns:createNewVersion">
    </wsdl:input>
      <wsdl:output name="createNewVersionResponse" message="tns:createNewVersionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleTypesByAgendaType">
      <wsdl:input name="getBusinessRuleTypesByAgendaType" message="tns:getBusinessRuleTypesByAgendaType">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleTypesByAgendaTypeResponse" message="tns:getBusinessRuleTypesByAgendaTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleTypes">
      <wsdl:input name="getBusinessRuleTypes" message="tns:getBusinessRuleTypes">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleTypesResponse" message="tns:getBusinessRuleTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleEnglish">
      <wsdl:input name="getBusinessRuleEnglish" message="tns:getBusinessRuleEnglish">
    </wsdl:input>
      <wsdl:output name="getBusinessRuleEnglishResponse" message="tns:getBusinessRuleEnglishResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnchorsByAnchorType">
      <wsdl:input name="getAnchorsByAnchorType" message="tns:getAnchorsByAnchorType">
    </wsdl:input>
      <wsdl:output name="getAnchorsByAnchorTypeResponse" message="tns:getAnchorsByAnchorTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleManagementServiceServiceSoapBinding" type="tns:RuleManagementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAgendaInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAgendaInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAgendaInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleByAnchor">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleByAnchor">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleByAnchorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRuleState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateBusinessRuleState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateBusinessRuleStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDetailedBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDetailedBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDetailedBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAgendaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAgendaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAgendaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleByAnchorList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleByAnchorList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleByAnchorListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleIdsByBusinessRuleType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleIdsByBusinessRuleType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleIdsByBusinessRuleTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnchorTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAnchorTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAnchorTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAgendaInfoDeterminationStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAgendaInfoDeterminationStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAgendaInfoDeterminationStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createNewVersion">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createNewVersion">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createNewVersionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleTypesByAgendaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleTypesByAgendaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleTypesByAgendaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnchorsByAnchorType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAnchorsByAnchorType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAnchorsByAnchorTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBusinessRuleEnglish">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBusinessRuleEnglish">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBusinessRuleEnglishResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleManagementService">
    <wsdl:port name="RuleManagementServicePort" binding="tns:RuleManagementServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RuleManagementServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
