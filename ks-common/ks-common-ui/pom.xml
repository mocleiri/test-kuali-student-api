<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>ks-common-ui</artifactId>
  <name>KS Common UI</name>
  <description>KS common-ui</description>
  <parent>
    <groupId>org.kuali.student.common</groupId>
    <artifactId>ks-common</artifactId>
    <version>1.3.0-SNAPSHOT</version>
  </parent>
  <dependencies>
    <!--
			GWT Dependencies - all dependencies here override "provided" scope
			from ks-parent so they will be picked up by any project depending on
			ks-common-ui. The correct scope will be resolved in those projects
			via dependency management from ks-parent.
		-->
    <!-- This is not required when running hosted mode via gwt codehaus plugin, but it is when using launch file -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-visualization</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-incubator</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gwtx</groupId>
      <artifactId>gwtx</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <classifier>sources</classifier>
      <scope>compile</scope>
    </dependency>
    <dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa</artifactId>
      <version>2.0.1</version>
      <scope>test</scope>
    </dependency>

    <!-- KS core & common dependencies -->
	<!--
    <dependency>
      <groupId>org.kuali.student.core</groupId>
      <artifactId>ks-core-api</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.core</groupId>
      <artifactId>ks-core-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.core</groupId>
      <artifactId>ks-core-rice</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.core</groupId>
      <artifactId>ks-core-rice</artifactId>
      <version>${project.version}</version>
    </dependency>
     -->
    <dependency>
      <groupId>org.kuali.student.common</groupId>
      <artifactId>ks-common-util</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.common</groupId>
      <artifactId>ks-common-util</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.common</groupId>
      <artifactId>ks-common-test</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.common</groupId>
      <artifactId>ks-common-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kuali.student.common</groupId>
      <artifactId>ks-rice-lessdep</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kuali.rice</groupId>
      <artifactId>rice-kim-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>20041127.091804</version>
    </dependency>
        
    <!-- Jasper Report dependencies -->
    <dependency>
		<groupId>net.sf.jasperreports</groupId>
		<artifactId>jasperreports</artifactId>
		<scope>compile</scope>
	</dependency>
	<!-- dependency>
		<groupId>net.sf.jasperreports</groupId>
		<artifactId>jasperreports-fonts</artifactId>
		<version>4.0.1</version>
	</dependency -->
    <dependency>
		<groupId>com.lowagie</groupId>
		<artifactId>itext</artifactId>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi</artifactId>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>net.sourceforge.jexcelapi</groupId>
		<artifactId>jxl</artifactId>
		<scope>compile</scope>
	</dependency>
    
    
  </dependencies>
  <profiles>
    <profile>
      <!--
				mvn -P build-codehaus-gwt org.codehaus.mojo:gwt-maven-plugin:1.1:generateAsync
				Run above command to processe java files that match service pattern and write GWT *ServuceAsync.java
				files to the default generateDirectory: target/generate-sources/gwt. Generated Async.java files have
				the same package as the Service.java it's derived from You can copy the generated file to the same
				directory as the Service file. Important Note: this only generates files when the Service extends RemoteService.
				It ignores Services that extend BaseRpcService
			-->
      <id>build-codehaus-gwt</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <webappDirectory>target/${project.artifactId}-webapp</webappDirectory>
            </configuration>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>war</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!--  Copy test resources into proper test war dir -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <copy todir="target/${project.artifactId}-webapp/WEB-INF/classes">
                      <fileset dir="src/test/resources" />
                    </copy>
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <configuration>
              <module>org.kuali.student.common.ui.CommonUITest</module>
              <runTarget>org.kuali.student.common.ui.CommonUITest/CommonUITest.html</runTarget>
              <localWorkers>2</localWorkers>
              <failOnError>true</failOnError>
              <servicePattern>**/common/ui/**/*Service.java</servicePattern>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- This is required to wire up mock message service while testing -->
        <dependency>
          <groupId>org.kuali.student.core</groupId>
          <artifactId>ks-core-impl</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>ks-hibernate</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.kuali.student.common</groupId>
          <artifactId>ks-hibernate</artifactId>
          <type>pom</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-commons-annotations</artifactId>
          <scope>test</scope>
					<version>3.2.0.Final</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>ks-eclipselink</id>
      <dependencies>
        <dependency>
          <groupId>org.kuali.student.common</groupId>
          <artifactId>ks-eclipselink</artifactId>
          <type>pom</type>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
