<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="CourseRegistrationServiceService" targetNamespace="http://student.kuali.org/wsdl/courseRegistrationService" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/courseRegistrationService" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://exceptions.common.r2.student.kuali.org/" xmlns:ns1="http://rice.kuali.org/core/v2_0" xmlns:tns="http://student.kuali.org/wsdl/courseRegistrationService" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/courseRegistrationService">
<xs:import namespace="http://rice.kuali.org/core/v2_0"/>
<xs:element name="calculateCreditLoadForStudentRegistrationRequest" type="tns:calculateCreditLoadForStudentRegistrationRequest"/>
<xs:element name="calculateCreditLoadForStudentRegistrationRequestResponse" type="tns:calculateCreditLoadForStudentRegistrationRequestResponse"/>
<xs:element name="checkStudentEligibility" type="tns:checkStudentEligibility"/>
<xs:element name="checkStudentEligibilityForTerm" type="tns:checkStudentEligibilityForTerm"/>
<xs:element name="checkStudentEligibilityForTermResponse" type="tns:checkStudentEligibilityForTermResponse"/>
<xs:element name="checkStudentEligibilityResponse" type="tns:checkStudentEligibilityResponse"/>
<xs:element name="checkStudentEligibiltyForCourseOffering" type="tns:checkStudentEligibiltyForCourseOffering"/>
<xs:element name="checkStudentEligibiltyForCourseOfferingResponse" type="tns:checkStudentEligibiltyForCourseOfferingResponse"/>
<xs:element name="checkStudentEligibiltyForRegistrationGroup" type="tns:checkStudentEligibiltyForRegistrationGroup"/>
<xs:element name="checkStudentEligibiltyForRegistrationGroupResponse" type="tns:checkStudentEligibiltyForRegistrationGroupResponse"/>
<xs:element name="createRegistrationRequest" type="tns:createRegistrationRequest"/>
<xs:element name="createRegistrationRequestFromExisting" type="tns:createRegistrationRequestFromExisting"/>
<xs:element name="createRegistrationRequestFromExistingResponse" type="tns:createRegistrationRequestFromExistingResponse"/>
<xs:element name="createRegistrationRequestResponse" type="tns:createRegistrationRequestResponse"/>
<xs:element name="deleteRegistrationRequest" type="tns:deleteRegistrationRequest"/>
<xs:element name="deleteRegistrationRequestResponse" type="tns:deleteRegistrationRequestResponse"/>
<xs:element name="getActivityRegistration" type="tns:getActivityRegistration"/>
<xs:element name="getActivityRegistrationIdsByType" type="tns:getActivityRegistrationIdsByType"/>
<xs:element name="getActivityRegistrationIdsByTypeResponse" type="tns:getActivityRegistrationIdsByTypeResponse"/>
<xs:element name="getActivityRegistrationResponse" type="tns:getActivityRegistrationResponse"/>
<xs:element name="getActivityRegistrationsByActivityOffering" type="tns:getActivityRegistrationsByActivityOffering"/>
<xs:element name="getActivityRegistrationsByActivityOfferingResponse" type="tns:getActivityRegistrationsByActivityOfferingResponse"/>
<xs:element name="getActivityRegistrationsByIds" type="tns:getActivityRegistrationsByIds"/>
<xs:element name="getActivityRegistrationsByIdsResponse" type="tns:getActivityRegistrationsByIdsResponse"/>
<xs:element name="getActivityRegistrationsByStudent" type="tns:getActivityRegistrationsByStudent"/>
<xs:element name="getActivityRegistrationsByStudentAndActivityOffering" type="tns:getActivityRegistrationsByStudentAndActivityOffering"/>
<xs:element name="getActivityRegistrationsByStudentAndActivityOfferingResponse" type="tns:getActivityRegistrationsByStudentAndActivityOfferingResponse"/>
<xs:element name="getActivityRegistrationsByStudentAndTerm" type="tns:getActivityRegistrationsByStudentAndTerm"/>
<xs:element name="getActivityRegistrationsByStudentAndTermResponse" type="tns:getActivityRegistrationsByStudentAndTermResponse"/>
<xs:element name="getActivityRegistrationsByStudentResponse" type="tns:getActivityRegistrationsByStudentResponse"/>
<xs:element name="getActivityRegistrationsForCourseRegistration" type="tns:getActivityRegistrationsForCourseRegistration"/>
<xs:element name="getActivityRegistrationsForCourseRegistrationResponse" type="tns:getActivityRegistrationsForCourseRegistrationResponse"/>
<xs:element name="getCourseRegistration" type="tns:getCourseRegistration"/>
<xs:element name="getCourseRegistrationIdsByType" type="tns:getCourseRegistrationIdsByType"/>
<xs:element name="getCourseRegistrationIdsByTypeResponse" type="tns:getCourseRegistrationIdsByTypeResponse"/>
<xs:element name="getCourseRegistrationResponse" type="tns:getCourseRegistrationResponse"/>
<xs:element name="getCourseRegistrationsByCourseOffering" type="tns:getCourseRegistrationsByCourseOffering"/>
<xs:element name="getCourseRegistrationsByCourseOfferingResponse" type="tns:getCourseRegistrationsByCourseOfferingResponse"/>
<xs:element name="getCourseRegistrationsByIds" type="tns:getCourseRegistrationsByIds"/>
<xs:element name="getCourseRegistrationsByIdsResponse" type="tns:getCourseRegistrationsByIdsResponse"/>
<xs:element name="getCourseRegistrationsByStudent" type="tns:getCourseRegistrationsByStudent"/>
<xs:element name="getCourseRegistrationsByStudentAndCourseOffering" type="tns:getCourseRegistrationsByStudentAndCourseOffering"/>
<xs:element name="getCourseRegistrationsByStudentAndCourseOfferingResponse" type="tns:getCourseRegistrationsByStudentAndCourseOfferingResponse"/>
<xs:element name="getCourseRegistrationsByStudentAndTerm" type="tns:getCourseRegistrationsByStudentAndTerm"/>
<xs:element name="getCourseRegistrationsByStudentAndTermResponse" type="tns:getCourseRegistrationsByStudentAndTermResponse"/>
<xs:element name="getCourseRegistrationsByStudentResponse" type="tns:getCourseRegistrationsByStudentResponse"/>
<xs:element name="getEligibleRegistrationGroupsForStudentInCourseOffering" type="tns:getEligibleRegistrationGroupsForStudentInCourseOffering"/>
<xs:element name="getEligibleRegistrationGroupsForStudentInCourseOfferingResponse" type="tns:getEligibleRegistrationGroupsForStudentInCourseOfferingResponse"/>
<xs:element name="getRegistrationRequest" type="tns:getRegistrationRequest"/>
<xs:element name="getRegistrationRequestIdsByType" type="tns:getRegistrationRequestIdsByType"/>
<xs:element name="getRegistrationRequestIdsByTypeResponse" type="tns:getRegistrationRequestIdsByTypeResponse"/>
<xs:element name="getRegistrationRequestItemsByCourseOfferingAndStudent" type="tns:getRegistrationRequestItemsByCourseOfferingAndStudent"/>
<xs:element name="getRegistrationRequestItemsByCourseOfferingAndStudentResponse" type="tns:getRegistrationRequestItemsByCourseOfferingAndStudentResponse"/>
<xs:element name="getRegistrationRequestItemsForCourseRegistration" type="tns:getRegistrationRequestItemsForCourseRegistration"/>
<xs:element name="getRegistrationRequestItemsForCourseRegistrationResponse" type="tns:getRegistrationRequestItemsForCourseRegistrationResponse"/>
<xs:element name="getRegistrationRequestResponse" type="tns:getRegistrationRequestResponse"/>
<xs:element name="getRegistrationRequestsByIds" type="tns:getRegistrationRequestsByIds"/>
<xs:element name="getRegistrationRequestsByIdsResponse" type="tns:getRegistrationRequestsByIdsResponse"/>
<xs:element name="getRegistrationRequestsByRequestor" type="tns:getRegistrationRequestsByRequestor"/>
<xs:element name="getRegistrationRequestsByRequestorResponse" type="tns:getRegistrationRequestsByRequestorResponse"/>
<xs:element name="getUnsubmittedRegistrationRequestsByRequestorAndTerm" type="tns:getUnsubmittedRegistrationRequestsByRequestorAndTerm"/>
<xs:element name="getUnsubmittedRegistrationRequestsByRequestorAndTermResponse" type="tns:getUnsubmittedRegistrationRequestsByRequestorAndTermResponse"/>
<xs:element name="searchForActivityRegistrationIds" type="tns:searchForActivityRegistrationIds"/>
<xs:element name="searchForActivityRegistrationIdsResponse" type="tns:searchForActivityRegistrationIdsResponse"/>
<xs:element name="searchForActivityRegistrations" type="tns:searchForActivityRegistrations"/>
<xs:element name="searchForActivityRegistrationsResponse" type="tns:searchForActivityRegistrationsResponse"/>
<xs:element name="searchForCourseRegistrationIds" type="tns:searchForCourseRegistrationIds"/>
<xs:element name="searchForCourseRegistrationIdsResponse" type="tns:searchForCourseRegistrationIdsResponse"/>
<xs:element name="searchForCourseRegistrations" type="tns:searchForCourseRegistrations"/>
<xs:element name="searchForCourseRegistrationsResponse" type="tns:searchForCourseRegistrationsResponse"/>
<xs:element name="searchForRegistrationRequestIds" type="tns:searchForRegistrationRequestIds"/>
<xs:element name="searchForRegistrationRequestIdsResponse" type="tns:searchForRegistrationRequestIdsResponse"/>
<xs:element name="searchForRegistrationRequests" type="tns:searchForRegistrationRequests"/>
<xs:element name="searchForRegistrationRequestsResponse" type="tns:searchForRegistrationRequestsResponse"/>
<xs:element name="submitRegistrationRequest" type="tns:submitRegistrationRequest"/>
<xs:element name="submitRegistrationRequestResponse" type="tns:submitRegistrationRequestResponse"/>
<xs:element name="updateRegistrationRequest" type="tns:updateRegistrationRequest"/>
<xs:element name="updateRegistrationRequestResponse" type="tns:updateRegistrationRequestResponse"/>
<xs:element name="validateRegistrationRequest" type="tns:validateRegistrationRequest"/>
<xs:element name="validateRegistrationRequestResponse" type="tns:validateRegistrationRequestResponse"/>
<xs:element name="verifyRegistrationRequestForSubmission" type="tns:verifyRegistrationRequestForSubmission"/>
<xs:element name="verifyRegistrationRequestForSubmissionResponse" type="tns:verifyRegistrationRequestForSubmissionResponse"/>
<xs:complexType name="searchForCourseRegistrations">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ContextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="authenticatedPrincipalId" type="xs:string"/>
<xs:element minOccurs="0" name="principalId" type="xs:string"/>
<xs:element minOccurs="0" name="currentDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="locale" type="tns:LocaleInfo"/>
<xs:element minOccurs="0" name="timeZone" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LocaleInfo">
<xs:sequence>
<xs:element minOccurs="0" name="localeLanguage" type="xs:string"/>
<xs:element minOccurs="0" name="localeVariant" type="xs:string"/>
<xs:element minOccurs="0" name="localeRegion" type="xs:string"/>
<xs:element minOccurs="0" name="localeScript" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType final="extension restriction" name="AttributeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="key" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseRegistrationsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CourseRegistrationInfo">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="credits" type="xs:string"/>
<xs:element minOccurs="0" name="gradingOptionId" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="MetaInfo">
<xs:sequence>
<xs:element minOccurs="0" name="versionInd" type="xs:string"/>
<xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createId" type="xs:string"/>
<xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="updateId" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationIdsByType">
<xs:sequence>
<xs:element minOccurs="0" name="courseRegistrationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationIdsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="verifyRegistrationRequestForSubmission">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="verifyRegistrationRequestForSubmissionResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ValidationResultInfo">
<xs:sequence>
<xs:element minOccurs="0" name="element" type="xs:string"/>
<xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseRegistrationIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseRegistrationIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="StatusInfo">
<xs:sequence>
<xs:element minOccurs="0" name="isSuccess" type="xs:boolean"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationRequestInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="requestorId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="registrationRequestItems" type="tns:RegistrationRequestItemInfo"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="RichTextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="plain" type="xs:string"/>
<xs:element minOccurs="0" name="formatted" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationRequestItemInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="newRegistrationGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="existingRegistrationGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="credits" type="xs:string"/>
<xs:element minOccurs="0" name="gradingOptionId" type="xs:string"/>
<xs:element minOccurs="0" name="okToWaitlist" type="xs:boolean"/>
<xs:element minOccurs="0" name="okToHoldUntilList" type="xs:boolean"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByStudentAndTerm">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByStudentAndTermResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestItemsForCourseRegistration">
<xs:sequence>
<xs:element minOccurs="0" name="courseRegistrationId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestItemsForCourseRegistrationResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationRequestItemInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationRequestFromExisting">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationRequestFromExistingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationRequestInfo" type="tns:RegistrationRequestInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRegistrationRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByStudentAndActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByStudentAndActivityOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ActivityRegistrationInfo">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="registrationRequestInfo" type="tns:RegistrationRequestInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="courseRegistrationIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityRegistrationIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistration">
<xs:sequence>
<xs:element minOccurs="0" name="activityRegistrationId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUnsubmittedRegistrationRequestsByRequestorAndTerm">
<xs:sequence>
<xs:element minOccurs="0" name="requestorId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUnsubmittedRegistrationRequestsByRequestorAndTermResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationIdsByType">
<xs:sequence>
<xs:element minOccurs="0" name="activityRegistrationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationIdsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestItemsByCourseOfferingAndStudent">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestItemsByCourseOfferingAndStudentResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationRequestItemInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistration">
<xs:sequence>
<xs:element minOccurs="0" name="courseRegistrationId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibility">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibilityResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getEligibleRegistrationGroupsForStudentInCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getEligibleRegistrationGroupsForStudentInCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationGroupInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationCode" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="isHonorsOffering" type="xs:boolean"/>
<xs:element minOccurs="0" name="maximumEnrollment" type="xs:int"/>
<xs:element minOccurs="0" name="isGenerated" type="xs:boolean"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByStudentAndCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByStudentAndCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestIdsByType">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestIdsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibilityForTerm">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibilityForTermResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="submitRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="submitRegistrationRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationResponseInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationResponseInfo">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="hasFailed" type="xs:boolean"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="messages" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="registrationResponseItems" type="tns:RegistrationResponseItemInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationResponseItemInfo">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestItemId" type="xs:string"/>
<xs:element minOccurs="0" name="operationStatus" type="tns:OperationStatusInfo"/>
<xs:element minOccurs="0" name="courseRegistrationId" type="xs:string"/>
<xs:element minOccurs="0" name="courseWaitlistEntryId" type="xs:string"/>
<xs:element minOccurs="0" name="holdUntilListEntryId" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="OperationStatusInfo">
<xs:sequence>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="messages" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="warnings" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="errors" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByStudent">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByStudentResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityRegistrations">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityRegistrationsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityRegistrationIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityRegistrationIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationRequests">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationRequestsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByActivityOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="registrationRequestIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibiltyForCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibiltyForCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationRequestIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationRequestIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="validationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="registrationRequestTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="registrationRequestInfo" type="tns:RegistrationRequestInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateRegistrationRequestResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestsByRequestor">
<xs:sequence>
<xs:element minOccurs="0" name="pesonId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationRequestsByRequestorResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsForCourseRegistration">
<xs:sequence>
<xs:element minOccurs="0" name="courseRegistrationId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsForCourseRegistrationResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByStudentAndTerm">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityRegistrationsByStudentAndTermResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibiltyForRegistrationGroup">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkStudentEligibiltyForRegistrationGroupResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByStudent">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseRegistrationsByStudentResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseRegistrationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateCreditLoadForStudentRegistrationRequest">
<xs:sequence>
<xs:element minOccurs="0" name="registrationRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateCreditLoadForStudentRegistrationRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CreditLoadInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CreditLoadInfo">
<xs:sequence>
<xs:element minOccurs="0" name="studentId" type="xs:string"/>
<xs:element minOccurs="0" name="creditLoad" type="xs:string"/>
<xs:element minOccurs="0" name="creditLimit" type="xs:string"/>
<xs:element minOccurs="0" name="additionalCredits" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="errorLevel">
<xs:restriction base="xs:string">
<xs:enumeration value="OK"/>
<xs:enumeration value="WARN"/>
<xs:enumeration value="ERROR"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
<xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
<xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
<xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
<xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
<xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
<xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
<xs:element name="ReadOnlyException" nillable="true" type="ns0:ReadOnlyException"/>
<xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://rice.kuali.org/core/v2_0" elementFormDefault="qualified" targetNamespace="http://rice.kuali.org/core/v2_0" version="1.0">
<xs:element name="and" type="tns:AndType"/>
<xs:element name="dateTimeValue" type="tns:CriteriaDateTimeValueType"/>
<xs:element name="decimalValue" type="tns:CriteriaDecimalValueType"/>
<xs:element name="equal" type="tns:EqualType"/>
<xs:element name="greaterThan" type="tns:GreaterThanType"/>
<xs:element name="greaterThanOrEqual" type="tns:GreaterThanOrEqualType"/>
<xs:element name="in" type="tns:InType"/>
<xs:element name="integerValue" type="tns:CriteriaIntegerValueType"/>
<xs:element name="lessThan" type="tns:LessThanType"/>
<xs:element name="lessThanOrEqual" type="tns:LessThanOrEqualType"/>
<xs:element name="like" type="tns:LikeType"/>
<xs:element name="notEqual" type="tns:NotEqualType"/>
<xs:element name="notIn" type="tns:NotInType"/>
<xs:element name="notLike" type="tns:NotLikeType"/>
<xs:element name="notNull" type="tns:NotNullType"/>
<xs:element name="null" type="tns:NullType"/>
<xs:element name="or" type="tns:OrType"/>
<xs:element name="queryByCriteria" type="tns:QueryByCriteriaType"/>
<xs:element name="stringValue" type="tns:CriteriaStringValueType"/>
<xs:complexType final="extension restriction" name="QueryByCriteriaType">
<xs:sequence>
<xs:choice minOccurs="0">
<xs:element ref="tns:and"/>
<xs:element ref="tns:equal"/>
<xs:element ref="tns:greaterThan"/>
<xs:element ref="tns:greaterThanOrEqual"/>
<xs:element ref="tns:in"/>
<xs:element ref="tns:lessThan"/>
<xs:element ref="tns:lessThanOrEqual"/>
<xs:element ref="tns:like"/>
<xs:element ref="tns:notEqual"/>
<xs:element ref="tns:notIn"/>
<xs:element ref="tns:notLike"/>
<xs:element ref="tns:notNull"/>
<xs:element ref="tns:null"/>
<xs:element ref="tns:or"/>
</xs:choice>
<xs:element minOccurs="0" name="startAtIndex" type="xs:int"/>
<xs:element minOccurs="0" name="maxResults" type="xs:int"/>
<xs:element name="countFlag" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType final="extension restriction" name="AndType">
<xs:complexContent>
<xs:extension base="tns:CompositePredicateType">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType abstract="true" name="CompositePredicateType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice maxOccurs="unbounded">
<xs:element ref="tns:and"/>
<xs:element ref="tns:equal"/>
<xs:element ref="tns:greaterThan"/>
<xs:element ref="tns:greaterThanOrEqual"/>
<xs:element ref="tns:in"/>
<xs:element ref="tns:lessThan"/>
<xs:element ref="tns:lessThanOrEqual"/>
<xs:element ref="tns:like"/>
<xs:element ref="tns:notEqual"/>
<xs:element ref="tns:notIn"/>
<xs:element ref="tns:notLike"/>
<xs:element ref="tns:notNull"/>
<xs:element ref="tns:null"/>
<xs:element ref="tns:or"/>
</xs:choice>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType abstract="true" name="abstractPredicate">
<xs:sequence/>
</xs:complexType>
<xs:complexType final="extension restriction" name="EqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:simpleType name="CriteriaStringValueType">
<xs:restriction base="xs:string"/>
</xs:simpleType>
<xs:simpleType name="CriteriaDateTimeValueType">
<xs:restriction base="xs:dateTime"/>
</xs:simpleType>
<xs:simpleType name="CriteriaDecimalValueType">
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
<xs:simpleType name="CriteriaIntegerValueType">
<xs:restriction base="xs:integer"/>
</xs:simpleType>
<xs:complexType final="extension restriction" name="GreaterThanType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="GreaterThanOrEqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="InType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice maxOccurs="unbounded">
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:decimalValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="LessThanType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="LessThanOrEqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="LikeType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:element ref="tns:stringValue"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotEqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotInType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice maxOccurs="unbounded">
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:decimalValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotLikeType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:element ref="tns:stringValue"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotNullType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NullType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="OrType">
<xs:complexContent>
<xs:extension base="tns:CompositePredicateType">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://exceptions.common.r2.student.kuali.org/" targetNamespace="http://exceptions.common.r2.student.kuali.org/" version="1.0">
<xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
<xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
<xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
<xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
<xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
<xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
<xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
<xs:element name="ReadOnlyException" type="tns:ReadOnlyException"/>
<xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
<xs:complexType name="InvalidParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="OperationFailedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="MissingParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="PermissionDeniedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DoesNotExistException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="VersionMismatchException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DataValidationErrorException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" nillable="true" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ReadOnlyException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AlreadyExistsException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRegistrationRequest">
    <wsdl:part name="parameters" element="tns:validateRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByStudentAndTerm">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByStudentAndTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitRegistrationRequest">
    <wsdl:part name="parameters" element="tns:submitRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestItemsForCourseRegistration">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestItemsForCourseRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:deleteRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibiltyForCourseOffering">
    <wsdl:part name="parameters" element="tns:checkStudentEligibiltyForCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnsubmittedRegistrationRequestsByRequestorAndTermResponse">
    <wsdl:part name="parameters" element="tns:getUnsubmittedRegistrationRequestsByRequestorAndTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibiltyForRegistrationGroup">
    <wsdl:part name="parameters" element="tns:checkStudentEligibiltyForRegistrationGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestsByRequestor">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestsByRequestor">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateCreditLoadForStudentRegistrationRequest">
    <wsdl:part name="parameters" element="tns:calculateCreditLoadForStudentRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsForCourseRegistration">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsForCourseRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationIdsByType">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationIdsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestsByRequestorResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestsByRequestorResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByActivityOffering">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByStudentAndTermResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByStudentAndTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequest">
    <wsdl:part name="parameters" element="tns:getRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationRequestFromExistingResponse">
    <wsdl:part name="parameters" element="tns:createRegistrationRequestFromExistingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityRegistrationsResponse">
    <wsdl:part name="parameters" element="tns:searchForActivityRegistrationsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestsByIds">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationIdsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationIdsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseRegistrations">
    <wsdl:part name="parameters" element="tns:searchForCourseRegistrations">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestIdsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestIdsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationRequestFromExisting">
    <wsdl:part name="parameters" element="tns:createRegistrationRequestFromExisting">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByStudentAndCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByStudentAndCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibilityResponse">
    <wsdl:part name="parameters" element="tns:checkStudentEligibilityResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyRegistrationRequestForSubmissionResponse">
    <wsdl:part name="parameters" element="tns:verifyRegistrationRequestForSubmissionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibility">
    <wsdl:part name="parameters" element="tns:checkStudentEligibility">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyRegistrationRequestForSubmission">
    <wsdl:part name="parameters" element="tns:verifyRegistrationRequestForSubmission">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:updateRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:validateRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEligibleRegistrationGroupsForStudentInCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getEligibleRegistrationGroupsForStudentInCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibilityForTerm">
    <wsdl:part name="parameters" element="tns:checkStudentEligibilityForTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationIdsByType">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationIdsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestIdsByType">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestIdsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByStudentAndActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByStudentAndActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityRegistrationIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForActivityRegistrationIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsForCourseRegistrationResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsForCourseRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibilityForTermResponse">
    <wsdl:part name="parameters" element="tns:checkStudentEligibilityForTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistration">
    <wsdl:part name="parameters" element="tns:getActivityRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnsubmittedRegistrationRequestsByRequestorAndTerm">
    <wsdl:part name="parameters" element="tns:getUnsubmittedRegistrationRequestsByRequestorAndTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByStudent">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByStudent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestItemsForCourseRegistrationResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestItemsForCourseRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationRequestIds">
    <wsdl:part name="parameters" element="tns:searchForRegistrationRequestIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationRequestsResponse">
    <wsdl:part name="parameters" element="tns:searchForRegistrationRequestsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseRegistrationIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForCourseRegistrationIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:submitRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReadOnlyException">
    <wsdl:part name="ReadOnlyException" element="tns:ReadOnlyException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationIdsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationIdsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByIds">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationRequest">
    <wsdl:part name="parameters" element="tns:createRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByStudentAndTermResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByStudentAndTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityRegistrations">
    <wsdl:part name="parameters" element="tns:searchForActivityRegistrations">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationRequests">
    <wsdl:part name="parameters" element="tns:searchForRegistrationRequests">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseRegistrationIds">
    <wsdl:part name="parameters" element="tns:searchForCourseRegistrationIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityRegistrationIds">
    <wsdl:part name="parameters" element="tns:searchForActivityRegistrationIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestItemsByCourseOfferingAndStudent">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestItemsByCourseOfferingAndStudent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEligibleRegistrationGroupsForStudentInCourseOffering">
    <wsdl:part name="parameters" element="tns:getEligibleRegistrationGroupsForStudentInCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByStudentAndActivityOffering">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByStudentAndActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibiltyForRegistrationGroupResponse">
    <wsdl:part name="parameters" element="tns:checkStudentEligibiltyForRegistrationGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistration">
    <wsdl:part name="parameters" element="tns:getCourseRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByStudentResponse">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByStudentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByStudent">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByStudent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseRegistrationsResponse">
    <wsdl:part name="parameters" element="tns:searchForCourseRegistrationsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityRegistrationsByIds">
    <wsdl:part name="parameters" element="tns:getActivityRegistrationsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByStudentResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByStudentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationRequestIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForRegistrationRequestIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkStudentEligibiltyForCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:checkStudentEligibiltyForCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationRequest">
    <wsdl:part name="parameters" element="tns:deleteRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByCourseOffering">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestItemsByCourseOfferingAndStudentResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestItemsByCourseOfferingAndStudentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRegistrationRequest">
    <wsdl:part name="parameters" element="tns:updateRegistrationRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateCreditLoadForStudentRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:calculateCreditLoadForStudentRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByStudentAndTerm">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByStudentAndTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByStudentAndCourseOffering">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByStudentAndCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseRegistrationsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getCourseRegistrationsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationRequestResponse">
    <wsdl:part name="parameters" element="tns:createRegistrationRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CourseRegistrationService">
    <wsdl:operation name="searchForCourseRegistrations">
      <wsdl:input name="searchForCourseRegistrations" message="tns:searchForCourseRegistrations">
    </wsdl:input>
      <wsdl:output name="searchForCourseRegistrationsResponse" message="tns:searchForCourseRegistrationsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationIdsByType">
      <wsdl:input name="getCourseRegistrationIdsByType" message="tns:getCourseRegistrationIdsByType">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationIdsByTypeResponse" message="tns:getCourseRegistrationIdsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyRegistrationRequestForSubmission">
      <wsdl:input name="verifyRegistrationRequestForSubmission" message="tns:verifyRegistrationRequestForSubmission">
    </wsdl:input>
      <wsdl:output name="verifyRegistrationRequestForSubmissionResponse" message="tns:verifyRegistrationRequestForSubmissionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForCourseRegistrationIds">
      <wsdl:input name="searchForCourseRegistrationIds" message="tns:searchForCourseRegistrationIds">
    </wsdl:input>
      <wsdl:output name="searchForCourseRegistrationIdsResponse" message="tns:searchForCourseRegistrationIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationRequest">
      <wsdl:input name="deleteRegistrationRequest" message="tns:deleteRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="deleteRegistrationRequestResponse" message="tns:deleteRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequest">
      <wsdl:input name="getRegistrationRequest" message="tns:getRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="getRegistrationRequestResponse" message="tns:getRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByStudentAndTerm">
      <wsdl:input name="getCourseRegistrationsByStudentAndTerm" message="tns:getCourseRegistrationsByStudentAndTerm">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByStudentAndTermResponse" message="tns:getCourseRegistrationsByStudentAndTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestItemsForCourseRegistration">
      <wsdl:input name="getRegistrationRequestItemsForCourseRegistration" message="tns:getRegistrationRequestItemsForCourseRegistration">
    </wsdl:input>
      <wsdl:output name="getRegistrationRequestItemsForCourseRegistrationResponse" message="tns:getRegistrationRequestItemsForCourseRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationRequestFromExisting">
      <wsdl:input name="createRegistrationRequestFromExisting" message="tns:createRegistrationRequestFromExisting">
    </wsdl:input>
      <wsdl:output name="createRegistrationRequestFromExistingResponse" message="tns:createRegistrationRequestFromExistingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRegistrationRequest">
      <wsdl:input name="updateRegistrationRequest" message="tns:updateRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="updateRegistrationRequestResponse" message="tns:updateRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByStudentAndActivityOffering">
      <wsdl:input name="getActivityRegistrationsByStudentAndActivityOffering" message="tns:getActivityRegistrationsByStudentAndActivityOffering">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByStudentAndActivityOfferingResponse" message="tns:getActivityRegistrationsByStudentAndActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByCourseOffering">
      <wsdl:input name="getCourseRegistrationsByCourseOffering" message="tns:getCourseRegistrationsByCourseOffering">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByCourseOfferingResponse" message="tns:getCourseRegistrationsByCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationRequest">
      <wsdl:input name="createRegistrationRequest" message="tns:createRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="createRegistrationRequestResponse" message="tns:createRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByIds">
      <wsdl:input name="getCourseRegistrationsByIds" message="tns:getCourseRegistrationsByIds">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByIdsResponse" message="tns:getCourseRegistrationsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByIds">
      <wsdl:input name="getActivityRegistrationsByIds" message="tns:getActivityRegistrationsByIds">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByIdsResponse" message="tns:getActivityRegistrationsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistration">
      <wsdl:input name="getActivityRegistration" message="tns:getActivityRegistration">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationResponse" message="tns:getActivityRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnsubmittedRegistrationRequestsByRequestorAndTerm">
      <wsdl:input name="getUnsubmittedRegistrationRequestsByRequestorAndTerm" message="tns:getUnsubmittedRegistrationRequestsByRequestorAndTerm">
    </wsdl:input>
      <wsdl:output name="getUnsubmittedRegistrationRequestsByRequestorAndTermResponse" message="tns:getUnsubmittedRegistrationRequestsByRequestorAndTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationIdsByType">
      <wsdl:input name="getActivityRegistrationIdsByType" message="tns:getActivityRegistrationIdsByType">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationIdsByTypeResponse" message="tns:getActivityRegistrationIdsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestItemsByCourseOfferingAndStudent">
      <wsdl:input name="getRegistrationRequestItemsByCourseOfferingAndStudent" message="tns:getRegistrationRequestItemsByCourseOfferingAndStudent">
    </wsdl:input>
      <wsdl:output name="getRegistrationRequestItemsByCourseOfferingAndStudentResponse" message="tns:getRegistrationRequestItemsByCourseOfferingAndStudentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistration">
      <wsdl:input name="getCourseRegistration" message="tns:getCourseRegistration">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationResponse" message="tns:getCourseRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibility">
      <wsdl:input name="checkStudentEligibility" message="tns:checkStudentEligibility">
    </wsdl:input>
      <wsdl:output name="checkStudentEligibilityResponse" message="tns:checkStudentEligibilityResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEligibleRegistrationGroupsForStudentInCourseOffering">
      <wsdl:input name="getEligibleRegistrationGroupsForStudentInCourseOffering" message="tns:getEligibleRegistrationGroupsForStudentInCourseOffering">
    </wsdl:input>
      <wsdl:output name="getEligibleRegistrationGroupsForStudentInCourseOfferingResponse" message="tns:getEligibleRegistrationGroupsForStudentInCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByStudentAndCourseOffering">
      <wsdl:input name="getCourseRegistrationsByStudentAndCourseOffering" message="tns:getCourseRegistrationsByStudentAndCourseOffering">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByStudentAndCourseOfferingResponse" message="tns:getCourseRegistrationsByStudentAndCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestIdsByType">
      <wsdl:input name="getRegistrationRequestIdsByType" message="tns:getRegistrationRequestIdsByType">
    </wsdl:input>
      <wsdl:output name="getRegistrationRequestIdsByTypeResponse" message="tns:getRegistrationRequestIdsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibilityForTerm">
      <wsdl:input name="checkStudentEligibilityForTerm" message="tns:checkStudentEligibilityForTerm">
    </wsdl:input>
      <wsdl:output name="checkStudentEligibilityForTermResponse" message="tns:checkStudentEligibilityForTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitRegistrationRequest">
      <wsdl:input name="submitRegistrationRequest" message="tns:submitRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="submitRegistrationRequestResponse" message="tns:submitRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByStudent">
      <wsdl:input name="getActivityRegistrationsByStudent" message="tns:getActivityRegistrationsByStudent">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByStudentResponse" message="tns:getActivityRegistrationsByStudentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityRegistrations">
      <wsdl:input name="searchForActivityRegistrations" message="tns:searchForActivityRegistrations">
    </wsdl:input>
      <wsdl:output name="searchForActivityRegistrationsResponse" message="tns:searchForActivityRegistrationsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityRegistrationIds">
      <wsdl:input name="searchForActivityRegistrationIds" message="tns:searchForActivityRegistrationIds">
    </wsdl:input>
      <wsdl:output name="searchForActivityRegistrationIdsResponse" message="tns:searchForActivityRegistrationIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationRequests">
      <wsdl:input name="searchForRegistrationRequests" message="tns:searchForRegistrationRequests">
    </wsdl:input>
      <wsdl:output name="searchForRegistrationRequestsResponse" message="tns:searchForRegistrationRequestsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByActivityOffering">
      <wsdl:input name="getActivityRegistrationsByActivityOffering" message="tns:getActivityRegistrationsByActivityOffering">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByActivityOfferingResponse" message="tns:getActivityRegistrationsByActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestsByIds">
      <wsdl:input name="getRegistrationRequestsByIds" message="tns:getRegistrationRequestsByIds">
    </wsdl:input>
      <wsdl:output name="getRegistrationRequestsByIdsResponse" message="tns:getRegistrationRequestsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibiltyForCourseOffering">
      <wsdl:input name="checkStudentEligibiltyForCourseOffering" message="tns:checkStudentEligibiltyForCourseOffering">
    </wsdl:input>
      <wsdl:output name="checkStudentEligibiltyForCourseOfferingResponse" message="tns:checkStudentEligibiltyForCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationRequestIds">
      <wsdl:input name="searchForRegistrationRequestIds" message="tns:searchForRegistrationRequestIds">
    </wsdl:input>
      <wsdl:output name="searchForRegistrationRequestIdsResponse" message="tns:searchForRegistrationRequestIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRegistrationRequest">
      <wsdl:input name="validateRegistrationRequest" message="tns:validateRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="validateRegistrationRequestResponse" message="tns:validateRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestsByRequestor">
      <wsdl:input name="getRegistrationRequestsByRequestor" message="tns:getRegistrationRequestsByRequestor">
    </wsdl:input>
      <wsdl:output name="getRegistrationRequestsByRequestorResponse" message="tns:getRegistrationRequestsByRequestorResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsForCourseRegistration">
      <wsdl:input name="getActivityRegistrationsForCourseRegistration" message="tns:getActivityRegistrationsForCourseRegistration">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationsForCourseRegistrationResponse" message="tns:getActivityRegistrationsForCourseRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByStudentAndTerm">
      <wsdl:input name="getActivityRegistrationsByStudentAndTerm" message="tns:getActivityRegistrationsByStudentAndTerm">
    </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByStudentAndTermResponse" message="tns:getActivityRegistrationsByStudentAndTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibiltyForRegistrationGroup">
      <wsdl:input name="checkStudentEligibiltyForRegistrationGroup" message="tns:checkStudentEligibiltyForRegistrationGroup">
    </wsdl:input>
      <wsdl:output name="checkStudentEligibiltyForRegistrationGroupResponse" message="tns:checkStudentEligibiltyForRegistrationGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByStudent">
      <wsdl:input name="getCourseRegistrationsByStudent" message="tns:getCourseRegistrationsByStudent">
    </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByStudentResponse" message="tns:getCourseRegistrationsByStudentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateCreditLoadForStudentRegistrationRequest">
      <wsdl:input name="calculateCreditLoadForStudentRegistrationRequest" message="tns:calculateCreditLoadForStudentRegistrationRequest">
    </wsdl:input>
      <wsdl:output name="calculateCreditLoadForStudentRegistrationRequestResponse" message="tns:calculateCreditLoadForStudentRegistrationRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CourseRegistrationServiceServiceSoapBinding" type="tns:CourseRegistrationService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchForCourseRegistrations">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForCourseRegistrations">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForCourseRegistrationsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationIdsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistrationIdsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationIdsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyRegistrationRequestForSubmission">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="verifyRegistrationRequestForSubmission">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="verifyRegistrationRequestForSubmissionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForCourseRegistrationIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForCourseRegistrationIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForCourseRegistrationIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByStudentAndTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistrationsByStudentAndTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByStudentAndTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestItemsForCourseRegistration">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationRequestItemsForCourseRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationRequestItemsForCourseRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationRequestFromExisting">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRegistrationRequestFromExisting">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRegistrationRequestFromExistingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByStudentAndActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationsByStudentAndActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByStudentAndActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistrationsByCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistrationsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistration">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnsubmittedRegistrationRequestsByRequestorAndTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnsubmittedRegistrationRequestsByRequestorAndTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnsubmittedRegistrationRequestsByRequestorAndTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationIdsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationIdsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationIdsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestItemsByCourseOfferingAndStudent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationRequestItemsByCourseOfferingAndStudent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationRequestItemsByCourseOfferingAndStudentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistration">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibility">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkStudentEligibility">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkStudentEligibilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByStudentAndCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistrationsByStudentAndCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByStudentAndCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEligibleRegistrationGroupsForStudentInCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEligibleRegistrationGroupsForStudentInCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEligibleRegistrationGroupsForStudentInCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibilityForTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkStudentEligibilityForTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkStudentEligibilityForTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestIdsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationRequestIdsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationRequestIdsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="submitRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByStudent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationsByStudent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByStudentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityRegistrationIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForActivityRegistrationIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForActivityRegistrationIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityRegistrations">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForActivityRegistrations">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForActivityRegistrationsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationRequests">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForRegistrationRequests">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForRegistrationRequestsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationsByActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibiltyForCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkStudentEligibiltyForCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkStudentEligibiltyForCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationRequestsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationRequestsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationRequestIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForRegistrationRequestIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForRegistrationRequestIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationRequestsByRequestor">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationRequestsByRequestor">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationRequestsByRequestorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsForCourseRegistration">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationsForCourseRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationsForCourseRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkStudentEligibiltyForRegistrationGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkStudentEligibiltyForRegistrationGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkStudentEligibiltyForRegistrationGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityRegistrationsByStudentAndTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityRegistrationsByStudentAndTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityRegistrationsByStudentAndTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseRegistrationsByStudent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseRegistrationsByStudent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseRegistrationsByStudentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateCreditLoadForStudentRegistrationRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="calculateCreditLoadForStudentRegistrationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="calculateCreditLoadForStudentRegistrationRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CourseRegistrationServiceService">
    <wsdl:port name="CourseRegistrationServicePort" binding="tns:CourseRegistrationServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/CourseRegistrationServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
