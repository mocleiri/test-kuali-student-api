<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions name="CourseOfferingSetService" targetNamespace="http://student.kuali.org/wsdl/courseOfferingSet" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/courseOfferingSet" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:types>
        <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/courseOfferingSet" xmlns:ns1="http://rice.kuali.org/core/v2_0" xmlns:tns="http://student.kuali.org/wsdl/courseOfferingSet" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:import namespace="http://rice.kuali.org/core/v2_0"/>
            <xs:element name="createSoc" type="tns:createSoc"/>
            <xs:element name="createSocResponse" type="tns:createSocResponse"/>
            <xs:element name="createSocRolloverResult" type="tns:createSocRolloverResult"/>
            <xs:element name="createSocRolloverResultItem" type="tns:createSocRolloverResultItem"/>
            <xs:element name="createSocRolloverResultItemResponse" type="tns:createSocRolloverResultItemResponse"/>
            <xs:element name="createSocRolloverResultItems" type="tns:createSocRolloverResultItems"/>
            <xs:element name="createSocRolloverResultItemsResponse" type="tns:createSocRolloverResultItemsResponse"/>
            <xs:element name="createSocRolloverResultResponse" type="tns:createSocRolloverResultResponse"/>
            <xs:element name="deleteCourseOfferingsBySoc" type="tns:deleteCourseOfferingsBySoc"/>
            <xs:element name="deleteCourseOfferingsBySocResponse" type="tns:deleteCourseOfferingsBySocResponse"/>
            <xs:element name="deleteSoc" type="tns:deleteSoc"/>
            <xs:element name="deleteSocResponse" type="tns:deleteSocResponse"/>
            <xs:element name="deleteSocRolloverResult" type="tns:deleteSocRolloverResult"/>
            <xs:element name="deleteSocRolloverResultItem" type="tns:deleteSocRolloverResultItem"/>
            <xs:element name="deleteSocRolloverResultItemResponse" type="tns:deleteSocRolloverResultItemResponse"/>
            <xs:element name="deleteSocRolloverResultResponse" type="tns:deleteSocRolloverResultResponse"/>
            <xs:element name="getCourseOfferingIdsBySoc" type="tns:getCourseOfferingIdsBySoc"/>
            <xs:element name="getCourseOfferingIdsBySocResponse" type="tns:getCourseOfferingIdsBySocResponse"/>
            <xs:element name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc" type="tns:getCourseOfferingIdsWithUnscheduledFinalExamsBySoc"/>
            <xs:element name="getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse" type="tns:getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse"/>
            <xs:element name="getPublishedCourseOfferingIdsBySoc" type="tns:getPublishedCourseOfferingIdsBySoc"/>
            <xs:element name="getPublishedCourseOfferingIdsBySocResponse" type="tns:getPublishedCourseOfferingIdsBySocResponse"/>
            <xs:element name="getSoc" type="tns:getSoc"/>
            <xs:element name="getSocIdsByCourseOffering" type="tns:getSocIdsByCourseOffering"/>
            <xs:element name="getSocIdsByCourseOfferingResponse" type="tns:getSocIdsByCourseOfferingResponse"/>
            <xs:element name="getSocIdsByTerm" type="tns:getSocIdsByTerm"/>
            <xs:element name="getSocIdsByTermAndSubjectArea" type="tns:getSocIdsByTermAndSubjectArea"/>
            <xs:element name="getSocIdsByTermAndSubjectAreaResponse" type="tns:getSocIdsByTermAndSubjectAreaResponse"/>
            <xs:element name="getSocIdsByTermAndUnitsContentOwner" type="tns:getSocIdsByTermAndUnitsContentOwner"/>
            <xs:element name="getSocIdsByTermAndUnitsContentOwnerResponse" type="tns:getSocIdsByTermAndUnitsContentOwnerResponse"/>
            <xs:element name="getSocIdsByTermResponse" type="tns:getSocIdsByTermResponse"/>
            <xs:element name="getSocIdsByType" type="tns:getSocIdsByType"/>
            <xs:element name="getSocIdsByTypeResponse" type="tns:getSocIdsByTypeResponse"/>
            <xs:element name="getSocResponse" type="tns:getSocResponse"/>
            <xs:element name="getSocRolloverResult" type="tns:getSocRolloverResult"/>
            <xs:element name="getSocRolloverResultIdsBySourceSoc" type="tns:getSocRolloverResultIdsBySourceSoc"/>
            <xs:element name="getSocRolloverResultIdsBySourceSocResponse" type="tns:getSocRolloverResultIdsBySourceSocResponse"/>
            <xs:element name="getSocRolloverResultIdsByTargetSoc" type="tns:getSocRolloverResultIdsByTargetSoc"/>
            <xs:element name="getSocRolloverResultIdsByTargetSocResponse" type="tns:getSocRolloverResultIdsByTargetSocResponse"/>
            <xs:element name="getSocRolloverResultItem" type="tns:getSocRolloverResultItem"/>
            <xs:element name="getSocRolloverResultItemResponse" type="tns:getSocRolloverResultItemResponse"/>
            <xs:element name="getSocRolloverResultItemsByIds" type="tns:getSocRolloverResultItemsByIds"/>
            <xs:element name="getSocRolloverResultItemsByIdsResponse" type="tns:getSocRolloverResultItemsByIdsResponse"/>
            <xs:element name="getSocRolloverResultItemsByResultId" type="tns:getSocRolloverResultItemsByResultId"/>
            <xs:element name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId" type="tns:getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId"/>
            <xs:element name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse" type="tns:getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse"/>
            <xs:element name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId" type="tns:getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId"/>
            <xs:element name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse" type="tns:getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse"/>
            <xs:element name="getSocRolloverResultItemsByResultIdResponse" type="tns:getSocRolloverResultItemsByResultIdResponse"/>
            <xs:element name="getSocRolloverResultResponse" type="tns:getSocRolloverResultResponse"/>
            <xs:element name="getSocRolloverResultsByIds" type="tns:getSocRolloverResultsByIds"/>
            <xs:element name="getSocRolloverResultsByIdsResponse" type="tns:getSocRolloverResultsByIdsResponse"/>
            <xs:element name="getSocRolloverResultsBySourceAndTargetSocs" type="tns:getSocRolloverResultsBySourceAndTargetSocs"/>
            <xs:element name="getSocRolloverResultsBySourceAndTargetSocsResponse" type="tns:getSocRolloverResultsBySourceAndTargetSocsResponse"/>
            <xs:element name="getSocsByIds" type="tns:getSocsByIds"/>
            <xs:element name="getSocsByIdsResponse" type="tns:getSocsByIdsResponse"/>
            <xs:element name="getUnpublishedActivityOfferingIdsBySoc" type="tns:getUnpublishedActivityOfferingIdsBySoc"/>
            <xs:element name="getUnpublishedActivityOfferingIdsBySocResponse" type="tns:getUnpublishedActivityOfferingIdsBySocResponse"/>
            <xs:element name="getUnpublishedCourseOfferingIdsBySoc" type="tns:getUnpublishedCourseOfferingIdsBySoc"/>
            <xs:element name="getUnpublishedCourseOfferingIdsBySocResponse" type="tns:getUnpublishedCourseOfferingIdsBySocResponse"/>
            <xs:element name="getUnscheduledActivityOfferingIdsBySoc" type="tns:getUnscheduledActivityOfferingIdsBySoc"/>
            <xs:element name="getUnscheduledActivityOfferingIdsBySocResponse" type="tns:getUnscheduledActivityOfferingIdsBySocResponse"/>
            <xs:element name="isCourseOfferingInSoc" type="tns:isCourseOfferingInSoc"/>
            <xs:element name="isCourseOfferingInSocResponse" type="tns:isCourseOfferingInSocResponse"/>
            <xs:element name="reverseRollover" type="tns:reverseRollover"/>
            <xs:element name="reverseRolloverResponse" type="tns:reverseRolloverResponse"/>
            <xs:element name="rolloverSoc" type="tns:rolloverSoc"/>
            <xs:element name="rolloverSocResponse" type="tns:rolloverSocResponse"/>
            <xs:element name="searchForSocIds" type="tns:searchForSocIds"/>
            <xs:element name="searchForSocIdsResponse" type="tns:searchForSocIdsResponse"/>
            <xs:element name="searchForSocRolloverResultIds" type="tns:searchForSocRolloverResultIds"/>
            <xs:element name="searchForSocRolloverResultIdsResponse" type="tns:searchForSocRolloverResultIdsResponse"/>
            <xs:element name="searchForSocRolloverResults" type="tns:searchForSocRolloverResults"/>
            <xs:element name="searchForSocRolloverResultsResponse" type="tns:searchForSocRolloverResultsResponse"/>
            <xs:element name="searchForSocs" type="tns:searchForSocs"/>
            <xs:element name="searchForSocsResponse" type="tns:searchForSocsResponse"/>
            <xs:element name="startScheduleSoc" type="tns:startScheduleSoc"/>
            <xs:element name="startScheduleSocResponse" type="tns:startScheduleSocResponse"/>
            <xs:element name="updateSoc" type="tns:updateSoc"/>
            <xs:element name="updateSocResponse" type="tns:updateSocResponse"/>
            <xs:element name="updateSocRolloverProgress" type="tns:updateSocRolloverProgress"/>
            <xs:element name="updateSocRolloverProgressResponse" type="tns:updateSocRolloverProgressResponse"/>
            <xs:element name="updateSocRolloverResult" type="tns:updateSocRolloverResult"/>
            <xs:element name="updateSocRolloverResultItem" type="tns:updateSocRolloverResultItem"/>
            <xs:element name="updateSocRolloverResultItemResponse" type="tns:updateSocRolloverResultItemResponse"/>
            <xs:element name="updateSocRolloverResultItemState" type="tns:updateSocRolloverResultItemState"/>
            <xs:element name="updateSocRolloverResultItemStateResponse" type="tns:updateSocRolloverResultItemStateResponse"/>
            <xs:element name="updateSocRolloverResultResponse" type="tns:updateSocRolloverResultResponse"/>
            <xs:element name="updateSocRolloverResultState" type="tns:updateSocRolloverResultState"/>
            <xs:element name="updateSocRolloverResultStateResponse" type="tns:updateSocRolloverResultStateResponse"/>
            <xs:element name="updateSocState" type="tns:updateSocState"/>
            <xs:element name="updateSocStateResponse" type="tns:updateSocStateResponse"/>
            <xs:element name="validateSoc" type="tns:validateSoc"/>
            <xs:element name="validateSocResponse" type="tns:validateSocResponse"/>
            <xs:element name="validateSocRolloverResult" type="tns:validateSocRolloverResult"/>
            <xs:element name="validateSocRolloverResultItem" type="tns:validateSocRolloverResultItem"/>
            <xs:element name="validateSocRolloverResultItemResponse" type="tns:validateSocRolloverResultItemResponse"/>
            <xs:element name="validateSocRolloverResultResponse" type="tns:validateSocRolloverResultResponse"/>
            <xs:complexType name="updateSocRolloverResultItemState">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultItemId" type="xs:string"/>
                    <xs:element minOccurs="0" name="nextStateKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ContextInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="authenticatedPrincipalId" type="xs:string"/>
                    <xs:element minOccurs="0" name="principalId" type="xs:string"/>
                    <xs:element minOccurs="0" name="currentDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="locale" type="tns:LocaleInfo"/>
                    <xs:element minOccurs="0" name="timeZone" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LocaleInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="localeLanguage" type="xs:string"/>
                    <xs:element minOccurs="0" name="localeVariant" type="xs:string"/>
                    <xs:element minOccurs="0" name="localeRegion" type="xs:string"/>
                    <xs:element minOccurs="0" name="localeScript" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="AttributeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="id" type="xs:string"/>
                    <xs:element minOccurs="0" name="key" type="xs:string"/>
                    <xs:element minOccurs="0" name="value" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResultItemStateResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="StatusInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="isSuccess" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="message" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByResultId">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByResultIdResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SocRolloverResultItemInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="sourceCourseOfferingId" type="xs:string"/>
                    <xs:element minOccurs="0" name="targetCourseOfferingId" type="xs:string"/>
                    <xs:element minOccurs="0" name="message" type="tns:RichTextInfo"/>
                    <xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                </xs:sequence>
                <xs:attribute name="id" type="xs:string"/>
                <xs:attribute name="typeKey" type="xs:string"/>
                <xs:attribute name="stateKey" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="RichTextInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="plain" type="xs:string"/>
                    <xs:element minOccurs="0" name="formatted" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MetaInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
                    <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="createId" type="xs:string"/>
                    <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updateId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getCourseOfferingIdsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getCourseOfferingIdsBySocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SocInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" type="xs:string"/>
                    <xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
                    <xs:element minOccurs="0" name="termId" type="xs:string"/>
                    <xs:element minOccurs="0" name="subjectArea" type="xs:string"/>
                    <xs:element minOccurs="0" name="unitsContentOwnerId" type="xs:string"/>
                    <xs:element minOccurs="0" name="lastSchedulingRunStarted" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="lastSchedulingRunCompleted" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="publishingStarted" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="publishingCompleted" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                </xs:sequence>
                <xs:attribute name="id" type="xs:string"/>
                <xs:attribute name="typeKey" type="xs:string"/>
                <xs:attribute name="stateKey" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="getSocIdsByCourseOffering">
                <xs:sequence>
                    <xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByCourseOfferingResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocRolloverResultIds">
                <xs:sequence>
                    <xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocRolloverResultIdsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="typeKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTypeResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="reverseRollover">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rolloverResultId" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="reverseRolloverResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SocRolloverResultInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="sourceSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="targetSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="targetTermId" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
                    <xs:element minOccurs="0" name="itemsProcessed" type="xs:int"/>
                    <xs:element minOccurs="0" name="itemsExpected" type="xs:int"/>
                    <xs:element minOccurs="0" name="courseOfferingsCreated" type="xs:int"/>
                    <xs:element minOccurs="0" name="courseOfferingsSkipped" type="xs:int"/>
                    <xs:element minOccurs="0" name="activityOfferingsCreated" type="xs:int"/>
                    <xs:element minOccurs="0" name="activityOfferingsSkipped" type="xs:int"/>
                    <xs:element minOccurs="0" name="sourceTermId" type="xs:string"/>
                    <xs:element minOccurs="0" name="message" type="tns:RichTextInfo"/>
                    <xs:element minOccurs="0" name="dateInitiated" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="dateCompleted" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                </xs:sequence>
                <xs:attribute name="id" type="xs:string"/>
                <xs:attribute name="typeKey" type="xs:string"/>
                <xs:attribute name="stateKey" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResult">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocIds">
                <xs:sequence>
                    <xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
                    <xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocIdsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResultItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultItemId" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultItemInfo" type="tns:SocRolloverResultItemInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResultItemResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ValidationResultInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="element" type="xs:string"/>
                    <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
                    <xs:element minOccurs="0" name="message" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="startScheduleSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="startScheduleSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getUnpublishedActivityOfferingIdsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getUnpublishedActivityOfferingIdsBySocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="validateSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="validationType" type="xs:string"/>
                    <xs:element minOccurs="0" name="socInfo" type="tns:SocInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="validateSocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="validateSocRolloverResult">
                <xs:sequence>
                    <xs:element minOccurs="0" name="validationType" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultInfo" type="tns:SocRolloverResultInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="validateSocRolloverResultResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="socInfo" type="tns:SocInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="rolloverSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="sourceSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="targetTermId" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="rolloverSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultIdsBySourceSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="targetSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultIdsBySourceSocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultsByIds">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="rolloverResultIds" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultsByIdsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverProgress">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="itemsProcessed" type="xs:int"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverProgressResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="targetCourseOfferingId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResult">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultInfo" type="tns:SocRolloverResultInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResultResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultsBySourceAndTargetSocs">
                <xs:sequence>
                    <xs:element minOccurs="0" name="sourceSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="targetSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultsBySourceAndTargetSocsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocRolloverResultItems">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultItemTypeKey" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="socRolloverResultItemInfos" type="tns:SocRolloverResultItemInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocRolloverResultItemsResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getUnpublishedCourseOfferingIdsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getUnpublishedCourseOfferingIdsBySocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getPublishedCourseOfferingIdsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getPublishedCourseOfferingIdsBySocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocsByIds">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="socIds" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocsByIdsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByIds">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="rolloverResultItemIds" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByIdsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteSocRolloverResultItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultItemId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteSocRolloverResultItemResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTermAndUnitsContentOwner">
                <xs:sequence>
                    <xs:element minOccurs="0" name="termId" type="xs:string"/>
                    <xs:element minOccurs="0" name="unitsContentOwnerId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTermAndUnitsContentOwnerResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocs">
                <xs:sequence>
                    <xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
                    <xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getUnscheduledActivityOfferingIdsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getUnscheduledActivityOfferingIdsBySocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="sourceCourseOfferingId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteCourseOfferingsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteCourseOfferingsBySocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResultState">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultStateId" type="xs:string"/>
                    <xs:element minOccurs="0" name="nextStateKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocRolloverResultStateResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocRolloverResults">
                <xs:sequence>
                    <xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="searchForSocRolloverResultsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="validateSocRolloverResultItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="validationType" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultItemInfo" type="tns:SocRolloverResultItemInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="validateSocRolloverResultItemResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="isCourseOfferingInSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="isCourseOfferingInSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocRolloverResultItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultItemTypeKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultItemInfo" type="tns:SocRolloverResultItemInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocRolloverResultItemResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTermAndSubjectArea">
                <xs:sequence>
                    <xs:element minOccurs="0" name="termId" type="xs:string"/>
                    <xs:element minOccurs="0" name="subjectArea" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTermAndSubjectAreaResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteSocRolloverResult">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="deleteSocRolloverResultResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="termId" type="xs:string"/>
                    <xs:element minOccurs="0" name="socTypeKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="socInfo" type="tns:SocInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocState">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socId" type="xs:string"/>
                    <xs:element minOccurs="0" name="nextStateKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="updateSocStateResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTerm">
                <xs:sequence>
                    <xs:element minOccurs="0" name="termId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocIdsByTermResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultItemId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultItemResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultItemInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocRolloverResult">
                <xs:sequence>
                    <xs:element minOccurs="0" name="socRolloverResultTypeKey" type="xs:string"/>
                    <xs:element minOccurs="0" name="socRolloverResultInfo" type="tns:SocRolloverResultInfo"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="createSocRolloverResultResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:SocRolloverResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultIdsByTargetSoc">
                <xs:sequence>
                    <xs:element minOccurs="0" name="targetSocId" type="xs:string"/>
                    <xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getSocRolloverResultIdsByTargetSocResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="errorLevel">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="OK"/>
                    <xs:enumeration value="WARN"/>
                    <xs:enumeration value="ERROR"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:element name="MissingParameter" type="tns:MissingParameter"/>
            <xs:complexType name="MissingParameter">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="DoesNotExist" type="tns:DoesNotExist"/>
            <xs:complexType name="DoesNotExist">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="OperationFailed" type="tns:OperationFailed"/>
            <xs:complexType name="OperationFailed">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="InvalidParameter" type="tns:InvalidParameter"/>
            <xs:complexType name="InvalidParameter">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="PermissionDenied" type="tns:PermissionDenied"/>
            <xs:complexType name="PermissionDenied">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="VersionMismatch" type="tns:VersionMismatch"/>
            <xs:complexType name="VersionMismatch">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="ReadOnly" type="tns:ReadOnly"/>
            <xs:complexType name="ReadOnly">
                <xs:sequence/>
            </xs:complexType>
            <xs:element name="DataValidationError" type="tns:DataValidationError"/>
            <xs:complexType name="DataValidationError">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" type="tns:ValidationResultInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="DependentObjectsExist" type="tns:DependentObjectsExist"/>
            <xs:complexType name="DependentObjectsExist">
                <xs:sequence/>
            </xs:complexType>
        </xs:schema>
        <xs:schema elementFormDefault="qualified" targetNamespace="http://rice.kuali.org/core/v2_0" version="1.0" xmlns:tns="http://rice.kuali.org/core/v2_0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:element name="and" type="tns:AndType"/>
            <xs:element name="dateTimeValue" type="tns:CriteriaDateTimeValueType"/>
            <xs:element name="decimalValue" type="tns:CriteriaDecimalValueType"/>
            <xs:element name="equal" type="tns:EqualType"/>
            <xs:element name="greaterThan" type="tns:GreaterThanType"/>
            <xs:element name="greaterThanOrEqual" type="tns:GreaterThanOrEqualType"/>
            <xs:element name="in" type="tns:InType"/>
            <xs:element name="integerValue" type="tns:CriteriaIntegerValueType"/>
            <xs:element name="lessThan" type="tns:LessThanType"/>
            <xs:element name="lessThanOrEqual" type="tns:LessThanOrEqualType"/>
            <xs:element name="like" type="tns:LikeType"/>
            <xs:element name="notEqual" type="tns:NotEqualType"/>
            <xs:element name="notIn" type="tns:NotInType"/>
            <xs:element name="notLike" type="tns:NotLikeType"/>
            <xs:element name="notNull" type="tns:NotNullType"/>
            <xs:element name="null" type="tns:NullType"/>
            <xs:element name="or" type="tns:OrType"/>
            <xs:element name="queryByCriteria" type="tns:QueryByCriteriaType"/>
            <xs:element name="stringValue" type="tns:CriteriaStringValueType"/>
            <xs:complexType final="extension restriction" name="QueryByCriteriaType">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element ref="tns:and"/>
                        <xs:element ref="tns:equal"/>
                        <xs:element ref="tns:greaterThan"/>
                        <xs:element ref="tns:greaterThanOrEqual"/>
                        <xs:element ref="tns:in"/>
                        <xs:element ref="tns:lessThan"/>
                        <xs:element ref="tns:lessThanOrEqual"/>
                        <xs:element ref="tns:like"/>
                        <xs:element ref="tns:notEqual"/>
                        <xs:element ref="tns:notIn"/>
                        <xs:element ref="tns:notLike"/>
                        <xs:element ref="tns:notNull"/>
                        <xs:element ref="tns:null"/>
                        <xs:element ref="tns:or"/>
                    </xs:choice>
                    <xs:element minOccurs="0" name="startAtIndex" type="xs:int"/>
                    <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
                    <xs:element name="countFlag" type="xs:string"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="AndType">
                <xs:complexContent>
                    <xs:extension base="tns:CompositePredicateType">
                        <xs:sequence>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType abstract="true" name="CompositePredicateType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice maxOccurs="unbounded">
                                <xs:element ref="tns:and"/>
                                <xs:element ref="tns:equal"/>
                                <xs:element ref="tns:greaterThan"/>
                                <xs:element ref="tns:greaterThanOrEqual"/>
                                <xs:element ref="tns:in"/>
                                <xs:element ref="tns:lessThan"/>
                                <xs:element ref="tns:lessThanOrEqual"/>
                                <xs:element ref="tns:like"/>
                                <xs:element ref="tns:notEqual"/>
                                <xs:element ref="tns:notIn"/>
                                <xs:element ref="tns:notLike"/>
                                <xs:element ref="tns:notNull"/>
                                <xs:element ref="tns:null"/>
                                <xs:element ref="tns:or"/>
                            </xs:choice>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType abstract="true" name="abstractPredicate">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="EqualType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice>
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                                <xs:element ref="tns:decimalValue"/>
                                <xs:element ref="tns:integerValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="CriteriaStringValueType">
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType name="CriteriaDateTimeValueType">
                <xs:restriction base="xs:dateTime"/>
            </xs:simpleType>
            <xs:simpleType name="CriteriaDecimalValueType">
                <xs:restriction base="xs:decimal"/>
            </xs:simpleType>
            <xs:simpleType name="CriteriaIntegerValueType">
                <xs:restriction base="xs:integer"/>
            </xs:simpleType>
            <xs:complexType final="extension restriction" name="GreaterThanType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice>
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:decimalValue"/>
                                <xs:element ref="tns:integerValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="GreaterThanOrEqualType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice>
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:decimalValue"/>
                                <xs:element ref="tns:integerValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="InType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice maxOccurs="unbounded">
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                                <xs:element ref="tns:integerValue"/>
                                <xs:element ref="tns:decimalValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="LessThanType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice>
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:decimalValue"/>
                                <xs:element ref="tns:integerValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="LessThanOrEqualType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice>
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:decimalValue"/>
                                <xs:element ref="tns:integerValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="LikeType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:element ref="tns:stringValue"/>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="NotEqualType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice>
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                                <xs:element ref="tns:decimalValue"/>
                                <xs:element ref="tns:integerValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="NotInType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:choice maxOccurs="unbounded">
                                <xs:element ref="tns:stringValue"/>
                                <xs:element ref="tns:dateTimeValue"/>
                                <xs:element ref="tns:integerValue"/>
                                <xs:element ref="tns:decimalValue"/>
                            </xs:choice>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="NotLikeType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:element ref="tns:stringValue"/>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="NotNullType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="NullType">
                <xs:complexContent>
                    <xs:extension base="tns:abstractPredicate">
                        <xs:sequence>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                        <xs:attribute name="propertyPath" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="OrType">
                <xs:complexContent>
                    <xs:extension base="tns:CompositePredicateType">
                        <xs:sequence>
                            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="getSocRolloverResultsByIdsResponse">
        <wsdl:part element="tns:getSocRolloverResultsByIdsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse">
        <wsdl:part element="tns:getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultItemStateResponse">
        <wsdl:part element="tns:updateSocRolloverResultItemStateResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocRolloverResultItems">
        <wsdl:part element="tns:createSocRolloverResultItems" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="reverseRolloverResponse">
        <wsdl:part element="tns:reverseRolloverResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResult">
        <wsdl:part element="tns:updateSocRolloverResult" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId">
        <wsdl:part element="tns:getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="InvalidParameterException">
        <wsdl:part element="tns:InvalidParameter" name="InvalidParameterException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteSoc">
        <wsdl:part element="tns:deleteSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultIdsByTargetSoc">
        <wsdl:part element="tns:getSocRolloverResultIdsByTargetSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocResponse">
        <wsdl:part element="tns:updateSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteSocRolloverResultItem">
        <wsdl:part element="tns:deleteSocRolloverResultItem" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse">
        <wsdl:part element="tns:getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultStateResponse">
        <wsdl:part element="tns:updateSocRolloverResultStateResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getPublishedCourseOfferingIdsBySocResponse">
        <wsdl:part element="tns:getPublishedCourseOfferingIdsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByIdsResponse">
        <wsdl:part element="tns:getSocRolloverResultItemsByIdsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="isCourseOfferingInSoc">
        <wsdl:part element="tns:isCourseOfferingInSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="MissingParameterException">
        <wsdl:part element="tns:MissingParameter" name="MissingParameterException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultIdsBySourceSoc">
        <wsdl:part element="tns:getSocRolloverResultIdsBySourceSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultResponse">
        <wsdl:part element="tns:getSocRolloverResultResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocRolloverResultItemResponse">
        <wsdl:part element="tns:createSocRolloverResultItemResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUnpublishedCourseOfferingIdsBySocResponse">
        <wsdl:part element="tns:getUnpublishedCourseOfferingIdsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocRolloverResultIdsResponse">
        <wsdl:part element="tns:searchForSocRolloverResultIdsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocsByIds">
        <wsdl:part element="tns:getSocsByIds" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUnpublishedActivityOfferingIdsBySocResponse">
        <wsdl:part element="tns:getUnpublishedActivityOfferingIdsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultsBySourceAndTargetSocsResponse">
        <wsdl:part element="tns:getSocRolloverResultsBySourceAndTargetSocsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocsByIdsResponse">
        <wsdl:part element="tns:getSocsByIdsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocIdsResponse">
        <wsdl:part element="tns:searchForSocIdsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultItemState">
        <wsdl:part element="tns:updateSocRolloverResultItemState" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByResultId">
        <wsdl:part element="tns:getSocRolloverResultItemsByResultId" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultIdsBySourceSocResponse">
        <wsdl:part element="tns:getSocRolloverResultIdsBySourceSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateSocRolloverResult">
        <wsdl:part element="tns:validateSocRolloverResult" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteSocRolloverResultResponse">
        <wsdl:part element="tns:deleteSocRolloverResultResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultResponse">
        <wsdl:part element="tns:updateSocRolloverResultResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByIds">
        <wsdl:part element="tns:getSocRolloverResultItemsByIds" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTermAndUnitsContentOwnerResponse">
        <wsdl:part element="tns:getSocIdsByTermAndUnitsContentOwnerResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="isCourseOfferingInSocResponse">
        <wsdl:part element="tns:isCourseOfferingInSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResult">
        <wsdl:part element="tns:getSocRolloverResult" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultState">
        <wsdl:part element="tns:updateSocRolloverResultState" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultIdsByTargetSocResponse">
        <wsdl:part element="tns:getSocRolloverResultIdsByTargetSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteCourseOfferingsBySoc">
        <wsdl:part element="tns:deleteCourseOfferingsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByCourseOfferingResponse">
        <wsdl:part element="tns:getSocIdsByCourseOfferingResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="reverseRollover">
        <wsdl:part element="tns:reverseRollover" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUnscheduledActivityOfferingIdsBySocResponse">
        <wsdl:part element="tns:getUnscheduledActivityOfferingIdsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="DataValidationErrorException">
        <wsdl:part element="tns:DataValidationError" name="DataValidationErrorException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateSocRolloverResultResponse">
        <wsdl:part element="tns:validateSocRolloverResultResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="PermissionDeniedException">
        <wsdl:part element="tns:PermissionDenied" name="PermissionDeniedException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getPublishedCourseOfferingIdsBySoc">
        <wsdl:part element="tns:getPublishedCourseOfferingIdsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTerm">
        <wsdl:part element="tns:getSocIdsByTerm" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse">
        <wsdl:part element="tns:getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateSocRolloverResultItemResponse">
        <wsdl:part element="tns:validateSocRolloverResultItemResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSoc">
        <wsdl:part element="tns:createSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="DependentObjectsExistException">
        <wsdl:part element="tns:DependentObjectsExist" name="DependentObjectsExistException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocRolloverResult">
        <wsdl:part element="tns:createSocRolloverResult" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="ReadOnlyException">
        <wsdl:part element="tns:ReadOnly" name="ReadOnlyException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocRolloverResults">
        <wsdl:part element="tns:searchForSocRolloverResults" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultsBySourceAndTargetSocs">
        <wsdl:part element="tns:getSocRolloverResultsBySourceAndTargetSocs" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItem">
        <wsdl:part element="tns:getSocRolloverResultItem" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTypeResponse">
        <wsdl:part element="tns:getSocIdsByTypeResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocRolloverResultsResponse">
        <wsdl:part element="tns:searchForSocRolloverResultsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultsByIds">
        <wsdl:part element="tns:getSocRolloverResultsByIds" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTermAndSubjectAreaResponse">
        <wsdl:part element="tns:getSocIdsByTermAndSubjectAreaResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSoc">
        <wsdl:part element="tns:getSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocsResponse">
        <wsdl:part element="tns:searchForSocsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocStateResponse">
        <wsdl:part element="tns:updateSocStateResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCourseOfferingIdsBySocResponse">
        <wsdl:part element="tns:getCourseOfferingIdsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="DoesNotExistException">
        <wsdl:part element="tns:DoesNotExist" name="DoesNotExistException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteSocRolloverResultItemResponse">
        <wsdl:part element="tns:deleteSocRolloverResultItemResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc">
        <wsdl:part element="tns:getCourseOfferingIdsWithUnscheduledFinalExamsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverProgressResponse">
        <wsdl:part element="tns:updateSocRolloverProgressResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTermResponse">
        <wsdl:part element="tns:getSocIdsByTermResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="rolloverSoc">
        <wsdl:part element="tns:rolloverSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCourseOfferingIdsBySoc">
        <wsdl:part element="tns:getCourseOfferingIdsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocRolloverResultItemsResponse">
        <wsdl:part element="tns:createSocRolloverResultItemsResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteCourseOfferingsBySocResponse">
        <wsdl:part element="tns:deleteCourseOfferingsBySocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUnscheduledActivityOfferingIdsBySoc">
        <wsdl:part element="tns:getUnscheduledActivityOfferingIdsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocState">
        <wsdl:part element="tns:updateSocState" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSoc">
        <wsdl:part element="tns:updateSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="rolloverSocResponse">
        <wsdl:part element="tns:rolloverSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocResponse">
        <wsdl:part element="tns:createSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUnpublishedActivityOfferingIdsBySoc">
        <wsdl:part element="tns:getUnpublishedActivityOfferingIdsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteSocResponse">
        <wsdl:part element="tns:deleteSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocRolloverResultIds">
        <wsdl:part element="tns:searchForSocRolloverResultIds" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByType">
        <wsdl:part element="tns:getSocIdsByType" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId">
        <wsdl:part element="tns:getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverProgress">
        <wsdl:part element="tns:updateSocRolloverProgress" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTermAndUnitsContentOwner">
        <wsdl:part element="tns:getSocIdsByTermAndUnitsContentOwner" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocRolloverResultResponse">
        <wsdl:part element="tns:createSocRolloverResultResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultItemResponse">
        <wsdl:part element="tns:updateSocRolloverResultItemResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByCourseOffering">
        <wsdl:part element="tns:getSocIdsByCourseOffering" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateSocRolloverResultItem">
        <wsdl:part element="tns:updateSocRolloverResultItem" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocResponse">
        <wsdl:part element="tns:getSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemsByResultIdResponse">
        <wsdl:part element="tns:getSocRolloverResultItemsByResultIdResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateSocRolloverResultItem">
        <wsdl:part element="tns:validateSocRolloverResultItem" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="startScheduleSocResponse">
        <wsdl:part element="tns:startScheduleSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateSoc">
        <wsdl:part element="tns:validateSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="createSocRolloverResultItem">
        <wsdl:part element="tns:createSocRolloverResultItem" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateSocResponse">
        <wsdl:part element="tns:validateSocResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUnpublishedCourseOfferingIdsBySoc">
        <wsdl:part element="tns:getUnpublishedCourseOfferingIdsBySoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocIdsByTermAndSubjectArea">
        <wsdl:part element="tns:getSocIdsByTermAndSubjectArea" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSocRolloverResultItemResponse">
        <wsdl:part element="tns:getSocRolloverResultItemResponse" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="startScheduleSoc">
        <wsdl:part element="tns:startScheduleSoc" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="OperationFailedException">
        <wsdl:part element="tns:OperationFailed" name="OperationFailedException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocs">
        <wsdl:part element="tns:searchForSocs" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="VersionMismatchException">
        <wsdl:part element="tns:VersionMismatch" name="VersionMismatchException">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="searchForSocIds">
        <wsdl:part element="tns:searchForSocIds" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteSocRolloverResult">
        <wsdl:part element="tns:deleteSocRolloverResult" name="parameters">
        </wsdl:part>
    </wsdl:message>
    <wsdl:portType name="CourseOfferingSetService">
        <wsdl:operation name="updateSocRolloverResultItemState">
            <wsdl:input message="tns:updateSocRolloverResultItemState" name="updateSocRolloverResultItemState">
            </wsdl:input>
            <wsdl:output message="tns:updateSocRolloverResultItemStateResponse" name="updateSocRolloverResultItemStateResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByResultId">
            <wsdl:input message="tns:getSocRolloverResultItemsByResultId" name="getSocRolloverResultItemsByResultId">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultItemsByResultIdResponse" name="getSocRolloverResultItemsByResultIdResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCourseOfferingIdsBySoc">
            <wsdl:input message="tns:getCourseOfferingIdsBySoc" name="getCourseOfferingIdsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:getCourseOfferingIdsBySocResponse" name="getCourseOfferingIdsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSoc">
            <wsdl:input message="tns:getSoc" name="getSoc">
            </wsdl:input>
            <wsdl:output message="tns:getSocResponse" name="getSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByCourseOffering">
            <wsdl:input message="tns:getSocIdsByCourseOffering" name="getSocIdsByCourseOffering">
            </wsdl:input>
            <wsdl:output message="tns:getSocIdsByCourseOfferingResponse" name="getSocIdsByCourseOfferingResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocRolloverResultIds">
            <wsdl:input message="tns:searchForSocRolloverResultIds" name="searchForSocRolloverResultIds">
            </wsdl:input>
            <wsdl:output message="tns:searchForSocRolloverResultIdsResponse" name="searchForSocRolloverResultIdsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByType">
            <wsdl:input message="tns:getSocIdsByType" name="getSocIdsByType">
            </wsdl:input>
            <wsdl:output message="tns:getSocIdsByTypeResponse" name="getSocIdsByTypeResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="reverseRollover">
            <wsdl:input message="tns:reverseRollover" name="reverseRollover">
            </wsdl:input>
            <wsdl:output message="tns:reverseRolloverResponse" name="reverseRolloverResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResult">
            <wsdl:input message="tns:getSocRolloverResult" name="getSocRolloverResult">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultResponse" name="getSocRolloverResultResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocIds">
            <wsdl:input message="tns:searchForSocIds" name="searchForSocIds">
            </wsdl:input>
            <wsdl:output message="tns:searchForSocIdsResponse" name="searchForSocIdsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverResultItem">
            <wsdl:input message="tns:updateSocRolloverResultItem" name="updateSocRolloverResultItem">
            </wsdl:input>
            <wsdl:output message="tns:updateSocRolloverResultItemResponse" name="updateSocRolloverResultItemResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startScheduleSoc">
            <wsdl:input message="tns:startScheduleSoc" name="startScheduleSoc">
            </wsdl:input>
            <wsdl:output message="tns:startScheduleSocResponse" name="startScheduleSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUnpublishedActivityOfferingIdsBySoc">
            <wsdl:input message="tns:getUnpublishedActivityOfferingIdsBySoc" name="getUnpublishedActivityOfferingIdsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:getUnpublishedActivityOfferingIdsBySocResponse" name="getUnpublishedActivityOfferingIdsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateSoc">
            <wsdl:input message="tns:validateSoc" name="validateSoc">
            </wsdl:input>
            <wsdl:output message="tns:validateSocResponse" name="validateSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateSocRolloverResult">
            <wsdl:input message="tns:validateSocRolloverResult" name="validateSocRolloverResult">
            </wsdl:input>
            <wsdl:output message="tns:validateSocRolloverResultResponse" name="validateSocRolloverResultResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSoc">
            <wsdl:input message="tns:updateSoc" name="updateSoc">
            </wsdl:input>
            <wsdl:output message="tns:updateSocResponse" name="updateSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="rolloverSoc">
            <wsdl:input message="tns:rolloverSoc" name="rolloverSoc">
            </wsdl:input>
            <wsdl:output message="tns:rolloverSocResponse" name="rolloverSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultIdsBySourceSoc">
            <wsdl:input message="tns:getSocRolloverResultIdsBySourceSoc" name="getSocRolloverResultIdsBySourceSoc">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultIdsBySourceSocResponse" name="getSocRolloverResultIdsBySourceSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultsByIds">
            <wsdl:input message="tns:getSocRolloverResultsByIds" name="getSocRolloverResultsByIds">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultsByIdsResponse" name="getSocRolloverResultsByIdsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverProgress">
            <wsdl:input message="tns:updateSocRolloverProgress" name="updateSocRolloverProgress">
            </wsdl:input>
            <wsdl:output message="tns:updateSocRolloverProgressResponse" name="updateSocRolloverProgressResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId">
            <wsdl:input message="tns:getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId" name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse" name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverResult">
            <wsdl:input message="tns:updateSocRolloverResult" name="updateSocRolloverResult">
            </wsdl:input>
            <wsdl:output message="tns:updateSocRolloverResultResponse" name="updateSocRolloverResultResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultsBySourceAndTargetSocs">
            <wsdl:input message="tns:getSocRolloverResultsBySourceAndTargetSocs" name="getSocRolloverResultsBySourceAndTargetSocs">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultsBySourceAndTargetSocsResponse" name="getSocRolloverResultsBySourceAndTargetSocsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSocRolloverResultItems">
            <wsdl:input message="tns:createSocRolloverResultItems" name="createSocRolloverResultItems">
            </wsdl:input>
            <wsdl:output message="tns:createSocRolloverResultItemsResponse" name="createSocRolloverResultItemsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUnpublishedCourseOfferingIdsBySoc">
            <wsdl:input message="tns:getUnpublishedCourseOfferingIdsBySoc" name="getUnpublishedCourseOfferingIdsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:getUnpublishedCourseOfferingIdsBySocResponse" name="getUnpublishedCourseOfferingIdsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPublishedCourseOfferingIdsBySoc">
            <wsdl:input message="tns:getPublishedCourseOfferingIdsBySoc" name="getPublishedCourseOfferingIdsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:getPublishedCourseOfferingIdsBySocResponse" name="getPublishedCourseOfferingIdsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocsByIds">
            <wsdl:input message="tns:getSocsByIds" name="getSocsByIds">
            </wsdl:input>
            <wsdl:output message="tns:getSocsByIdsResponse" name="getSocsByIdsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByIds">
            <wsdl:input message="tns:getSocRolloverResultItemsByIds" name="getSocRolloverResultItemsByIds">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultItemsByIdsResponse" name="getSocRolloverResultItemsByIdsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteSocRolloverResultItem">
            <wsdl:input message="tns:deleteSocRolloverResultItem" name="deleteSocRolloverResultItem">
            </wsdl:input>
            <wsdl:output message="tns:deleteSocRolloverResultItemResponse" name="deleteSocRolloverResultItemResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByTermAndUnitsContentOwner">
            <wsdl:input message="tns:getSocIdsByTermAndUnitsContentOwner" name="getSocIdsByTermAndUnitsContentOwner">
            </wsdl:input>
            <wsdl:output message="tns:getSocIdsByTermAndUnitsContentOwnerResponse" name="getSocIdsByTermAndUnitsContentOwnerResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocs">
            <wsdl:input message="tns:searchForSocs" name="searchForSocs">
            </wsdl:input>
            <wsdl:output message="tns:searchForSocsResponse" name="searchForSocsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUnscheduledActivityOfferingIdsBySoc">
            <wsdl:input message="tns:getUnscheduledActivityOfferingIdsBySoc" name="getUnscheduledActivityOfferingIdsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:getUnscheduledActivityOfferingIdsBySocResponse" name="getUnscheduledActivityOfferingIdsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId">
            <wsdl:input message="tns:getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId" name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse" name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteCourseOfferingsBySoc">
            <wsdl:input message="tns:deleteCourseOfferingsBySoc" name="deleteCourseOfferingsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:deleteCourseOfferingsBySocResponse" name="deleteCourseOfferingsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverResultState">
            <wsdl:input message="tns:updateSocRolloverResultState" name="updateSocRolloverResultState">
            </wsdl:input>
            <wsdl:output message="tns:updateSocRolloverResultStateResponse" name="updateSocRolloverResultStateResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocRolloverResults">
            <wsdl:input message="tns:searchForSocRolloverResults" name="searchForSocRolloverResults">
            </wsdl:input>
            <wsdl:output message="tns:searchForSocRolloverResultsResponse" name="searchForSocRolloverResultsResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateSocRolloverResultItem">
            <wsdl:input message="tns:validateSocRolloverResultItem" name="validateSocRolloverResultItem">
            </wsdl:input>
            <wsdl:output message="tns:validateSocRolloverResultItemResponse" name="validateSocRolloverResultItemResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isCourseOfferingInSoc">
            <wsdl:input message="tns:isCourseOfferingInSoc" name="isCourseOfferingInSoc">
            </wsdl:input>
            <wsdl:output message="tns:isCourseOfferingInSocResponse" name="isCourseOfferingInSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteSoc">
            <wsdl:input message="tns:deleteSoc" name="deleteSoc">
            </wsdl:input>
            <wsdl:output message="tns:deleteSocResponse" name="deleteSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSocRolloverResultItem">
            <wsdl:input message="tns:createSocRolloverResultItem" name="createSocRolloverResultItem">
            </wsdl:input>
            <wsdl:output message="tns:createSocRolloverResultItemResponse" name="createSocRolloverResultItemResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByTermAndSubjectArea">
            <wsdl:input message="tns:getSocIdsByTermAndSubjectArea" name="getSocIdsByTermAndSubjectArea">
            </wsdl:input>
            <wsdl:output message="tns:getSocIdsByTermAndSubjectAreaResponse" name="getSocIdsByTermAndSubjectAreaResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteSocRolloverResult">
            <wsdl:input message="tns:deleteSocRolloverResult" name="deleteSocRolloverResult">
            </wsdl:input>
            <wsdl:output message="tns:deleteSocRolloverResultResponse" name="deleteSocRolloverResultResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc">
            <wsdl:input message="tns:getCourseOfferingIdsWithUnscheduledFinalExamsBySoc" name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc">
            </wsdl:input>
            <wsdl:output message="tns:getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse" name="getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSoc">
            <wsdl:input message="tns:createSoc" name="createSoc">
            </wsdl:input>
            <wsdl:output message="tns:createSocResponse" name="createSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocState">
            <wsdl:input message="tns:updateSocState" name="updateSocState">
            </wsdl:input>
            <wsdl:output message="tns:updateSocStateResponse" name="updateSocStateResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByTerm">
            <wsdl:input message="tns:getSocIdsByTerm" name="getSocIdsByTerm">
            </wsdl:input>
            <wsdl:output message="tns:getSocIdsByTermResponse" name="getSocIdsByTermResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItem">
            <wsdl:input message="tns:getSocRolloverResultItem" name="getSocRolloverResultItem">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultItemResponse" name="getSocRolloverResultItemResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSocRolloverResult">
            <wsdl:input message="tns:createSocRolloverResult" name="createSocRolloverResult">
            </wsdl:input>
            <wsdl:output message="tns:createSocRolloverResultResponse" name="createSocRolloverResultResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:ReadOnlyException" name="ReadOnlyException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultIdsByTargetSoc">
            <wsdl:input message="tns:getSocRolloverResultIdsByTargetSoc" name="getSocRolloverResultIdsByTargetSoc">
            </wsdl:input>
            <wsdl:output message="tns:getSocRolloverResultIdsByTargetSocResponse" name="getSocRolloverResultIdsByTargetSocResponse">
            </wsdl:output>
            <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
            </wsdl:fault>
            <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
            </wsdl:fault>
            <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
            </wsdl:fault>
            <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="CourseOfferingSetServiceSoapBinding" type="tns:CourseOfferingSetService">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="updateSocRolloverResultItemState">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSocRolloverResultItemState">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocRolloverResultItemStateResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCourseOfferingIdsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getCourseOfferingIdsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getCourseOfferingIdsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByResultId">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultItemsByResultId">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultItemsByResultIdResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByCourseOffering">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocIdsByCourseOffering">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocIdsByCourseOfferingResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByType">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocIdsByType">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocIdsByTypeResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocRolloverResultIds">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="searchForSocRolloverResultIds">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="searchForSocRolloverResultIdsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResult">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResult">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="reverseRollover">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="reverseRollover">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="reverseRolloverResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocIds">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="searchForSocIds">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="searchForSocIdsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverResultItem">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSocRolloverResultItem">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocRolloverResultItemResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="VersionMismatchException">
                <soap:fault name="VersionMismatchException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUnpublishedActivityOfferingIdsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getUnpublishedActivityOfferingIdsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getUnpublishedActivityOfferingIdsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startScheduleSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="startScheduleSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="startScheduleSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="validateSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="validateSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="rolloverSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="rolloverSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="rolloverSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="VersionMismatchException">
                <soap:fault name="VersionMismatchException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateSocRolloverResult">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="validateSocRolloverResult">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="validateSocRolloverResultResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultIdsBySourceSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultIdsBySourceSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultIdsBySourceSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultsByIds">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultsByIds">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultsByIdsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverProgress">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSocRolloverProgress">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocRolloverProgressResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="VersionMismatchException">
                <soap:fault name="VersionMismatchException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingId">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultItemsByResultIdAndTargetCourseOfferingIdResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverResult">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSocRolloverResult">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocRolloverResultResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="VersionMismatchException">
                <soap:fault name="VersionMismatchException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultsBySourceAndTargetSocs">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultsBySourceAndTargetSocs">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultsBySourceAndTargetSocsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSocRolloverResultItems">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="createSocRolloverResultItems">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="createSocRolloverResultItemsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPublishedCourseOfferingIdsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getPublishedCourseOfferingIdsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getPublishedCourseOfferingIdsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUnpublishedCourseOfferingIdsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getUnpublishedCourseOfferingIdsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getUnpublishedCourseOfferingIdsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocsByIds">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocsByIds">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocsByIdsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByIds">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultItemsByIds">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultItemsByIdsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteSocRolloverResultItem">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="deleteSocRolloverResultItem">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="deleteSocRolloverResultItemResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByTermAndUnitsContentOwner">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocIdsByTermAndUnitsContentOwner">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocIdsByTermAndUnitsContentOwnerResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocs">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="searchForSocs">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="searchForSocsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingId">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultItemsByResultIdAndSourceCourseOfferingIdResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUnscheduledActivityOfferingIdsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getUnscheduledActivityOfferingIdsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getUnscheduledActivityOfferingIdsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteCourseOfferingsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="deleteCourseOfferingsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="deleteCourseOfferingsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="searchForSocRolloverResults">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="searchForSocRolloverResults">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="searchForSocRolloverResultsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocRolloverResultState">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSocRolloverResultState">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocRolloverResultStateResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isCourseOfferingInSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="isCourseOfferingInSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="isCourseOfferingInSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateSocRolloverResultItem">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="validateSocRolloverResultItem">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="validateSocRolloverResultItemResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="deleteSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="deleteSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DependentObjectsExistException">
                <soap:fault name="DependentObjectsExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSocRolloverResultItem">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="createSocRolloverResultItem">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="createSocRolloverResultItemResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByTermAndSubjectArea">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocIdsByTermAndSubjectArea">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocIdsByTermAndSubjectAreaResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteSocRolloverResult">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="deleteSocRolloverResult">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="deleteSocRolloverResultResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DependentObjectsExistException">
                <soap:fault name="DependentObjectsExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="createSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="createSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getCourseOfferingIdsWithUnscheduledFinalExamsBySoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getCourseOfferingIdsWithUnscheduledFinalExamsBySocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocIdsByTerm">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocIdsByTerm">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocIdsByTermResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateSocState">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="updateSocState">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="updateSocStateResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultItem">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultItem">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultItemResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createSocRolloverResult">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="createSocRolloverResult">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="createSocRolloverResultResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DataValidationErrorException">
                <soap:fault name="DataValidationErrorException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="ReadOnlyException">
                <soap:fault name="ReadOnlyException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSocRolloverResultIdsByTargetSoc">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getSocRolloverResultIdsByTargetSoc">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getSocRolloverResultIdsByTargetSocResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="InvalidParameterException">
                <soap:fault name="InvalidParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="MissingParameterException">
                <soap:fault name="MissingParameterException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DoesNotExistException">
                <soap:fault name="DoesNotExistException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="PermissionDeniedException">
                <soap:fault name="PermissionDeniedException" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="OperationFailedException">
                <soap:fault name="OperationFailedException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="CourseOfferingSetService">
        <wsdl:port binding="tns:CourseOfferingSetServiceSoapBinding" name="CourseOfferingSetService">
            <soap:address location="http://localhost:8081/ks-embedded-dev/services/CourseOfferingSetService"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>