<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kuali.student</groupId>
    <artifactId>student</artifactId>
    <version>1.3.0-SNAPSHOT</version>
  </parent>
  <groupId>org.kuali.student.db</groupId>
  <artifactId>ks-cfg-dbs</artifactId>
  <packaging>pom</packaging>
  <name>KS Impex</name>
  <description>Kuali Student Impex</description>
  <repositories>
    <repository>
      <id>kuali.nexus</id>
      <name>Nexus Repository Manager</name>
      <url>http://nexus.kuali.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <properties>
    <ks.impex.sql.plugin.escapeProcessing>false</ks.impex.sql.plugin.escapeProcessing>
    <ks.impex.sql.plugin.orderFile>ascending</ks.impex.sql.plugin.orderFile>
    <ks.impex.sql.plugin.keepFormat>true</ks.impex.sql.plugin.keepFormat>
    <ks.impex.sql.plugin.printResultSet>false</ks.impex.sql.plugin.printResultSet>
    <ks.impex.sql.plugin.delimiter.type>row</ks.impex.sql.plugin.delimiter.type>
    <ks.impex.sql.plugin.force.execution>false</ks.impex.sql.plugin.force.execution>
    <ks.impex.sql.plugin.skip>false</ks.impex.sql.plugin.skip>
    <ks.impex.ant.compatibility.mode>false</ks.impex.ant.compatibility.mode>
    <ks.impex.include.version.in.comment>false</ks.impex.include.version.in.comment>

    <ks.impex.generate.phase>generate-resources</ks.impex.generate.phase>
    <ks.impex.generate.sql.phase>${ks.impex.generate.phase}</ks.impex.generate.sql.phase>
    <ks.impex.generate.sql.oracle.phase>${ks.impex.generate.sql.phase}</ks.impex.generate.sql.oracle.phase>
    <ks.impex.generate.sql.mysql.phase>${ks.impex.generate.sql.phase}</ks.impex.generate.sql.mysql.phase>
    <ks.impex.generate.morph.phase>${ks.impex.generate.phase}</ks.impex.generate.morph.phase>
    <ks.impex.generate.dtd.phase>${ks.impex.generate.phase}</ks.impex.generate.dtd.phase>
    <!-- This is the format dates will be exported/imported as -->
    <ks.impex.date.format>yyyyMMddHHmmss</ks.impex.date.format>

    <!-- Oracle specific properties -->
    <ks.impex.masterdb.url>jdbc:oracle:thin:@oracle.ks.kuali.org:1521:ORACLE</ks.impex.masterdb.url>
    <ks.impex.masterdb.schema>KSMASTER_13</ks.impex.masterdb.schema>
    <ks.impex.masterdb.username>KSMASTER_13</ks.impex.masterdb.username>
    <ks.impex.masterdb.password>KSMASTER_13</ks.impex.masterdb.password>
    <ks.impex.oracle.driver>oracle.jdbc.driver.OracleDriver</ks.impex.oracle.driver>
    <ks.impex.oracle.default.url>jdbc:oracle:thin:@localhost:1521:XE</ks.impex.oracle.default.url>
    <ks.impex.oracle.delimiter>/</ks.impex.oracle.delimiter>
    <ks.impex.oracle.defaultTablespace>users</ks.impex.oracle.defaultTablespace>
    <ks.impex.oracle.temporaryTablespace>temp</ks.impex.oracle.temporaryTablespace>
    <ks.impex.oracle.quota>UNLIMITED</ks.impex.oracle.quota>
    <ks.impex.oracle.error.sqlcode.userDoesNotExist>-01918</ks.impex.oracle.error.sqlcode.userDoesNotExist>
    <ks.impex.oracle.error.sqlcode.userAlreadyExists>-01920</ks.impex.oracle.error.sqlcode.userAlreadyExists>
    <ks.impex.oracle.dba.username>master</ks.impex.oracle.dba.username>
    <ks.impex.oracle.dba.password>change_on_install</ks.impex.oracle.dba.password>

    <!-- Simple select query for validating connection properties -->
    <ks.impex.oracle.sql.validate>
      SELECT SYSDATE FROM DUAL
    </ks.impex.oracle.sql.validate>

    <!-- Drop the user, ignoring the Oracle error code for "user does not exist" -->
    <ks.impex.oracle.sql.drop>
      BEGIN
      EXECUTE IMMEDIATE 'DROP USER ${ks.impex.username} CASCADE';
      EXCEPTION WHEN OTHERS THEN
      IF SQLCODE != ${ks.impex.oracle.error.sqlcode.userDoesNotExist} THEN
      RAISE;
      END IF;
      END;
      /
    </ks.impex.oracle.sql.drop>

    <!-- Create an Oracle user with some sensible defaults -->
    <ks.impex.oracle.sql.create>
      CREATE USER ${ks.impex.username}
      IDENTIFIED BY ${ks.impex.password}
      DEFAULT TABLESPACE
      ${ks.impex.oracle.defaultTablespace}
      TEMPORARY TABLESPACE ${ks.impex.oracle.temporaryTablespace}
      QUOTA
      ${ks.impex.oracle.quota} ON ${ks.impex.oracle.defaultTablespace}
      /
    </ks.impex.oracle.sql.create>

    <!-- Grant permissions needed for KS -->
    <ks.impex.oracle.sql.grants>
    GRANT CREATE PROCEDURE
    , CREATE SEQUENCE
    , CREATE SESSION
    , CREATE SYNONYM
    , CREATE TABLE
    , CREATE TRIGGER
    , CREATE TYPE
    , CREATE VIEW
    TO ${ks.impex.username}
    /
    </ks.impex.oracle.sql.grants>
    <!-- This is executed just before generating XML from the master db -->
    <ks.impex.oracle.sql.pre.export>
      UPDATE ks_db_version SET upgrade_time = NULL
      /
    </ks.impex.oracle.sql.pre.export>
    <!-- This is executed after materializing the master db from database control files -->
    <ks.impex.oracle.sql.post.materialization>
      purge recyclebin
      /
    </ks.impex.oracle.sql.post.materialization>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sql-maven-plugin</artifactId>
          <version>1.4</version>
          <configuration>
            <username>${ks.impex.username}</username>
            <password>${ks.impex.password}</password>
            <url>${ks.impex.url}</url>
            <driver>${ks.impex.driver}</driver>
            <delimiter>${ks.impex.delimiter}</delimiter>
            <delimiterType>${ks.impex.sql.plugin.delimiter.type}</delimiterType>
            <forceMojoExecution>${ks.impex.sql.plugin.force.execution}</forceMojoExecution>
            <skip>${ks.impex.sql.plugin.skip}</skip>
            <keepFormat>${ks.impex.sql.plugin.keepFormat}</keepFormat>
            <printResultSet>${ks.impex.sql.plugin.printResultSet}</printResultSet>
            <outputFile>${ks.impex.sql.plugin.outputFile}</outputFile>
            <orderFile>${ks.impex.sql.plugin.orderFile}</orderFile>
            <escapeProcessing>${ks.impex.sql.plugin.escapeProcessing}</escapeProcessing>
          </configuration>
          <executions>
            <execution>
              <id>validate-dba-config</id>
              <phase>none</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <username>${ks.impex.dba.username}</username>
                <password>${ks.impex.dba.password}</password>
                <sqlCommand>${ks.impex.sql.validate}</sqlCommand>
              </configuration>
            </execution>
            <execution>
              <id>validate-db-config</id>
              <phase>none</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <username>${ks.impex.username}</username>
                <password>${ks.impex.password}</password>
                <sqlCommand>${ks.impex.sql.validate}</sqlCommand>
              </configuration>
            </execution>
            <execution>
              <id>drop-db</id>
              <phase>none</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <username>${ks.impex.dba.username}</username>
                <password>${ks.impex.dba.password}</password>
                <sqlCommand>${ks.impex.sql.drop}</sqlCommand>
              </configuration>
            </execution>
            <execution>
              <id>init-db</id>
              <phase>none</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <username>${ks.impex.dba.username}</username>
                <password>${ks.impex.dba.password}</password>
                <sqlCommand>${ks.impex.sql.initialize}</sqlCommand>
              </configuration>
            </execution>
            <execution>
              <id>execute-pre-export-sql</id>
              <phase>none</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <forceMojoExecution>true</forceMojoExecution>
                <sqlCommand>${ks.impex.sql.pre.export}</sqlCommand>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
              <version>${mysql.connector.version}</version>
            </dependency>
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>ojdbc14</artifactId>
              <version>${oracle.ojdbc.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
    <resources>
      <resource>
        <directory>${project.build.directory}/generated-impex</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>drop-db-config</id>
            <phase>none</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>JDBC Url - ${ks.impex.url}</echo>
                <echo>JDBC Driver - ${ks.impex.driver}</echo>
                <echo>Username - ${ks.impex.dba.username}</echo>
                <echo>SQL:</echo>
                <echo>---------------------------------</echo>
                <echo>${ks.impex.sql.drop}</echo>
                <echo>---------------------------------</echo>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>init-db-config</id>
            <phase>none</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>JDBC Url - ${ks.impex.url}</echo>
                <echo>JDBC Driver - ${ks.impex.driver}</echo>
                <echo>Username - ${ks.impex.dba.username}</echo>
                <echo>SQL:</echo>
                <echo>---------------------------------</echo>
                <echo>${ks.impex.sql.initialize}</echo>
                <echo>---------------------------------</echo>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>db-config</id>
            <phase>none</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>JDBC Url - ${ks.impex.url}</echo>
                <echo>JDBC Driver - ${ks.impex.driver}</echo>
                <echo>Username - ${ks.impex.username}</echo>
                <echo>Password - ${ks.impex.password}</echo>
                <echo>SQL: '${ks.impex.sql.validate}'</echo>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>dba-config</id>
            <phase>none</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>JDBC Url - ${ks.impex.url}</echo>
                <echo>JDBC Driver - ${ks.impex.driver}</echo>
                <echo>Username - ${ks.impex.dba.username}</echo>
                <echo>Password - ${ks.impex.dba.password}</echo>
                <echo>SQL: '${ks.impex.sql.validate}'</echo>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>pre-export-config</id>
            <phase>none</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>JDBC Url - ${ks.impex.url}</echo>
                <echo>JDBC Driver - ${ks.impex.driver}</echo>
                <echo>Username - ${ks.impex.username}</echo>
                <echo>Password - ${ks.impex.password}</echo>
                <echo>---------------------------------</echo>
                <echo>${ks.impex.sql.pre.export}</echo>
                <echo>---------------------------------</echo>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
        <version>1.6</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <!-- No need to attach sources -->
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>maven-impex-plugin</artifactId>
        <version>${plugin.impex.version}</version>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
          </dependency>
          <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>${oracle.ojdbc.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <username>${ks.impex.username}</username>
          <password>${ks.impex.password}</password>
          <url>${ks.impex.url}</url>
          <driver>${ks.impex.driver}</driver>
          <dataXMLDir>${project.build.directory}/generated-impex/xml</dataXMLDir>
          <schemaDir>${project.build.directory}/generated-impex</schemaDir>
          <schemaXMLFile>${project.build.directory}/generated-impex/${project.artifactId}.xml</schemaXMLFile>
          <dateFormat>${ks.impex.date.format}</dateFormat>
          <includeVersionInComment>${ks.impex.include.version.in.comment}</includeVersionInComment>
          <antCompatibilityMode>${ks.impex.ant.compatibility.mode}</antCompatibilityMode>
        </configuration>
        <executions>
          <execution>
            <id>morph-xml</id>
            <phase>${ks.impex.generate.morph.phase}</phase>
            <goals>
              <goal>morphschema</goal>
              <goal>morphdata</goal>
            </goals>
          </execution>
          <execution>
            <id>generate-data-dtd</id>
            <phase>${ks.impex.generate.dtd.phase}</phase>
            <goals>
              <goal>datadtd</goal>
            </goals>
          </execution>
          <execution>
            <id>generate-oracle-sql</id>
            <phase>${ks.impex.generate.sql.oracle.phase}</phase>
            <goals>
              <goal>schemasql</goal>
              <goal>datasql</goal>
            </goals>
            <configuration>
              <targetDatabase>oracle</targetDatabase>
            </configuration>
          </execution>
          <execution>
            <id>generate-mysql-sql</id>
            <phase>${ks.impex.generate.sql.mysql.phase}</phase>
            <goals>
              <goal>schemasql</goal>
              <goal>datasql</goal>
            </goals>
            <configuration>
              <targetDatabase>mysql</targetDatabase>
            </configuration>
          </execution>
          <execution>
            <id>import-data</id>
            <phase>none</phase>
            <goals>
              <goal>import</goal>
            </goals>
          </execution>
          <execution>
            <id>export-db</id>
            <phase>none</phase>
            <goals>
              <goal>exportschema</goal>
              <goal>exportdata</goal>
              <goal>datadtd</goal>
            </goals>
            <configuration>
              <schemaXMLFile>${basedir}/src/main/impex/schema.xml</schemaXMLFile>
              <dataXMLDir>${basedir}/src/main/impex</dataXMLDir>
              <copyToFile>${basedir}/src/main/impex/data.dtd</copyToFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>all-dbs</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>ks-rice-db</module>
        <module>ks-embedded-db</module>
        <module>ks-standalone-db</module>
      </modules>
    </profile>
    <profile>
      <id>skip-impex</id>
      <!-- Turn off SQL generation and don't include any modules -->
      <properties>
        <ks.impex.generate.phase>none</ks.impex.generate.phase>
      </properties>
      <activation>
        <property>
          <name>ks.impex.skip</name>
        </property>
      </activation>
    </profile>
    <profile>
      <id>embedded-only</id>
      <modules>
        <module>ks-embedded-db</module>
      </modules>
    </profile>
    <profile>
      <id>standalone-only</id>
      <modules>
        <module>ks-standalone-db</module>
      </modules>
    </profile>
    <profile>
      <id>rice-only</id>
      <modules>
        <module>ks-rice-db</module>
      </modules>
    </profile>
    <profile>
      <!--
        This profile sets properties for Oracle specific SQL that handles dropping and creating
        Oracle schemas as well as granting permissions
      -->
      <id>oracle</id>
      <properties>
        <ks.impex.delimiter>${ks.impex.oracle.delimiter}</ks.impex.delimiter>
        <ks.impex.url>${ks.impex.oracle.default.url}</ks.impex.url>
        <ks.impex.driver>${ks.impex.oracle.driver}</ks.impex.driver>
        <ks.impex.dba.username>${ks.impex.oracle.dba.username}</ks.impex.dba.username>
        <ks.impex.dba.password>${ks.impex.oracle.dba.password}</ks.impex.dba.password>
        <ks.impex.sql.validate>${ks.impex.oracle.sql.validate}</ks.impex.sql.validate>
        <ks.impex.sql.drop>${ks.impex.oracle.sql.drop}</ks.impex.sql.drop>
        <ks.impex.sql.pre.export>${ks.impex.oracle.sql.pre.export}</ks.impex.sql.pre.export>
        <ks.impex.sql.initialize>
          ${ks.impex.oracle.sql.create}
          ${ks.impex.oracle.sql.grants}
        </ks.impex.sql.initialize>
        <ks.impex.generate.sql.mysql.phase>none</ks.impex.generate.sql.mysql.phase>
      </properties>
    </profile>
    <profile>
      <!--
        This profile connects the dropping/creating/loading of a database to appropriate
        phases of the Maven build lifecycle. The "clean" phase drops the db, the "initialize" phase creates the
        db and grants permissions, and the "install" phase loads data into the db
      -->
      <id>ks-db</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>maven-impex-plugin</artifactId>
            <executions>
              <execution>
                <id>import-data</id>
                <phase>install</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>drop-db</id>
                <phase>clean</phase>
              </execution>
              <execution>
                <id>validate-dba-config</id>
                <phase>validate</phase>
              </execution>
              <execution>
                <id>init-db</id>
                <phase>initialize</phase>
              </execution>
              <execution>
                <id>validate-db-config</id>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        This profile generates XML files by inspecting a database materialized from the
        database control files
      -->
      <id>generate-xml</id>
      <modules>
        <module>ks-standalone-db</module>
        <module>ks-embedded-db</module>
      </modules>
      <properties>
        <ks.impex.url>${ks.impex.masterdb.url}</ks.impex.url>
        <ks.impex.username>${ks.impex.masterdb.username}</ks.impex.username>
        <ks.impex.password>${ks.impex.masterdb.password}</ks.impex.password>
        <ks.impex.schema>${ks.impex.masterdb.schema}</ks.impex.schema>
        <ks.impex.generate.phase>none</ks.impex.generate.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>pre-export-config</id>
                <phase>generate-resources</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>execute-pre-export-sql</id>
                <phase>generate-resources</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>maven-impex-plugin</artifactId>
            <executions>
              <execution>
                <id>export-db</id>
                <phase>generate-resources</phase>
                <configuration>
                  <schema>${ks.impex.masterdb.schema}</schema>
                  <antCompatibilityMode>true</antCompatibilityMode>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        This profile materializes a database from the combination of Kuali Student SQL
        files and Rice Impex XML files. The system of record for the Kuali Student database is
        the set of Oracle SQL files and Rice Impex XML files checked into SCM. This profile helps
        verify the correctness of that control data by materializing a database from it
      -->
      <id>materialize-db</id>
      <properties>
        <ks.impex.url>${ks.impex.masterdb.url}</ks.impex.url>
        <ks.impex.schema>${ks.impex.masterdb.schema}</ks.impex.schema>
        <ks.impex.username>${ks.impex.masterdb.username}</ks.impex.username>
        <ks.impex.password>${ks.impex.masterdb.password}</ks.impex.password>
        <ks.impex.generate.phase>none</ks.impex.generate.phase>
        <ks.impex.sql.post.materialization>${ks.impex.oracle.sql.post.materialization}</ks.impex.sql.post.materialization>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>drop-db-config</id>
                <phase>pre-clean</phase>
              </execution>
              <execution>
                <id>dba-config</id>
                <phase>validate</phase>
              </execution>
              <execution>
                <id>init-db-config</id>
                <phase>initialize</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.kuali.student.core</groupId>
                      <artifactId>ks-core-sql</artifactId>
                      <version>${project.version}</version>
                      <includes>**\/*.sql</includes>
                      <outputDirectory>${project.build.directory}/gen/data</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.kuali.student.lum</groupId>
                      <artifactId>ks-lum-sql</artifactId>
                      <version>${project.version}</version>
                      <includes>**\/*.sql</includes>
                      <outputDirectory>${project.build.directory}/gen/data</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.kuali.student.enroll</groupId>
                      <artifactId>ks-enroll-sql</artifactId>
                      <version>${project.version}</version>
                      <includes>**\/*.sql</includes>
                      <outputDirectory>${project.build.directory}/gen/data</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.kuali.student.db</groupId>
                      <artifactId>ks-rice-db</artifactId>
                      <version>${project.version}</version>
                      <includes>**/oracle/*.sql</includes>
                      <outputDirectory>${project.build.directory}/gen/data/rice</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.kuali.student.core</groupId>
                <artifactId>ks-core-sql</artifactId>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.kuali.student.lum</groupId>
                <artifactId>ks-lum-sql</artifactId>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.kuali.student.enroll</groupId>
                <artifactId>ks-enroll-sql</artifactId>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.kuali.student.db</groupId>
                <artifactId>ks-rice-db</artifactId>
                <version>${project.version}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>maven-impex-plugin</artifactId>
            <configuration>
              <forceMojoExecution>true</forceMojoExecution>
              <importDir>${project.build.directory}/gen/data/rice/sql</importDir>
            </configuration>
            <executions>
              <execution>
                <id>create-rice-schema</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>import</goal>
                </goals>
                <configuration>
                  <importDirIncludes>ks-rice-db.sql</importDirIncludes>
                </configuration>
              </execution>
              <execution>
                <id>load-rice-data</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>import</goal>
                </goals>
                <configuration>
                  <importDirExcludes>ks-rice-db*.sql</importDirExcludes>
                </configuration>
              </execution>
              <execution>
                <id>add-rice-constraints</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>import</goal>
                </goals>
                <configuration>
                  <importDirIncludes>ks-rice-db-constraints.sql</importDirIncludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <configuration>
              <forceMojoExecution>true</forceMojoExecution>
            </configuration>
            <executions>
              <execution>
                <id>drop-db</id>
                <phase>clean</phase>
              </execution>
              <execution>
                <id>validate-dba-config</id>
                <phase>validate</phase>
              </execution>
              <execution>
                <id>init-db</id>
                <phase>initialize</phase>
              </execution>
              <execution>
                <id>create-schema</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <fileset>
                    <basedir>${project.build.directory}/gen/data</basedir>
                    <includes>
                      <include>initial-db/*/*-create-schema.sql</include>
                    </includes>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <id>load-data</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <fileset>
                    <basedir>${project.build.directory}/gen/data</basedir>
                    <includes>
                      <include>initial-db/*/*data/*.sql</include>
                    </includes>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <id>add-constraints</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <fileset>
                    <basedir>${project.build.directory}/gen/data</basedir>
                    <includes>
                      <include>initial-db/*/*-constraints.sql</include>
                    </includes>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <id>run-upgrades</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <fileset>
                    <basedir>${project.build.directory}/gen/data</basedir>
                    <includes>
                      <include>upgrades/**/*.sql</include>
                    </includes>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <!-- Perform cleanup on the materialized database as needed -->
                <id>execute-post-materialization-sql</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <sqlCommand>${ks.impex.sql.post.materialization}</sqlCommand>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- This profile commits any Impex changes to SCM -->
      <id>commit-impex-changes</id>
      <modules>
        <module>ks-standalone-db</module>
        <module>ks-embedded-db</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>maven-impex-plugin</artifactId>
            <executions>
              <execution>
                <id>id-invalid</id>
                <phase>initialize</phase>
                <goals>
                  <goal>id-invalid-data-files</goal>
                </goals>
                <configuration>
                  <schemaXMLFile>${project.basedir}/src/main/impex/schema.xml</schemaXMLFile>
                </configuration>
              </execution>
              <execution>
                <id>morph-xml</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>generate-data-dtd</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>generate-oracle-sql</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>generate-mysql-sql</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <configuration>
              <message>Automated Impex update</message>
            </configuration>
            <executions>
              <execution>
                <id>add</id>
                <phase>${scm.phase}</phase>
                <goals>
                  <goal>add</goal>
                  <goal>checkin</goal>
                </goals>
                <configuration>
                  <includes>**/src/main/impex/*.xml,**/src/main/impex/*.dtd</includes>
                </configuration>
              </execution>
              <execution>
                <id>remove</id>
                <phase>${scm.phase}</phase>
                <goals>
                  <goal>remove</goal>
                  <goal>checkin</goal>
                </goals>
                <configuration>
                  <includes>${impex.data.invalid}</includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
