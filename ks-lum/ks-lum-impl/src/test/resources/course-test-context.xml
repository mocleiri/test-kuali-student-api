<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 The Kuali Foundation Licensed under the
    Educational Community License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may
    obtain a copy of the License at

    http://www.osedu.org/licenses/ECL-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing
    permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:ws="http://jax-ws.dev.java.net/spring/core"
	xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
          http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd 
          http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    	  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<context:annotation-config/>
	
    <import resource="classpath:META-INF/default-property-config-context-test.xml"/>

	<bean id="systemPropertyConfigurer"
		class="org.kuali.student.common.util.SystemPropertyConfigurer">
		<property name="properties" value="${propertiesPrefix.systemProperties}"/>
	</bean>

	<bean id="dataSource"
		class="org.kuali.student.common.test.spring.UniqueResourceAtomikosDataSourceBean" init-method="init"
		destroy-method="close" depends-on="systemPropertyConfigurer">
		<property name="uniqueResourceName" value="dataSource" />
		<property name="xaDataSourceClassName"
			value="${jdbc.xaDataSourceClassName}" />
		<property name="xaProperties" value="${propertiesPrefix.jdbc.xaDataSourceProperties}"/>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
	</bean>

	<!-- JPA EntityManagerFactory -->
	<bean id="postProcessorList" class="java.util.ArrayList">
		<constructor-arg index="0">
			<list>
				<bean id="ricePostProcessor"
					class="org.kuali.rice.core.jpa.spring.RicePersistenceUnitPostProcessor">
					<property name="jtaDataSource"
						ref="dataSource" />
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="vendorAdapter" class="${jpa.vendorAdapter}" depends-on="propertyConfigurer">
		<property name="databasePlatform"
			value="${jpa.databasePlatform}" />
		<property name="showSql" value="${jpa.showSql}" />
		<property name="generateDdl" value="${jpa.generateDdl}" />
	</bean>

    <!-- Default JPA EntityManagerFactory -->
    <bean id="defaultEntityManagerFactory" abstract="true"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter" ref="vendorAdapter" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaPropertyMap" value="${propertiesPrefix.jpa.properties}"/>
		<property name="persistenceUnitPostProcessors" ref="postProcessorList" />
    </bean>

	<bean id="AtomikosTxMgr"
		class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" depends-on="systemPropertyConfigurer">
		<property name="forceShutdown" value="true" />
		<property name="startupTransactionService" value="true" />
		<property name="transactionTimeout" value="60" />
	</bean>

	<bean id="AtomikosUsrTx"
		class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="systemPropertyConfigurer"></bean>

	<bean id="JtaTxManager"
		class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="systemPropertyConfigurer">
		<property name="transactionManager" ref="AtomikosTxMgr" />
		<property name="userTransaction" ref="AtomikosUsrTx" />
		<property name="transactionSynchronizationName"
			value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.kuali.student.common.util.jta.AtomikosJtaTransactionController"/>
		<property name="targetMethod" value="setTm"/>
		<property name="arguments">
			<list>
				<ref bean="AtomikosTxMgr"/>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.kuali.student.common.util.jta.AtomikosManagedRuntime"/>
		<property name="targetMethod" value="setTm"/>
		<property name="arguments">
			<list>
				<ref bean="AtomikosTxMgr"/>
			</list>
		</property>
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<tx:annotation-driven transaction-manager="JtaTxManager"
		order="1000" />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
		
	<!-- Exception mapping. This is needed because many operations are proxied and do not throw exceptions until a later time -->
	<bean id="mapExceptionAdvisor"
		class="org.kuali.student.common.util.ExceptionMappingAdvice">
		<property name="defaultException"
			value="org.kuali.student.core.exceptions.OperationFailedException" />
		<property name="exceptionMapping">
			<map>
				<entry key="javax.persistence.EntityExistsException"
					value="org.kuali.student.core.exceptions.AlreadyExistsException" />
				<entry
					key="org.hibernate.exception.ConstraintViolationException"
					value="org.kuali.student.core.exceptions.AlreadyExistsException" />
			</map>
		</property>
	</bean>
	<aop:config>
		<aop:aspect id="dataAccessToBusinessException"
			ref="mapExceptionAdvisor">
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.lum.lu.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.lum.lrc.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.lum.lo.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
		</aop:aspect>
	</aop:config>

	<!--                     -->	
	<!-- CORE Service Config -->
	<!--                     -->	
    <!--  Organization Service Config -->
    <bean id="coreDictionaryServiceDelegate" class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl">
        <!--<constructor-arg index="0" value="${ks.core.dictionary.serviceContextLocations}" />-->
    </bean>
    
    <bean id="orgEntityManagerFactory" parent="defaultEntityManagerFactory">
        <property name="persistenceUnitName" value="Organization"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/organization-persistence.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="orgEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="orgEntityManagerFactory" />
    </bean>

    <bean id="orgDao"
        class="org.kuali.student.core.organization.dao.impl.OrganizationDaoImpl">
        <property name="em" ref="orgEntityManager" />
    </bean>

    <bean id="orgServiceImpl"
        class="org.kuali.student.core.organization.service.impl.OrganizationServiceImpl">
        <property name="organizationDao" ref="orgDao" />
        <property name="searchManager" ref="orgSearchManager" />
        <property name="dictionaryServiceDelegate" ref="coreDictionaryServiceDelegate"/>
    </bean>

    <bean id="orgSearchManager"
        class="org.kuali.student.core.search.service.impl.SearchManagerImpl">
        <constructor-arg index="0" value="classpath:organization-search-config.xml" />
    </bean>
    
	<!-- Atp Service Config -->
	<bean id="atpEntityManagerFactory" parent="defaultEntityManagerFactory">
        <property name="persistenceUnitName" value="Atp"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/atp-persistence.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="atpEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="atpEntityManagerFactory" />
    </bean>

    <bean id="atpDao"
        class="org.kuali.student.core.atp.dao.impl.AtpDaoImpl">
        <property name="em" ref="atpEntityManager" />
    </bean>

    <bean id="atpServiceImpl"
        class="org.kuali.student.core.atp.service.impl.AtpServiceImpl">
        <property name="atpDao" ref="atpDao" />
        <property name="searchManager" ref="atpSearchManager"/>
    </bean>

    <bean id="atpSearchManager"
        class="org.kuali.student.core.search.service.impl.SearchManagerImpl">
        <constructor-arg index="0" value="classpath:atp-search-config.xml" />
    </bean>
    
	<!--                   -->	
	<!-- LU Service Config -->
	<!--                   -->	
	
	<!-- Service Validator and messages -->
	<bean id="ks.messageServiceMock" class="org.kuali.student.core.messages.service.impl.MessageServiceMock">
		<property name="messageFiles">
			<list>
				<value>classpath:org\kuali\student\common\ui\gwt-messages.xml</value>
				<value>classpath:org\kuali\student\lum\lu\ui\course\gwt-messages.xml</value>				
			</list>
		</property>
	</bean>

	<bean id="serviceValidator" class="org.kuali.student.common.validator.Validator">
		<property name="messageService" ref="ks.messageServiceMock"/>		
	</bean>
	
	<!-- Learning Service Config -->
	<bean id="luEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="Lu"/>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/lu-persistence.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="luEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="luEntityManagerFactory" />
    </bean>
	
	<bean id="luDao"
		class="org.kuali.student.lum.lu.dao.impl.LuDaoImpl">
        <property name="em" ref="luEntityManager" />		
	</bean>

	<bean id="luSearchManager" class="org.kuali.student.core.search.service.impl.SearchManagerImpl">
		<constructor-arg index="0" value="classpath:lu-search-config.xml" />
		<property name="crossSearchManager" ref="lumCrossServiceSearchManager"/>
	</bean>

	<bean id="lumDictionary" class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl">
		<!--<constructor-arg index="0" value="${ks.lum.dictionary.serviceContextLocations}" />-->	
	</bean>
	
	<bean id="luClient" class="org.kuali.rice.student.ksb.messaging.KSBClientProxyFactoryBean">
		<property name="serviceEndpointInterface" value="org.kuali.student.lum.lu.service.LuService" />
		<property name="serviceQName" value="{http://student.kuali.org/wsdl/lu}LuService" />
	</bean>  

	<bean id="proposalClient" class="org.kuali.rice.student.ksb.messaging.KSBClientProxyFactoryBean">
		<property name="serviceEndpointInterface" value="org.kuali.student.core.proposal.service.ProposalService" />
		<property name="serviceQName" value="{http://student.kuali.org/wsdl/proposal}ProposalService" />
	</bean>
	  
	<bean id="luServiceImpl"
		class="org.kuali.student.lum.lu.service.impl.LuServiceImpl">
		<property name="luDao" ref="luDao" />
        <property name="searchManager" ref="luSearchManager" />
        <property name="dictionaryServiceDelegate" ref="lumDictionary" />
        <property name="validator" ref="serviceValidator"/>
	</bean>
	
	<!-- Statement Service Config -->
	<import resource="classpath:statement-context.xml"/>
	
	<bean id="statementEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="Statement"/>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/statement-persistence.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="statementEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="statementEntityManagerFactory" />
    </bean>
	
	<bean id="statementDao"
		class="org.kuali.student.core.statement.dao.impl.StatementDaoImpl">
        <property name="em" ref="statementEntityManager" />		
	</bean>

	<bean id="statementSearchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl">
		<constructor-arg index="0" value="classpath:lu-search-config.xml" />
	</bean>

    <bean id="statementAssembler"
        class="org.kuali.student.core.statement.service.impl.StatementAssembler">
        <property name="statementDao" ref="statementDao"/>
    </bean>
    
	<bean id="statementServiceImpl"
		class="org.kuali.student.core.statement.service.impl.StatementServiceImpl">
        <property name="statementAssembler" ref="statementAssembler"/>
		<property name="statementDao" ref="statementDao" />
        <property name="searchManager" ref="statementSearchManager" />
        <property name="dictionaryServiceDelegate" ref="lumDictionary" />
        <property name="naturalLanguageTranslator" ref="naturalLanguageTranslator" />
	</bean>
	
	<!-- Learning Objective service config -->
	<bean id="loEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="Lo"/>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/lo-persistence.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="loEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="loEntityManagerFactory" />
    </bean>

	<bean id="loDao"
		class="org.kuali.student.lum.lo.dao.impl.LoDaoImpl">
        <property name="em" ref="loEntityManager" />		
	</bean>

	<bean id="loSearchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl">
		<constructor-arg index="0" value="classpath:lo-search-config.xml" />
		<property name="crossSearchManager" ref="lumCrossServiceSearchManager"/>
	</bean>

	<bean id="loServiceImpl"
		class="org.kuali.student.lum.lo.service.impl.LearningObjectiveServiceImpl">
		<property name="loDao" ref="loDao" />
        <property name="searchManager" ref="loSearchManager" />
        <property name="dictionaryServiceDelegate" ref="lumDictionary" />
        <property name="validator" ref="serviceValidator"/>
	</bean>
	
	<!-- Learning Result service config -->
	<bean id="lrcEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="Lrc"/>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/lrc-persistence.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="lrcEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="lrcEntityManagerFactory" />
    </bean>

	<bean id="lrcDao"
		class="org.kuali.student.lum.lrc.dao.impl.LrcDaoImpl">
        <property name="em" ref="lrcEntityManager" />		
	</bean>

	<bean id="lrcSearchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl">
		<constructor-arg index="0" value="classpath:lrc-search-config.xml" />
		<property name="crossSearchManager" ref="lumCrossServiceSearchManager"/>
	</bean>
	
	<bean id="lrcServiceImpl"
		class="org.kuali.student.lum.lrc.service.impl.LrcServiceImpl">
		<property name="lrcDao" ref="lrcDao" />
        <property name="searchManager" ref="lrcSearchManager" />
	</bean>
	
	<!-- Search -->
	<bean id="lumCrossServiceSearchManager" class="org.kuali.student.core.search.service.impl.CrossSearchManager">
		<property name="searchDispatcher" ref="lumSearchDispatcher"/>
	</bean>
	
	<bean id="lumSearchDispatcher" class="org.kuali.student.core.search.service.impl.SearchDispatcherImpl">
		<property name="services">
			<list>
				<ref bean="loServiceImpl"/>
				<ref bean="luServiceImpl"/>
				<ref bean="lrcServiceImpl"/>
				<ref bean="orgServiceImpl"/>
			</list>
		</property>
	</bean>
	
	<!-- CourseService -->
	<bean id="courseServiceImpl" class="org.kuali.student.lum.course.service.impl.CourseServiceImpl">
		<property name="atpService" ref="atpServiceImpl"/>
		<property name="loService" ref="loServiceImpl"/>
		<property name="luService" ref="luServiceImpl"/>
		<property name="orgService" ref="orgServiceImpl"/>
		<property name="statementService" ref="statementServiceImpl"/>
	</bean>
	
</beans>