<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="OrganizationService" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/organization" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:ns2="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/organization" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization">
    <xs:import namespace="http://student.kuali.org/wsdl/search"/>
    <xs:element name="addPositionRestrictionToOrg" type="tns:addPositionRestrictionToOrg"/>
    <xs:element name="addPositionRestrictionToOrgResponse" type="tns:addPositionRestrictionToOrgResponse"/>
    <xs:element name="createOrgOrgRelation" type="tns:createOrgOrgRelation"/>
    <xs:element name="createOrgOrgRelationResponse" type="tns:createOrgOrgRelationResponse"/>
    <xs:element name="createOrgPersonRelation" type="tns:createOrgPersonRelation"/>
    <xs:element name="createOrgPersonRelationResponse" type="tns:createOrgPersonRelationResponse"/>
    <xs:element name="createOrganization" type="tns:createOrganization"/>
    <xs:element name="createOrganizationResponse" type="tns:createOrganizationResponse"/>
    <xs:element name="deleteOrganization" type="tns:deleteOrganization"/>
    <xs:element name="deleteOrganizationResponse" type="tns:deleteOrganizationResponse"/>
    <xs:element name="getAllAncestors" type="tns:getAllAncestors"/>
    <xs:element name="getAllAncestorsResponse" type="tns:getAllAncestorsResponse"/>
    <xs:element name="getAllDescendants" type="tns:getAllDescendants"/>
    <xs:element name="getAllDescendantsResponse" type="tns:getAllDescendantsResponse"/>
    <xs:element name="getAllOrgPersonRelationsByOrg" type="tns:getAllOrgPersonRelationsByOrg"/>
    <xs:element name="getAllOrgPersonRelationsByOrgResponse" type="tns:getAllOrgPersonRelationsByOrgResponse"/>
    <xs:element name="getAllOrgPersonRelationsByPerson" type="tns:getAllOrgPersonRelationsByPerson"/>
    <xs:element name="getAllOrgPersonRelationsByPersonResponse" type="tns:getAllOrgPersonRelationsByPersonResponse"/>
    <xs:element name="getOrgHierarchies" type="tns:getOrgHierarchies"/>
    <xs:element name="getOrgHierarchiesResponse" type="tns:getOrgHierarchiesResponse"/>
    <xs:element name="getOrgHierarchy" type="tns:getOrgHierarchy"/>
    <xs:element name="getOrgHierarchyResponse" type="tns:getOrgHierarchyResponse"/>
    <xs:element name="getOrgOrgRelation" type="tns:getOrgOrgRelation"/>
    <xs:element name="getOrgOrgRelationResponse" type="tns:getOrgOrgRelationResponse"/>
    <xs:element name="getOrgOrgRelationType" type="tns:getOrgOrgRelationType"/>
    <xs:element name="getOrgOrgRelationTypeResponse" type="tns:getOrgOrgRelationTypeResponse"/>
    <xs:element name="getOrgOrgRelationTypes" type="tns:getOrgOrgRelationTypes"/>
    <xs:element name="getOrgOrgRelationTypesForOrgHierarchy" type="tns:getOrgOrgRelationTypesForOrgHierarchy"/>
    <xs:element name="getOrgOrgRelationTypesForOrgHierarchyResponse" type="tns:getOrgOrgRelationTypesForOrgHierarchyResponse"/>
    <xs:element name="getOrgOrgRelationTypesForOrgType" type="tns:getOrgOrgRelationTypesForOrgType"/>
    <xs:element name="getOrgOrgRelationTypesForOrgTypeResponse" type="tns:getOrgOrgRelationTypesForOrgTypeResponse"/>
    <xs:element name="getOrgOrgRelationTypesResponse" type="tns:getOrgOrgRelationTypesResponse"/>
    <xs:element name="getOrgOrgRelationsByIdList" type="tns:getOrgOrgRelationsByIdList"/>
    <xs:element name="getOrgOrgRelationsByIdListResponse" type="tns:getOrgOrgRelationsByIdListResponse"/>
    <xs:element name="getOrgOrgRelationsByOrg" type="tns:getOrgOrgRelationsByOrg"/>
    <xs:element name="getOrgOrgRelationsByOrgResponse" type="tns:getOrgOrgRelationsByOrgResponse"/>
    <xs:element name="getOrgOrgRelationsByRelatedOrg" type="tns:getOrgOrgRelationsByRelatedOrg"/>
    <xs:element name="getOrgOrgRelationsByRelatedOrgResponse" type="tns:getOrgOrgRelationsByRelatedOrgResponse"/>
    <xs:element name="getOrgPersonRelation" type="tns:getOrgPersonRelation"/>
    <xs:element name="getOrgPersonRelationResponse" type="tns:getOrgPersonRelationResponse"/>
    <xs:element name="getOrgPersonRelationType" type="tns:getOrgPersonRelationType"/>
    <xs:element name="getOrgPersonRelationTypeResponse" type="tns:getOrgPersonRelationTypeResponse"/>
    <xs:element name="getOrgPersonRelationTypes" type="tns:getOrgPersonRelationTypes"/>
    <xs:element name="getOrgPersonRelationTypesForOrgType" type="tns:getOrgPersonRelationTypesForOrgType"/>
    <xs:element name="getOrgPersonRelationTypesForOrgTypeResponse" type="tns:getOrgPersonRelationTypesForOrgTypeResponse"/>
    <xs:element name="getOrgPersonRelationTypesResponse" type="tns:getOrgPersonRelationTypesResponse"/>
    <xs:element name="getOrgPersonRelationsByIdList" type="tns:getOrgPersonRelationsByIdList"/>
    <xs:element name="getOrgPersonRelationsByIdListResponse" type="tns:getOrgPersonRelationsByIdListResponse"/>
    <xs:element name="getOrgPersonRelationsByOrg" type="tns:getOrgPersonRelationsByOrg"/>
    <xs:element name="getOrgPersonRelationsByOrgResponse" type="tns:getOrgPersonRelationsByOrgResponse"/>
    <xs:element name="getOrgPersonRelationsByPerson" type="tns:getOrgPersonRelationsByPerson"/>
    <xs:element name="getOrgPersonRelationsByPersonResponse" type="tns:getOrgPersonRelationsByPersonResponse"/>
    <xs:element name="getOrgTree" type="tns:getOrgTree"/>
    <xs:element name="getOrgTreeResponse" type="tns:getOrgTreeResponse"/>
    <xs:element name="getOrgType" type="tns:getOrgType"/>
    <xs:element name="getOrgTypeResponse" type="tns:getOrgTypeResponse"/>
    <xs:element name="getOrgTypes" type="tns:getOrgTypes"/>
    <xs:element name="getOrgTypesResponse" type="tns:getOrgTypesResponse"/>
    <xs:element name="getOrganization" type="tns:getOrganization"/>
    <xs:element name="getOrganizationResponse" type="tns:getOrganizationResponse"/>
    <xs:element name="getOrganizationsByIdList" type="tns:getOrganizationsByIdList"/>
    <xs:element name="getOrganizationsByIdListResponse" type="tns:getOrganizationsByIdListResponse"/>
    <xs:element name="getPersonIdsForOrgByRelationType" type="tns:getPersonIdsForOrgByRelationType"/>
    <xs:element name="getPersonIdsForOrgByRelationTypeResponse" type="tns:getPersonIdsForOrgByRelationTypeResponse"/>
    <xs:element name="getPositionRestrictionsByOrg" type="tns:getPositionRestrictionsByOrg"/>
    <xs:element name="getPositionRestrictionsByOrgResponse" type="tns:getPositionRestrictionsByOrgResponse"/>
    <xs:element name="hasOrgOrgRelation" type="tns:hasOrgOrgRelation"/>
    <xs:element name="hasOrgOrgRelationResponse" type="tns:hasOrgOrgRelationResponse"/>
    <xs:element name="hasOrgPersonRelation" type="tns:hasOrgPersonRelation"/>
    <xs:element name="hasOrgPersonRelationResponse" type="tns:hasOrgPersonRelationResponse"/>
    <xs:element name="isDescendant" type="tns:isDescendant"/>
    <xs:element name="isDescendantResponse" type="tns:isDescendantResponse"/>
    <xs:element name="removeOrgOrgRelation" type="tns:removeOrgOrgRelation"/>
    <xs:element name="removeOrgOrgRelationResponse" type="tns:removeOrgOrgRelationResponse"/>
    <xs:element name="removeOrgPersonRelation" type="tns:removeOrgPersonRelation"/>
    <xs:element name="removeOrgPersonRelationResponse" type="tns:removeOrgPersonRelationResponse"/>
    <xs:element name="removePositionRestrictionFromOrg" type="tns:removePositionRestrictionFromOrg"/>
    <xs:element name="removePositionRestrictionFromOrgResponse" type="tns:removePositionRestrictionFromOrgResponse"/>
    <xs:element name="search" type="tns:search"/>
    <xs:element name="searchResponse" type="tns:searchResponse"/>
    <xs:element name="updateOrgOrgRelation" type="tns:updateOrgOrgRelation"/>
    <xs:element name="updateOrgOrgRelationResponse" type="tns:updateOrgOrgRelationResponse"/>
    <xs:element name="updateOrgPersonRelation" type="tns:updateOrgPersonRelation"/>
    <xs:element name="updateOrgPersonRelationResponse" type="tns:updateOrgPersonRelationResponse"/>
    <xs:element name="updateOrganization" type="tns:updateOrganization"/>
    <xs:element name="updateOrganizationResponse" type="tns:updateOrganizationResponse"/>
    <xs:element name="updatePositionRestrictionForOrg" type="tns:updatePositionRestrictionForOrg"/>
    <xs:element name="updatePositionRestrictionForOrgResponse" type="tns:updatePositionRestrictionForOrgResponse"/>
    <xs:element name="validateOrg" type="tns:validateOrg"/>
    <xs:element name="validateOrgOrgRelation" type="tns:validateOrgOrgRelation"/>
    <xs:element name="validateOrgOrgRelationResponse" type="tns:validateOrgOrgRelationResponse"/>
    <xs:element name="validateOrgPersonRelation" type="tns:validateOrgPersonRelation"/>
    <xs:element name="validateOrgPersonRelationResponse" type="tns:validateOrgPersonRelationResponse"/>
    <xs:element name="validateOrgPositionRestriction" type="tns:validateOrgPositionRestriction"/>
    <xs:element name="validateOrgPositionRestrictionResponse" type="tns:validateOrgPositionRestrictionResponse"/>
    <xs:element name="validateOrgResponse" type="tns:validateOrgResponse"/>
    <xs:complexType name="validateOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="orgInfo" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="longName" type="xs:string"/>
            <xs:element minOccurs="0" name="shortName" type="xs:string"/>
            <xs:element minOccurs="0" name="sortName" type="xs:string"/>
            <xs:element minOccurs="0" name="shortDesc" type="xs:string"/>
            <xs:element minOccurs="0" name="longDesc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="orgCodes" type="tns:orgCodeInfo"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="orgCodeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validationResultInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="element" type="xs:string"/>
            <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getPersonIdsForOrgByRelationType">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getPersonIdsForOrgByRelationTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateOrgOrgRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgOrgRelationId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgOrgRelationInfo" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgOrgRelationInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="relatedOrgId" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="updateOrgOrgRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrganization">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrganizationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removePositionRestrictionFromOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removePositionRestrictionFromOrgResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="success" type="xs:boolean"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgOrgRelationId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="search">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getPositionRestrictionsByOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getPositionRestrictionsByOrgResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgPositionRestrictionInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="title" type="xs:string"/>
            <xs:element minOccurs="0" name="stdDuration" type="tns:timeAmountInfo"/>
            <xs:element minOccurs="0" name="minNumRelations" type="xs:int"/>
            <xs:element minOccurs="0" name="maxNumRelations" type="xs:string"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="timeAmountInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpDurationTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="timeQuantity" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgPersonRelationTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgPersonRelationId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgPersonRelationInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="personId" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="removeOrgPersonRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgPersonRelationId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeOrgPersonRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgType">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationsByPerson">
        <xs:sequence>
            <xs:element minOccurs="0" name="personId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationsByPersonResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateOrgPersonRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgPersonRelationId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationInfo" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateOrgPersonRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgTree">
        <xs:sequence>
            <xs:element minOccurs="0" name="rootOrgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgHierarchyId" type="xs:string"/>
            <xs:element name="maxLevels" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgTreeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgTreeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgTreeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="positionId" type="xs:string"/>
            <xs:element minOccurs="0" name="personId" type="xs:string"/>
            <xs:element minOccurs="0" name="relationType" type="xs:string"/>
            <xs:element minOccurs="0" name="orgHierarchyId" type="xs:string"/>
            <xs:element name="positions" type="xs:long"/>
        </xs:sequence>
        <xs:attribute name="orgId" type="xs:string"/>
        <xs:attribute name="parentId" type="xs:string"/>
        <xs:attribute name="displayName" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="createOrgPersonRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="personId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationInfo" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createOrgPersonRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationsByOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationsByOrgResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteOrganization">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteOrganizationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateOrganization">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgInfo" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateOrganizationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationType">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgOrgRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgOrgRelationTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="revName" type="xs:string"/>
                    <xs:element minOccurs="0" name="revDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="orgHierarchyKey" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="hasOrgPersonRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="personId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="hasOrgPersonRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeOrgOrgRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgOrgRelationId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeOrgOrgRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createOrganization">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="orgInfo" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createOrganizationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addPositionRestrictionToOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPositionRestrictionInfo" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addPositionRestrictionToOrgResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrganizationsByIdList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="orgIdList" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrganizationsByIdListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationsByIdList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="orgPersonRelationIdList" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationsByIdListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updatePositionRestrictionForOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPositionRestrictionInfo" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updatePositionRestrictionForOrgResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationType">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationTypesForOrgType">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgPersonRelationTypesForOrgTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="hasOrgOrgRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="comparisonOrgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgOrgRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="hasOrgOrgRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgHierarchy">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgHierarchyKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgHierarchyResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgHierarchyInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="orgHierarchyInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rootOrgId" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="getOrgHierarchies">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getOrgHierarchiesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgHierarchyInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationsByIdList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="orgOrgRelationIdList" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationsByIdListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationsByRelatedOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="relatedOrgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationsByRelatedOrgResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllOrgPersonRelationsByOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllOrgPersonRelationsByOrgResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgOrgRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="orgOrgRelationInfo" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgOrgRelationResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getOrgTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isDescendant">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="descendantOrgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgHierarchy" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isDescendantResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgPositionRestriction">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPositionRestrictionInfo" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgPositionRestrictionResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypesForOrgType">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypesForOrgTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationsByOrg">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationsByOrgResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypesForOrgHierarchy">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgHierarchyKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypesForOrgHierarchyResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllOrgPersonRelationsByPerson">
        <xs:sequence>
            <xs:element minOccurs="0" name="personId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllOrgPersonRelationsByPersonResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createOrgOrgRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="relatedOrgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgOrgRelationTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="orgOrgRelationInfo" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createOrgOrgRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getOrgOrgRelationTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllDescendants">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgHierarchy" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllDescendantsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgPersonRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="orgPersonRelationInfo" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateOrgPersonRelationResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllAncestors">
        <xs:sequence>
            <xs:element minOccurs="0" name="orgId" type="xs:string"/>
            <xs:element minOccurs="0" name="orgHierarchy" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllAncestorsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="WARN"/>
            <xs:enumeration value="ERROR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
    <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
    <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
    <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
    <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
    <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
    <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
    <xs:element name="getSearchResultTypes" nillable="true" type="ns1:getSearchResultTypes"/>
    <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns1:getSearchResultTypesResponse"/>
    <xs:element name="getObjectTypes" nillable="true" type="ns2:getObjectTypes"/>
    <xs:element name="getObjectTypesResponse" nillable="true" type="ns2:getObjectTypesResponse"/>
    <xs:element name="getSearchResultType" nillable="true" type="ns1:getSearchResultType"/>
    <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns1:getSearchResultTypeResponse"/>
    <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
    <xs:element name="getSearchCriteriaType" nillable="true" type="ns1:getSearchCriteriaType"/>
    <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns1:getSearchCriteriaTypeResponse"/>
    <xs:element name="getObjectStructure" nillable="true" type="ns2:getObjectStructure"/>
    <xs:element name="getObjectStructureResponse" nillable="true" type="ns2:getObjectStructureResponse"/>
    <xs:element name="getSearchTypes" nillable="true" type="ns1:getSearchTypes"/>
    <xs:element name="getSearchTypesResponse" nillable="true" type="ns1:getSearchTypesResponse"/>
    <xs:element name="getSearchTypesByResult" nillable="true" type="ns1:getSearchTypesByResult"/>
    <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns1:getSearchTypesByResultResponse"/>
    <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns1:getSearchTypesByCriteria"/>
    <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns1:getSearchTypesByCriteriaResponse"/>
    <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns1:getSearchCriteriaTypes"/>
    <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns1:getSearchCriteriaTypesResponse"/>
    <xs:element name="getSearchType" nillable="true" type="ns1:getSearchType"/>
    <xs:element name="getSearchTypeResponse" nillable="true" type="ns1:getSearchTypeResponse"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/organization" xmlns:tns="http://student.kuali.org/wsdl/dictionary" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary">
    <xs:import namespace="http://student.kuali.org/wsdl/organization"/>
    <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
    <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
    <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
    <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
    <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
    <xs:complexType name="getObjectTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fieldDescriptor">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="desc" type="xs:string"/>
            <xs:element name="readOnly" type="xs:boolean"/>
            <xs:element name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
            <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
            <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="objectStructure">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="type">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element name="modifiable" type="xs:boolean"/>
            <xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="state">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="field">
        <xs:sequence>
            <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
            <xs:element name="selector" type="xs:boolean"/>
            <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintDescriptor">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="minValue" type="xs:string"/>
            <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
            <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
            <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="validCharsConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="caseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="whenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="occursConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
    </xs:complexType>
    <xs:complexType name="getObjectStructure">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/exceptions" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions">
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
    <xs:complexType name="MissingParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OperationFailedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VersionMismatchException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search">
    <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
    <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
    <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
    <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
    <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
    <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
    <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
    <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
    <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
    <xs:element name="getSearchType" type="tns:getSearchType"/>
    <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
    <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
    <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
    <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
    <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
    <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
    <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
    <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="resultColumns">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="resultColumnInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchRequest">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchKey" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
            <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
            <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
            <xs:element minOccurs="0" name="startAt" type="xs:int"/>
            <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
            <xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchParam">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchResult">
        <xs:sequence>
            <xs:element minOccurs="0" name="startAt" type="xs:int"/>
            <xs:element minOccurs="0" name="totalResults" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
            <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
            <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResultRow">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResultCell">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element minOccurs="0" name="key" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchResultType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="queryParams">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="queryParamInfo">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="optional" type="xs:boolean" use="required"/>
    </xs:complexType>
    <xs:complexType name="getSearchTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
            <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchRelationship">
        <xs:sequence>
            <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
            <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeAttribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="parentType" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ASC"/>
            <xs:enumeration value="DESC"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllOrgPersonRelationsByOrgResponse">
    <wsdl:part name="parameters" element="tns:getAllOrgPersonRelationsByOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypes">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgPersonRelation">
    <wsdl:part name="parameters" element="tns:updateOrgPersonRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypes">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationType">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isDescendantResponse">
    <wsdl:part name="parameters" element="tns:isDescendantResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePositionRestrictionFromOrgResponse">
    <wsdl:part name="parameters" element="tns:removePositionRestrictionFromOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPositionRestrictionToOrgResponse">
    <wsdl:part name="parameters" element="tns:addPositionRestrictionToOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgOrgRelation">
    <wsdl:part name="parameters" element="tns:removeOrgOrgRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonIdsForOrgByRelationTypeResponse">
    <wsdl:part name="parameters" element="tns:getPersonIdsForOrgByRelationTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganizationResponse">
    <wsdl:part name="parameters" element="tns:getOrganizationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByOrg">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationsByOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgOrgRelationResponse">
    <wsdl:part name="parameters" element="tns:validateOrgOrgRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByPerson">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationsByPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypesResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTypes">
    <wsdl:part name="parameters" element="tns:getOrgTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllOrgPersonRelationsByPersonResponse">
    <wsdl:part name="parameters" element="tns:getAllOrgPersonRelationsByPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgHierarchy">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypesForOrgHierarchy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgOrgRelation">
    <wsdl:part name="parameters" element="tns:validateOrgOrgRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgType">
    <wsdl:part name="parameters" element="tns:getOrgType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part name="parameters" element="tns:getObjectStructureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgTypeResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypesForOrgTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgHierarchyResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypesForOrgHierarchyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypesForOrgType">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationTypesForOrgType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllOrgPersonRelationsByPerson">
    <wsdl:part name="parameters" element="tns:getAllOrgPersonRelationsByPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part name="parameters" element="tns:getObjectStructure">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllDescendantsResponse">
    <wsdl:part name="parameters" element="tns:getAllDescendantsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAncestors">
    <wsdl:part name="parameters" element="tns:getAllAncestors">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonIdsForOrgByRelationType">
    <wsdl:part name="parameters" element="tns:getPersonIdsForOrgByRelationType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesByResultResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrganization">
    <wsdl:part name="parameters" element="tns:updateOrganization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrganizationResponse">
    <wsdl:part name="parameters" element="tns:createOrganizationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part name="parameters" element="tns:getSearchTypesByCriteria">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part name="parameters" element="tns:getSearchTypesByResult">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTypeResponse">
    <wsdl:part name="parameters" element="tns:getOrgTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteOrganizationResponse">
    <wsdl:part name="parameters" element="tns:deleteOrganizationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgOrgRelation">
    <wsdl:part name="parameters" element="tns:createOrgOrgRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgPersonRelationResponse">
    <wsdl:part name="parameters" element="tns:hasOrgPersonRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByPersonResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationsByPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPositionRestriction">
    <wsdl:part name="parameters" element="tns:validateOrgPositionRestriction">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgPersonRelationResponse">
    <wsdl:part name="parameters" element="tns:createOrgPersonRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgOrgRelation">
    <wsdl:part name="parameters" element="tns:hasOrgOrgRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPositionRestrictionResponse">
    <wsdl:part name="parameters" element="tns:validateOrgPositionRestrictionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteOrganization">
    <wsdl:part name="parameters" element="tns:deleteOrganization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypeResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllOrgPersonRelationsByOrg">
    <wsdl:part name="parameters" element="tns:getAllOrgPersonRelationsByOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPositionRestrictionsByOrgResponse">
    <wsdl:part name="parameters" element="tns:getPositionRestrictionsByOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByOrgResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationsByOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypeResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part name="parameters" element="tns:getSearchResultTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPersonRelation">
    <wsdl:part name="parameters" element="tns:validateOrgPersonRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part name="parameters" element="tns:getSearchResultType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByIdList">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationsByIdList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchies">
    <wsdl:part name="parameters" element="tns:getOrgHierarchies">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part name="parameters" element="tns:search">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchResultTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgPersonRelation">
    <wsdl:part name="parameters" element="tns:removeOrgPersonRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllDescendants">
    <wsdl:part name="parameters" element="tns:getAllDescendants">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationType">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part name="parameters" element="tns:searchResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part name="parameters" element="tns:getSearchTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByIdList">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationsByIdList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPersonRelationResponse">
    <wsdl:part name="parameters" element="tns:validateOrgPersonRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrg">
    <wsdl:part name="parameters" element="tns:validateOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelation">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgOrgRelationResponse">
    <wsdl:part name="parameters" element="tns:removeOrgOrgRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByOrg">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationsByOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesByCriteriaResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByIdListResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationsByIdListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgPersonRelationResponse">
    <wsdl:part name="parameters" element="tns:removeOrgPersonRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrganizationResponse">
    <wsdl:part name="parameters" element="tns:updateOrganizationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgType">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationTypesForOrgType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgPersonRelation">
    <wsdl:part name="parameters" element="tns:createOrgPersonRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAncestorsResponse">
    <wsdl:part name="parameters" element="tns:getAllAncestorsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByOrgResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationsByOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganization">
    <wsdl:part name="parameters" element="tns:getOrganization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part name="parameters" element="tns:getObjectTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePositionRestrictionForOrg">
    <wsdl:part name="parameters" element="tns:updatePositionRestrictionForOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTreeResponse">
    <wsdl:part name="parameters" element="tns:getOrgTreeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByRelatedOrgResponse">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationsByRelatedOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByIdListResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationsByIdListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part name="parameters" element="tns:getSearchType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgOrgRelationResponse">
    <wsdl:part name="parameters" element="tns:createOrgOrgRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByRelatedOrg">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelationsByRelatedOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePositionRestrictionFromOrg">
    <wsdl:part name="parameters" element="tns:removePositionRestrictionFromOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypesForOrgTypeResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationTypesForOrgTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchyResponse">
    <wsdl:part name="parameters" element="tns:getOrgHierarchyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTree">
    <wsdl:part name="parameters" element="tns:getOrgTree">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgOrgRelationResponse">
    <wsdl:part name="parameters" element="tns:updateOrgOrgRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part name="parameters" element="tns:getObjectTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchiesResponse">
    <wsdl:part name="parameters" element="tns:getOrgHierarchiesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchy">
    <wsdl:part name="parameters" element="tns:getOrgHierarchy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isDescendant">
    <wsdl:part name="parameters" element="tns:isDescendant">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgPersonRelation">
    <wsdl:part name="parameters" element="tns:hasOrgPersonRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPositionRestrictionsByOrg">
    <wsdl:part name="parameters" element="tns:getPositionRestrictionsByOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgPersonRelationResponse">
    <wsdl:part name="parameters" element="tns:updateOrgPersonRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPositionRestrictionToOrg">
    <wsdl:part name="parameters" element="tns:addPositionRestrictionToOrg">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTypesResponse">
    <wsdl:part name="parameters" element="tns:getOrgTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgResponse">
    <wsdl:part name="parameters" element="tns:validateOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePositionRestrictionForOrgResponse">
    <wsdl:part name="parameters" element="tns:updatePositionRestrictionForOrgResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationResponse">
    <wsdl:part name="parameters" element="tns:getOrgPersonRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrganization">
    <wsdl:part name="parameters" element="tns:createOrganization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganizationsByIdList">
    <wsdl:part name="parameters" element="tns:getOrganizationsByIdList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchResultTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelation">
    <wsdl:part name="parameters" element="tns:getOrgOrgRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgOrgRelationResponse">
    <wsdl:part name="parameters" element="tns:hasOrgOrgRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganizationsByIdListResponse">
    <wsdl:part name="parameters" element="tns:getOrganizationsByIdListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgOrgRelation">
    <wsdl:part name="parameters" element="tns:updateOrgOrgRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="OrganizationService">
    <wsdl:operation name="validateOrg">
      <wsdl:input name="validateOrg" message="tns:validateOrg">
    </wsdl:input>
      <wsdl:output name="validateOrgResponse" message="tns:validateOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonIdsForOrgByRelationType">
      <wsdl:input name="getPersonIdsForOrgByRelationType" message="tns:getPersonIdsForOrgByRelationType">
    </wsdl:input>
      <wsdl:output name="getPersonIdsForOrgByRelationTypeResponse" message="tns:getPersonIdsForOrgByRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgOrgRelation">
      <wsdl:input name="updateOrgOrgRelation" message="tns:updateOrgOrgRelation">
    </wsdl:input>
      <wsdl:output name="updateOrgOrgRelationResponse" message="tns:updateOrgOrgRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganization">
      <wsdl:input name="getOrganization" message="tns:getOrganization">
    </wsdl:input>
      <wsdl:output name="getOrganizationResponse" message="tns:getOrganizationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input name="getSearchResultTypes" message="tns:getSearchResultTypes">
    </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse" message="tns:getSearchResultTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePositionRestrictionFromOrg">
      <wsdl:input name="removePositionRestrictionFromOrg" message="tns:removePositionRestrictionFromOrg">
    </wsdl:input>
      <wsdl:output name="removePositionRestrictionFromOrgResponse" message="tns:removePositionRestrictionFromOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelation">
      <wsdl:input name="getOrgOrgRelation" message="tns:getOrgOrgRelation">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationResponse" message="tns:getOrgOrgRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input name="search" message="tns:search">
    </wsdl:input>
      <wsdl:output name="searchResponse" message="tns:searchResponse">
    </wsdl:output>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input name="getObjectTypes" message="tns:getObjectTypes">
    </wsdl:input>
      <wsdl:output name="getObjectTypesResponse" message="tns:getObjectTypesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPositionRestrictionsByOrg">
      <wsdl:input name="getPositionRestrictionsByOrg" message="tns:getPositionRestrictionsByOrg">
    </wsdl:input>
      <wsdl:output name="getPositionRestrictionsByOrgResponse" message="tns:getPositionRestrictionsByOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypes">
      <wsdl:input name="getOrgPersonRelationTypes" message="tns:getOrgPersonRelationTypes">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypesResponse" message="tns:getOrgPersonRelationTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelation">
      <wsdl:input name="getOrgPersonRelation" message="tns:getOrgPersonRelation">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationResponse" message="tns:getOrgPersonRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgPersonRelation">
      <wsdl:input name="removeOrgPersonRelation" message="tns:removeOrgPersonRelation">
    </wsdl:input>
      <wsdl:output name="removeOrgPersonRelationResponse" message="tns:removeOrgPersonRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgType">
      <wsdl:input name="getOrgType" message="tns:getOrgType">
    </wsdl:input>
      <wsdl:output name="getOrgTypeResponse" message="tns:getOrgTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByPerson">
      <wsdl:input name="getOrgPersonRelationsByPerson" message="tns:getOrgPersonRelationsByPerson">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByPersonResponse" message="tns:getOrgPersonRelationsByPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgPersonRelation">
      <wsdl:input name="updateOrgPersonRelation" message="tns:updateOrgPersonRelation">
    </wsdl:input>
      <wsdl:output name="updateOrgPersonRelationResponse" message="tns:updateOrgPersonRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input name="getSearchResultType" message="tns:getSearchResultType">
    </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse" message="tns:getSearchResultTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTree">
      <wsdl:input name="getOrgTree" message="tns:getOrgTree">
    </wsdl:input>
      <wsdl:output name="getOrgTreeResponse" message="tns:getOrgTreeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgPersonRelation">
      <wsdl:input name="createOrgPersonRelation" message="tns:createOrgPersonRelation">
    </wsdl:input>
      <wsdl:output name="createOrgPersonRelationResponse" message="tns:createOrgPersonRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByOrg">
      <wsdl:input name="getOrgPersonRelationsByOrg" message="tns:getOrgPersonRelationsByOrg">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByOrgResponse" message="tns:getOrgPersonRelationsByOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input name="getSearchCriteriaType" message="tns:getSearchCriteriaType">
    </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse" message="tns:getSearchCriteriaTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteOrganization">
      <wsdl:input name="deleteOrganization" message="tns:deleteOrganization">
    </wsdl:input>
      <wsdl:output name="deleteOrganizationResponse" message="tns:deleteOrganizationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrganization">
      <wsdl:input name="updateOrganization" message="tns:updateOrganization">
    </wsdl:input>
      <wsdl:output name="updateOrganizationResponse" message="tns:updateOrganizationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationType">
      <wsdl:input name="getOrgOrgRelationType" message="tns:getOrgOrgRelationType">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypeResponse" message="tns:getOrgOrgRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input name="getObjectStructure" message="tns:getObjectStructure">
    </wsdl:input>
      <wsdl:output name="getObjectStructureResponse" message="tns:getObjectStructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasOrgPersonRelation">
      <wsdl:input name="hasOrgPersonRelation" message="tns:hasOrgPersonRelation">
    </wsdl:input>
      <wsdl:output name="hasOrgPersonRelationResponse" message="tns:hasOrgPersonRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgOrgRelation">
      <wsdl:input name="removeOrgOrgRelation" message="tns:removeOrgOrgRelation">
    </wsdl:input>
      <wsdl:output name="removeOrgOrgRelationResponse" message="tns:removeOrgOrgRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrganization">
      <wsdl:input name="createOrganization" message="tns:createOrganization">
    </wsdl:input>
      <wsdl:output name="createOrganizationResponse" message="tns:createOrganizationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPositionRestrictionToOrg">
      <wsdl:input name="addPositionRestrictionToOrg" message="tns:addPositionRestrictionToOrg">
    </wsdl:input>
      <wsdl:output name="addPositionRestrictionToOrgResponse" message="tns:addPositionRestrictionToOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input name="getSearchTypes" message="tns:getSearchTypes">
    </wsdl:input>
      <wsdl:output name="getSearchTypesResponse" message="tns:getSearchTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganizationsByIdList">
      <wsdl:input name="getOrganizationsByIdList" message="tns:getOrganizationsByIdList">
    </wsdl:input>
      <wsdl:output name="getOrganizationsByIdListResponse" message="tns:getOrganizationsByIdListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByIdList">
      <wsdl:input name="getOrgPersonRelationsByIdList" message="tns:getOrgPersonRelationsByIdList">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByIdListResponse" message="tns:getOrgPersonRelationsByIdListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePositionRestrictionForOrg">
      <wsdl:input name="updatePositionRestrictionForOrg" message="tns:updatePositionRestrictionForOrg">
    </wsdl:input>
      <wsdl:output name="updatePositionRestrictionForOrgResponse" message="tns:updatePositionRestrictionForOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationType">
      <wsdl:input name="getOrgPersonRelationType" message="tns:getOrgPersonRelationType">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypeResponse" message="tns:getOrgPersonRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypesForOrgType">
      <wsdl:input name="getOrgPersonRelationTypesForOrgType" message="tns:getOrgPersonRelationTypesForOrgType">
    </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypesForOrgTypeResponse" message="tns:getOrgPersonRelationTypesForOrgTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasOrgOrgRelation">
      <wsdl:input name="hasOrgOrgRelation" message="tns:hasOrgOrgRelation">
    </wsdl:input>
      <wsdl:output name="hasOrgOrgRelationResponse" message="tns:hasOrgOrgRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchy">
      <wsdl:input name="getOrgHierarchy" message="tns:getOrgHierarchy">
    </wsdl:input>
      <wsdl:output name="getOrgHierarchyResponse" message="tns:getOrgHierarchyResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchies">
      <wsdl:input name="getOrgHierarchies" message="tns:getOrgHierarchies">
    </wsdl:input>
      <wsdl:output name="getOrgHierarchiesResponse" message="tns:getOrgHierarchiesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByIdList">
      <wsdl:input name="getOrgOrgRelationsByIdList" message="tns:getOrgOrgRelationsByIdList">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByIdListResponse" message="tns:getOrgOrgRelationsByIdListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByRelatedOrg">
      <wsdl:input name="getOrgOrgRelationsByRelatedOrg" message="tns:getOrgOrgRelationsByRelatedOrg">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByRelatedOrgResponse" message="tns:getOrgOrgRelationsByRelatedOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByOrg">
      <wsdl:input name="getAllOrgPersonRelationsByOrg" message="tns:getAllOrgPersonRelationsByOrg">
    </wsdl:input>
      <wsdl:output name="getAllOrgPersonRelationsByOrgResponse" message="tns:getAllOrgPersonRelationsByOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgOrgRelation">
      <wsdl:input name="validateOrgOrgRelation" message="tns:validateOrgOrgRelation">
    </wsdl:input>
      <wsdl:output name="validateOrgOrgRelationResponse" message="tns:validateOrgOrgRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTypes">
      <wsdl:input name="getOrgTypes" message="tns:getOrgTypes">
    </wsdl:input>
      <wsdl:output name="getOrgTypesResponse" message="tns:getOrgTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input name="getSearchTypesByResult" message="tns:getSearchTypesByResult">
    </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse" message="tns:getSearchTypesByResultResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDescendant">
      <wsdl:input name="isDescendant" message="tns:isDescendant">
    </wsdl:input>
      <wsdl:output name="isDescendantResponse" message="tns:isDescendantResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPositionRestriction">
      <wsdl:input name="validateOrgPositionRestriction" message="tns:validateOrgPositionRestriction">
    </wsdl:input>
      <wsdl:output name="validateOrgPositionRestrictionResponse" message="tns:validateOrgPositionRestrictionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input name="getSearchTypesByCriteria" message="tns:getSearchTypesByCriteria">
    </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse" message="tns:getSearchTypesByCriteriaResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgType">
      <wsdl:input name="getOrgOrgRelationTypesForOrgType" message="tns:getOrgOrgRelationTypesForOrgType">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesForOrgTypeResponse" message="tns:getOrgOrgRelationTypesForOrgTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByOrg">
      <wsdl:input name="getOrgOrgRelationsByOrg" message="tns:getOrgOrgRelationsByOrg">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByOrgResponse" message="tns:getOrgOrgRelationsByOrgResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input name="getSearchCriteriaTypes" message="tns:getSearchCriteriaTypes">
    </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse" message="tns:getSearchCriteriaTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgHierarchy">
      <wsdl:input name="getOrgOrgRelationTypesForOrgHierarchy" message="tns:getOrgOrgRelationTypesForOrgHierarchy">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesForOrgHierarchyResponse" message="tns:getOrgOrgRelationTypesForOrgHierarchyResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByPerson">
      <wsdl:input name="getAllOrgPersonRelationsByPerson" message="tns:getAllOrgPersonRelationsByPerson">
    </wsdl:input>
      <wsdl:output name="getAllOrgPersonRelationsByPersonResponse" message="tns:getAllOrgPersonRelationsByPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgOrgRelation">
      <wsdl:input name="createOrgOrgRelation" message="tns:createOrgOrgRelation">
    </wsdl:input>
      <wsdl:output name="createOrgOrgRelationResponse" message="tns:createOrgOrgRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypes">
      <wsdl:input name="getOrgOrgRelationTypes" message="tns:getOrgOrgRelationTypes">
    </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesResponse" message="tns:getOrgOrgRelationTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input name="getSearchType" message="tns:getSearchType">
    </wsdl:input>
      <wsdl:output name="getSearchTypeResponse" message="tns:getSearchTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDescendants">
      <wsdl:input name="getAllDescendants" message="tns:getAllDescendants">
    </wsdl:input>
      <wsdl:output name="getAllDescendantsResponse" message="tns:getAllDescendantsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPersonRelation">
      <wsdl:input name="validateOrgPersonRelation" message="tns:validateOrgPersonRelation">
    </wsdl:input>
      <wsdl:output name="validateOrgPersonRelationResponse" message="tns:validateOrgPersonRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAncestors">
      <wsdl:input name="getAllAncestors" message="tns:getAllAncestors">
    </wsdl:input>
      <wsdl:output name="getAllAncestorsResponse" message="tns:getAllAncestorsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OrganizationServiceServiceSoapBinding" type="tns:OrganizationService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPersonIdsForOrgByRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonIdsForOrgByRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonIdsForOrgByRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePositionRestrictionFromOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removePositionRestrictionFromOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removePositionRestrictionFromOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPositionRestrictionsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPositionRestrictionsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPositionRestrictionsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationsByPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTree">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgTree">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgTreeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="hasOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="hasOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPositionRestrictionToOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addPositionRestrictionToOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPositionRestrictionToOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganizationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrganizationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrganizationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePositionRestrictionForOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updatePositionRestrictionForOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePositionRestrictionForOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypesForOrgType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationTypesForOrgType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypesForOrgTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="hasOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="hasOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgHierarchy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchies">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgHierarchies">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgHierarchiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllOrgPersonRelationsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllOrgPersonRelationsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByRelatedOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationsByRelatedOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByRelatedOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDescendant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isDescendant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isDescendantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPositionRestriction">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrgPositionRestriction">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgPositionRestrictionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationTypesForOrgType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesForOrgTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgHierarchy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationTypesForOrgHierarchy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesForOrgHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllOrgPersonRelationsByPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllOrgPersonRelationsByPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDescendants">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllDescendants">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllDescendantsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAncestors">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllAncestors">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAncestorsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OrganizationService">
    <wsdl:port name="OrganizationServicePort" binding="tns:OrganizationServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/OrganizationServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
