<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 The Kuali Foundation Licensed under the
    Educational Community License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may
    obtain a copy of the License at

    http://www.osedu.org/licenses/ECL-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing
    permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <!--  Preloaded data -->
    <bean id="dataLoadListenerLum" class="org.kuali.student.common.util.jpa.LoadSqlListener">
        <property name="jtaTxManager" ref="JtaTxManager"/>
        <property name="shouldLoadData" value="true"/>
        <property name="preloadMap">
            <map>
                <entry key="Statement">
                    <list>
                        <value>classpath:ks-statement-config.sql</value>
                        <value>classpath:ks-statement-data.sql</value>
                    </list>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="mapExceptionAdvisor"
        class="org.kuali.student.common.util.ExceptionMappingAdvice">
        <property name="defaultException"
            value="org.kuali.student.core.exceptions.OperationFailedException" />
        <property name="exceptionMapping">
            <map>
                <entry key="javax.persistence.EntityExistsException"
                    value="org.kuali.student.core.exceptions.AlreadyExistsException" />
                <entry
                    key="org.hibernate.exception.ConstraintViolationException"
                    value="org.kuali.student.core.exceptions.AlreadyExistsException" />
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:aspect id="dataAccessToBusinessException"
            ref="mapExceptionAdvisor">
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.core.statement.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
        </aop:aspect>
    </aop:config>


    <bean id="courseListContext" class="org.kuali.student.core.statement.config.context.lu.CourseListContextImpl" />
    <bean id="gradeCheckContext" class="org.kuali.student.core.statement.config.context.lu.GradeCheckContextImpl" />

    <!--bean id="contextRegistryLuStatement"
        class="org.kuali.student.core.statement.naturallanguage.ContextRegistry">
        <constructor-arg>
            <map-->
                <!-- Header Contexts-->
                <!--entry key="kuali.luStatementType.prereqAcademicReadiness">
                    <bean class="org.kuali.student.core.statement.config.contexts.HeaderContextImpl" />
                </entry>
            </map>
        </constructor-arg>
    </bean-->

    <bean id="contextRegistryReqComponent"
        class="org.kuali.student.core.statement.naturallanguage.ContextRegistry">
        <constructor-arg>
            <map>
                <!-- Pre-Req Contexts-->
                <entry key="kuali.reqCompType.courseList.none">
                    <list>
	                    <ref local="courseListContext"/>
	                </list>
                </entry>
                <entry key="kuali.reqCompType.courseList.all">
                    <list>
	                    <ref local="courseListContext"/>
                    </list>
                </entry>
                <entry key="kuali.reqCompType.courseList.nof">
                    <list>
	                    <ref local="courseListContext"/>
                    </list>
                </entry>
                <entry key="kuali.reqCompType.courseList.1of1">
                    <list>
	                    <ref local="courseListContext"/>
                    </list>
                </entry>
                <entry key="kuali.reqCompType.courseList.1of2">
                    <list>
	                    <ref local="courseListContext"/>
                    </list>
                </entry>
                <entry key="kuali.reqCompType.gradecheck">
                    <list>
                        <ref local="courseListContext"/>
                        <ref local="gradeCheckContext"/>
                    </list>
                </entry>
                <!-- Co-Req Contexts -->
                <entry key="kuali.reqCompType.courseList.coreq.all">
                    <list>
	                    <ref local="courseListContext"/>
                    </list>
                </entry>
                <entry key="kuali.reqCompType.courseList.coreq.oneof">
                    <list>
	                    <ref local="courseListContext"/>
                    </list>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="booleanOperatorLanguageMap"
    	class="org.springframework.beans.factory.config.MapFactoryBean">
    	<property name="sourceMap">
    		<map>
    			<entry key="en">
    				<bean class="org.kuali.student.common.messagebuilder.impl.BooleanOperators">
    				    <constructor-arg index="0" value="and" />
                        <constructor-arg index="1" value="or" />
    				</bean>
    			</entry>
                <entry key="dk">
                    <bean class="org.kuali.student.common.messagebuilder.impl.BooleanOperators">
                        <constructor-arg index="0" value="og" />
                        <constructor-arg index="1" value="eller" />
                    </bean>
                </entry>
                <entry key="de">
                    <bean class="org.kuali.student.common.messagebuilder.impl.BooleanOperators">
                        <constructor-arg index="0" value="und" />
                        <constructor-arg index="1" value="oder" />
                    </bean>
                </entry>
                <entry key="fr">
                    <bean class="org.kuali.student.common.messagebuilder.impl.BooleanOperators">
                        <constructor-arg index="0" value="et" />
                        <constructor-arg index="1" value="ou" />
                    </bean>
                </entry>
                <entry key="jp">
                    <bean class="org.kuali.student.common.messagebuilder.impl.BooleanOperators">
                        <constructor-arg index="0" value="および" />
                        <constructor-arg index="1" value="または" />
                    </bean>
                </entry>
                <entry key="zh">
                    <bean class="org.kuali.student.common.messagebuilder.impl.BooleanOperators">
                        <constructor-arg index="0" value="和" />
                        <constructor-arg index="1" value="或" />
                    </bean>
                </entry>
    		</map>
    	</property>
    </bean>

    <bean id="naturalLanguageMessageBuilder"
        class="org.kuali.student.core.statement.naturallanguage.translators.NaturalLanguageMessageBuilder">
        <constructor-arg index="0" value="en" />
        <constructor-arg index="1" ref="booleanOperatorLanguageMap" />
    </bean>

    <bean id="reqComponentTranslator"
        class="org.kuali.student.core.statement.naturallanguage.translators.ReqComponentTranslator">
        <property name="contextRegistry" ref="contextRegistryReqComponent" />
        <!--property name="language" value="en" /-->
    </bean>

    <bean id="statementTranslator"
        class="org.kuali.student.core.statement.naturallanguage.translators.StatementTranslator">
        <!--property name="contextRegistry" ref="contextRegistryLuStatement" /-->
        <property name="reqComponentTranslator" ref="reqComponentTranslator" />
        <property name="messageBuilder" ref="naturalLanguageMessageBuilder" />
        <!--property name="language" value="en" /-->
    </bean>

    <bean id="naturalLanguageTranslator"
        class="org.kuali.student.core.statement.naturallanguage.translators.NaturalLanguageTranslatorImpl">
        <property name="reqComponentTranslator" ref="reqComponentTranslator" />
        <property name="statementTranslator" ref="statementTranslator" />
        <property name="language" value="en" />
    </bean>

    <bean id="statementTestDictionary" class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl" autowire-candidate="false">
        <constructor-arg index="0" value="classpath:statement-dictionary-config.xml" />
    </bean>

    <bean id="statementAssembler"
        class="org.kuali.student.core.statement.service.impl.StatementAssembler">
        <property name="statementDao" ref="StatementDaoImpl"/>
    </bean>

    <bean id="ks.messageServiceMock" class="org.kuali.student.core.messages.service.impl.MessageServiceMock">
        <property name="messageFiles">
            <list>
                <value>classpath:org/kuali/student/common/ui/gwt-messages.xml</value>
            </list>
        </property>
    </bean>

    <bean id="serviceValidator" class="org.kuali.student.common.validator.Validator">
        <property name="messageService" ref="ks.messageServiceMock"/>
    </bean>


   <bean id="StatementServiceImpl"
        class="org.kuali.student.core.statement.service.impl.StatementServiceImpl" autowire="no">
        <property name="statementAssembler" ref="statementAssembler"/>
        <property name="statementDao" ref="StatementDaoImpl"/>
        <property name="dictionaryServiceDelegate" ref="statementTestDictionary" />
        <property name="naturalLanguageTranslator" ref="naturalLanguageTranslator" />
        <property name="validator" ref="serviceValidator" />
    </bean>
</beans>