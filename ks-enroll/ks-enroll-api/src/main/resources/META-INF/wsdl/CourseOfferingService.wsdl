<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="CourseOfferingService" targetNamespace="http://student.kuali.org/wsdl/courseOffering" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/courseOffering" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://exceptions.common.r2.student.kuali.org/" xmlns:ns1="http://rice.kuali.org/core/v2_0" xmlns:tns="http://student.kuali.org/wsdl/courseOffering" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/courseOffering">
<xs:import namespace="http://rice.kuali.org/core/v2_0"/>
<xs:element name="addSeatPoolDefinitionToActivityOffering" type="tns:addSeatPoolDefinitionToActivityOffering"/>
<xs:element name="addSeatPoolDefinitionToActivityOfferingResponse" type="tns:addSeatPoolDefinitionToActivityOfferingResponse"/>
<xs:element name="calculateInClassContactHoursForTerm" type="tns:calculateInClassContactHoursForTerm"/>
<xs:element name="calculateInClassContactHoursForTermResponse" type="tns:calculateInClassContactHoursForTermResponse"/>
<xs:element name="calculateOutofClassContactHoursForTerm" type="tns:calculateOutofClassContactHoursForTerm"/>
<xs:element name="calculateOutofClassContactHoursForTermResponse" type="tns:calculateOutofClassContactHoursForTermResponse"/>
<xs:element name="calculateTotalContactHoursForTerm" type="tns:calculateTotalContactHoursForTerm"/>
<xs:element name="calculateTotalContactHoursForTermResponse" type="tns:calculateTotalContactHoursForTermResponse"/>
<xs:element name="copyActivityOffering" type="tns:copyActivityOffering"/>
<xs:element name="copyActivityOfferingResponse" type="tns:copyActivityOfferingResponse"/>
<xs:element name="createActivityOffering" type="tns:createActivityOffering"/>
<xs:element name="createActivityOfferingResponse" type="tns:createActivityOfferingResponse"/>
<xs:element name="createCourseOffering" type="tns:createCourseOffering"/>
<xs:element name="createCourseOfferingResponse" type="tns:createCourseOfferingResponse"/>
<xs:element name="createFormatOffering" type="tns:createFormatOffering"/>
<xs:element name="createFormatOfferingResponse" type="tns:createFormatOfferingResponse"/>
<xs:element name="createRegistrationGroup" type="tns:createRegistrationGroup"/>
<xs:element name="createRegistrationGroupResponse" type="tns:createRegistrationGroupResponse"/>
<xs:element name="createRegistrationGroupTemplate" type="tns:createRegistrationGroupTemplate"/>
<xs:element name="createRegistrationGroupTemplateResponse" type="tns:createRegistrationGroupTemplateResponse"/>
<xs:element name="createSeatPoolDefinition" type="tns:createSeatPoolDefinition"/>
<xs:element name="createSeatPoolDefinitionResponse" type="tns:createSeatPoolDefinitionResponse"/>
<xs:element name="deleteActivityOffering" type="tns:deleteActivityOffering"/>
<xs:element name="deleteActivityOfferingCascaded" type="tns:deleteActivityOfferingCascaded"/>
<xs:element name="deleteActivityOfferingCascadedResponse" type="tns:deleteActivityOfferingCascadedResponse"/>
<xs:element name="deleteActivityOfferingResponse" type="tns:deleteActivityOfferingResponse"/>
<xs:element name="deleteCourseOffering" type="tns:deleteCourseOffering"/>
<xs:element name="deleteCourseOfferingCascaded" type="tns:deleteCourseOfferingCascaded"/>
<xs:element name="deleteCourseOfferingCascadedResponse" type="tns:deleteCourseOfferingCascadedResponse"/>
<xs:element name="deleteCourseOfferingResponse" type="tns:deleteCourseOfferingResponse"/>
<xs:element name="deleteFormatOffering" type="tns:deleteFormatOffering"/>
<xs:element name="deleteFormatOfferingCascaded" type="tns:deleteFormatOfferingCascaded"/>
<xs:element name="deleteFormatOfferingCascadedResponse" type="tns:deleteFormatOfferingCascadedResponse"/>
<xs:element name="deleteFormatOfferingResponse" type="tns:deleteFormatOfferingResponse"/>
<xs:element name="deleteGeneratedRegistrationGroupsByFormatOffering" type="tns:deleteGeneratedRegistrationGroupsByFormatOffering"/>
<xs:element name="deleteGeneratedRegistrationGroupsByFormatOfferingResponse" type="tns:deleteGeneratedRegistrationGroupsByFormatOfferingResponse"/>
<xs:element name="deleteGeneratedRegistrationGroupsForTemplate" type="tns:deleteGeneratedRegistrationGroupsForTemplate"/>
<xs:element name="deleteGeneratedRegistrationGroupsForTemplateResponse" type="tns:deleteGeneratedRegistrationGroupsForTemplateResponse"/>
<xs:element name="deleteRegistrationGroup" type="tns:deleteRegistrationGroup"/>
<xs:element name="deleteRegistrationGroupResponse" type="tns:deleteRegistrationGroupResponse"/>
<xs:element name="deleteRegistrationGroupTemplate" type="tns:deleteRegistrationGroupTemplate"/>
<xs:element name="deleteRegistrationGroupTemplateResponse" type="tns:deleteRegistrationGroupTemplateResponse"/>
<xs:element name="deleteRegistrationGroupsByFormatOffering" type="tns:deleteRegistrationGroupsByFormatOffering"/>
<xs:element name="deleteRegistrationGroupsByFormatOfferingResponse" type="tns:deleteRegistrationGroupsByFormatOfferingResponse"/>
<xs:element name="deleteSeatPoolDefinition" type="tns:deleteSeatPoolDefinition"/>
<xs:element name="deleteSeatPoolDefinitionResponse" type="tns:deleteSeatPoolDefinitionResponse"/>
<xs:element name="generateActivityOfferings" type="tns:generateActivityOfferings"/>
<xs:element name="generateActivityOfferingsResponse" type="tns:generateActivityOfferingsResponse"/>
<xs:element name="generateRegistrationGroupsForTemplate" type="tns:generateRegistrationGroupsForTemplate"/>
<xs:element name="generateRegistrationGroupsForTemplateResponse" type="tns:generateRegistrationGroupsForTemplateResponse"/>
<xs:element name="getActivityOffering" type="tns:getActivityOffering"/>
<xs:element name="getActivityOfferingAdminDisplay" type="tns:getActivityOfferingAdminDisplay"/>
<xs:element name="getActivityOfferingAdminDisplayResponse" type="tns:getActivityOfferingAdminDisplayResponse"/>
<xs:element name="getActivityOfferingAdminDisplaysByIds" type="tns:getActivityOfferingAdminDisplaysByIds"/>
<xs:element name="getActivityOfferingAdminDisplaysByIdsResponse" type="tns:getActivityOfferingAdminDisplaysByIdsResponse"/>
<xs:element name="getActivityOfferingAdminDisplaysForCourseOffering" type="tns:getActivityOfferingAdminDisplaysForCourseOffering"/>
<xs:element name="getActivityOfferingAdminDisplaysForCourseOfferingResponse" type="tns:getActivityOfferingAdminDisplaysForCourseOfferingResponse"/>
<xs:element name="getActivityOfferingResponse" type="tns:getActivityOfferingResponse"/>
<xs:element name="getActivityOfferingType" type="tns:getActivityOfferingType"/>
<xs:element name="getActivityOfferingTypeResponse" type="tns:getActivityOfferingTypeResponse"/>
<xs:element name="getActivityOfferingTypes" type="tns:getActivityOfferingTypes"/>
<xs:element name="getActivityOfferingTypesForActivityType" type="tns:getActivityOfferingTypesForActivityType"/>
<xs:element name="getActivityOfferingTypesForActivityTypeResponse" type="tns:getActivityOfferingTypesForActivityTypeResponse"/>
<xs:element name="getActivityOfferingTypesResponse" type="tns:getActivityOfferingTypesResponse"/>
<xs:element name="getActivityOfferingsByCourseOffering" type="tns:getActivityOfferingsByCourseOffering"/>
<xs:element name="getActivityOfferingsByCourseOfferingResponse" type="tns:getActivityOfferingsByCourseOfferingResponse"/>
<xs:element name="getActivityOfferingsByFormatOffering" type="tns:getActivityOfferingsByFormatOffering"/>
<xs:element name="getActivityOfferingsByFormatOfferingResponse" type="tns:getActivityOfferingsByFormatOfferingResponse"/>
<xs:element name="getActivityOfferingsByFormatOfferingWithoutRegGroup" type="tns:getActivityOfferingsByFormatOfferingWithoutRegGroup"/>
<xs:element name="getActivityOfferingsByFormatOfferingWithoutRegGroupResponse" type="tns:getActivityOfferingsByFormatOfferingWithoutRegGroupResponse"/>
<xs:element name="getActivityOfferingsByIds" type="tns:getActivityOfferingsByIds"/>
<xs:element name="getActivityOfferingsByIdsResponse" type="tns:getActivityOfferingsByIdsResponse"/>
<xs:element name="getCourseOffering" type="tns:getCourseOffering"/>
<xs:element name="getCourseOfferingAdminDisplay" type="tns:getCourseOfferingAdminDisplay"/>
<xs:element name="getCourseOfferingAdminDisplayResponse" type="tns:getCourseOfferingAdminDisplayResponse"/>
<xs:element name="getCourseOfferingAdminDisplaysByIds" type="tns:getCourseOfferingAdminDisplaysByIds"/>
<xs:element name="getCourseOfferingAdminDisplaysByIdsResponse" type="tns:getCourseOfferingAdminDisplaysByIdsResponse"/>
<xs:element name="getCourseOfferingIdsByTerm" type="tns:getCourseOfferingIdsByTerm"/>
<xs:element name="getCourseOfferingIdsByTermAndSubjectArea" type="tns:getCourseOfferingIdsByTermAndSubjectArea"/>
<xs:element name="getCourseOfferingIdsByTermAndSubjectAreaResponse" type="tns:getCourseOfferingIdsByTermAndSubjectAreaResponse"/>
<xs:element name="getCourseOfferingIdsByTermAndUnitsContentOwner" type="tns:getCourseOfferingIdsByTermAndUnitsContentOwner"/>
<xs:element name="getCourseOfferingIdsByTermAndUnitsContentOwnerResponse" type="tns:getCourseOfferingIdsByTermAndUnitsContentOwnerResponse"/>
<xs:element name="getCourseOfferingIdsByTermResponse" type="tns:getCourseOfferingIdsByTermResponse"/>
<xs:element name="getCourseOfferingIdsByType" type="tns:getCourseOfferingIdsByType"/>
<xs:element name="getCourseOfferingIdsByTypeResponse" type="tns:getCourseOfferingIdsByTypeResponse"/>
<xs:element name="getCourseOfferingResponse" type="tns:getCourseOfferingResponse"/>
<xs:element name="getCourseOfferingType" type="tns:getCourseOfferingType"/>
<xs:element name="getCourseOfferingTypeResponse" type="tns:getCourseOfferingTypeResponse"/>
<xs:element name="getCourseOfferingTypes" type="tns:getCourseOfferingTypes"/>
<xs:element name="getCourseOfferingTypesResponse" type="tns:getCourseOfferingTypesResponse"/>
<xs:element name="getCourseOfferingsByCourse" type="tns:getCourseOfferingsByCourse"/>
<xs:element name="getCourseOfferingsByCourseAndTerm" type="tns:getCourseOfferingsByCourseAndTerm"/>
<xs:element name="getCourseOfferingsByCourseAndTermResponse" type="tns:getCourseOfferingsByCourseAndTermResponse"/>
<xs:element name="getCourseOfferingsByCourseResponse" type="tns:getCourseOfferingsByCourseResponse"/>
<xs:element name="getCourseOfferingsByIds" type="tns:getCourseOfferingsByIds"/>
<xs:element name="getCourseOfferingsByIdsResponse" type="tns:getCourseOfferingsByIdsResponse"/>
<xs:element name="getCourseOfferingsByTermAndInstructor" type="tns:getCourseOfferingsByTermAndInstructor"/>
<xs:element name="getCourseOfferingsByTermAndInstructorResponse" type="tns:getCourseOfferingsByTermAndInstructorResponse"/>
<xs:element name="getFormatOffering" type="tns:getFormatOffering"/>
<xs:element name="getFormatOfferingResponse" type="tns:getFormatOfferingResponse"/>
<xs:element name="getFormatOfferingsByCourseOffering" type="tns:getFormatOfferingsByCourseOffering"/>
<xs:element name="getFormatOfferingsByCourseOfferingResponse" type="tns:getFormatOfferingsByCourseOfferingResponse"/>
<xs:element name="getInstructorTypesForActivityOfferingType" type="tns:getInstructorTypesForActivityOfferingType"/>
<xs:element name="getInstructorTypesForActivityOfferingTypeResponse" type="tns:getInstructorTypesForActivityOfferingTypeResponse"/>
<xs:element name="getInstructorTypesForCourseOfferingType" type="tns:getInstructorTypesForCourseOfferingType"/>
<xs:element name="getInstructorTypesForCourseOfferingTypeResponse" type="tns:getInstructorTypesForCourseOfferingTypeResponse"/>
<xs:element name="getRegistrationGroup" type="tns:getRegistrationGroup"/>
<xs:element name="getRegistrationGroupResponse" type="tns:getRegistrationGroupResponse"/>
<xs:element name="getRegistrationGroupTemplate" type="tns:getRegistrationGroupTemplate"/>
<xs:element name="getRegistrationGroupTemplateResponse" type="tns:getRegistrationGroupTemplateResponse"/>
<xs:element name="getRegistrationGroupsByFormatOffering" type="tns:getRegistrationGroupsByFormatOffering"/>
<xs:element name="getRegistrationGroupsByFormatOfferingResponse" type="tns:getRegistrationGroupsByFormatOfferingResponse"/>
<xs:element name="getRegistrationGroupsByIds" type="tns:getRegistrationGroupsByIds"/>
<xs:element name="getRegistrationGroupsByIdsResponse" type="tns:getRegistrationGroupsByIdsResponse"/>
<xs:element name="getRegistrationGroupsForCourseOffering" type="tns:getRegistrationGroupsForCourseOffering"/>
<xs:element name="getRegistrationGroupsForCourseOfferingResponse" type="tns:getRegistrationGroupsForCourseOfferingResponse"/>
<xs:element name="getRegistrationGroupsWithActivityOfferings" type="tns:getRegistrationGroupsWithActivityOfferings"/>
<xs:element name="getRegistrationGroupsWithActivityOfferingsResponse" type="tns:getRegistrationGroupsWithActivityOfferingsResponse"/>
<xs:element name="getSeatPoolDefinition" type="tns:getSeatPoolDefinition"/>
<xs:element name="getSeatPoolDefinitionResponse" type="tns:getSeatPoolDefinitionResponse"/>
<xs:element name="getSeatPoolDefinitionsForActivityOffering" type="tns:getSeatPoolDefinitionsForActivityOffering"/>
<xs:element name="getSeatPoolDefinitionsForActivityOfferingResponse" type="tns:getSeatPoolDefinitionsForActivityOfferingResponse"/>
<xs:element name="getTerm" type="tns:getTerm"/>
<xs:element name="getTermResponse" type="tns:getTermResponse"/>
<xs:element name="getTermTypes" type="tns:getTermTypes"/>
<xs:element name="getTermTypesResponse" type="tns:getTermTypesResponse"/>
<xs:element name="getValidCanonicalCourseToCourseOfferingOptionKeys" type="tns:getValidCanonicalCourseToCourseOfferingOptionKeys"/>
<xs:element name="getValidCanonicalCourseToCourseOfferingOptionKeysResponse" type="tns:getValidCanonicalCourseToCourseOfferingOptionKeysResponse"/>
<xs:element name="getValidRolloverOptionKeys" type="tns:getValidRolloverOptionKeys"/>
<xs:element name="getValidRolloverOptionKeysResponse" type="tns:getValidRolloverOptionKeysResponse"/>
<xs:element name="removeSeatPoolDefinitionFromActivityOffering" type="tns:removeSeatPoolDefinitionFromActivityOffering"/>
<xs:element name="removeSeatPoolDefinitionFromActivityOfferingResponse" type="tns:removeSeatPoolDefinitionFromActivityOfferingResponse"/>
<xs:element name="rolloverCourseOffering" type="tns:rolloverCourseOffering"/>
<xs:element name="rolloverCourseOfferingResponse" type="tns:rolloverCourseOfferingResponse"/>
<xs:element name="searchForActivityOfferingIds" type="tns:searchForActivityOfferingIds"/>
<xs:element name="searchForActivityOfferingIdsResponse" type="tns:searchForActivityOfferingIdsResponse"/>
<xs:element name="searchForActivityOfferings" type="tns:searchForActivityOfferings"/>
<xs:element name="searchForActivityOfferingsResponse" type="tns:searchForActivityOfferingsResponse"/>
<xs:element name="searchForCourseOfferingIds" type="tns:searchForCourseOfferingIds"/>
<xs:element name="searchForCourseOfferingIdsResponse" type="tns:searchForCourseOfferingIdsResponse"/>
<xs:element name="searchForCourseOfferings" type="tns:searchForCourseOfferings"/>
<xs:element name="searchForCourseOfferingsResponse" type="tns:searchForCourseOfferingsResponse"/>
<xs:element name="searchForRegistrationGroupIds" type="tns:searchForRegistrationGroupIds"/>
<xs:element name="searchForRegistrationGroupIdsResponse" type="tns:searchForRegistrationGroupIdsResponse"/>
<xs:element name="searchForRegistrationGroups" type="tns:searchForRegistrationGroups"/>
<xs:element name="searchForRegistrationGroupsResponse" type="tns:searchForRegistrationGroupsResponse"/>
<xs:element name="searchForSeatpoolDefinitionIds" type="tns:searchForSeatpoolDefinitionIds"/>
<xs:element name="searchForSeatpoolDefinitionIdsResponse" type="tns:searchForSeatpoolDefinitionIdsResponse"/>
<xs:element name="searchForSeatpoolDefinitions" type="tns:searchForSeatpoolDefinitions"/>
<xs:element name="searchForSeatpoolDefinitionsResponse" type="tns:searchForSeatpoolDefinitionsResponse"/>
<xs:element name="updateActivityOffering" type="tns:updateActivityOffering"/>
<xs:element name="updateActivityOfferingResponse" type="tns:updateActivityOfferingResponse"/>
<xs:element name="updateCourseOffering" type="tns:updateCourseOffering"/>
<xs:element name="updateCourseOfferingFromCanonical" type="tns:updateCourseOfferingFromCanonical"/>
<xs:element name="updateCourseOfferingFromCanonicalResponse" type="tns:updateCourseOfferingFromCanonicalResponse"/>
<xs:element name="updateCourseOfferingResponse" type="tns:updateCourseOfferingResponse"/>
<xs:element name="updateFormatOffering" type="tns:updateFormatOffering"/>
<xs:element name="updateFormatOfferingResponse" type="tns:updateFormatOfferingResponse"/>
<xs:element name="updateRegistrationGroup" type="tns:updateRegistrationGroup"/>
<xs:element name="updateRegistrationGroupResponse" type="tns:updateRegistrationGroupResponse"/>
<xs:element name="updateRegistrationGroupTemplate" type="tns:updateRegistrationGroupTemplate"/>
<xs:element name="updateRegistrationGroupTemplateResponse" type="tns:updateRegistrationGroupTemplateResponse"/>
<xs:element name="updateSeatPoolDefinition" type="tns:updateSeatPoolDefinition"/>
<xs:element name="updateSeatPoolDefinitionResponse" type="tns:updateSeatPoolDefinitionResponse"/>
<xs:element name="validateActivityOffering" type="tns:validateActivityOffering"/>
<xs:element name="validateActivityOfferingResponse" type="tns:validateActivityOfferingResponse"/>
<xs:element name="validateCourseOffering" type="tns:validateCourseOffering"/>
<xs:element name="validateCourseOfferingFromCanonical" type="tns:validateCourseOfferingFromCanonical"/>
<xs:element name="validateCourseOfferingFromCanonicalResponse" type="tns:validateCourseOfferingFromCanonicalResponse"/>
<xs:element name="validateCourseOfferingResponse" type="tns:validateCourseOfferingResponse"/>
<xs:element name="validateFormatOffering" type="tns:validateFormatOffering"/>
<xs:element name="validateFormatOfferingResponse" type="tns:validateFormatOfferingResponse"/>
<xs:element name="validateRegistrationGroup" type="tns:validateRegistrationGroup"/>
<xs:element name="validateRegistrationGroupResponse" type="tns:validateRegistrationGroupResponse"/>
<xs:element name="validateRegistrationGroupTemplate" type="tns:validateRegistrationGroupTemplate"/>
<xs:element name="validateRegistrationGroupTemplateResponse" type="tns:validateRegistrationGroupTemplateResponse"/>
<xs:element name="validateSeatPoolDefinition" type="tns:validateSeatPoolDefinition"/>
<xs:element name="validateSeatPoolDefinitionResponse" type="tns:validateSeatPoolDefinitionResponse"/>
<xs:complexType name="updateActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingInfo" type="tns:ActivityOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ActivityOfferingInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingName" type="xs:string"/>
<xs:element minOccurs="0" name="activityId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="termCode" type="xs:string"/>
<xs:element minOccurs="0" name="activityCode" type="xs:string"/>
<xs:element minOccurs="0" name="scheduleId" type="xs:string"/>
<xs:element minOccurs="0" name="isHonorsOffering" type="xs:boolean"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="gradingOptionKeys" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="instructors" type="tns:OfferingInstructorInfo"/>
<xs:element minOccurs="0" name="weeklyInclassContactHours" type="xs:string"/>
<xs:element minOccurs="0" name="weeklyOutofclassContactHours" type="xs:string"/>
<xs:element minOccurs="0" name="weeklyTotalContactHours" type="xs:string"/>
<xs:element minOccurs="0" name="isEvaluated" type="xs:boolean"/>
<xs:element minOccurs="0" name="maximumEnrollment" type="xs:int"/>
<xs:element minOccurs="0" name="minimumEnrollment" type="xs:int"/>
<xs:element minOccurs="0" name="isMaxEnrollmentEstimate" type="xs:boolean"/>
<xs:element minOccurs="0" name="finalExamStartTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="finalExamEndTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="finalExamSpaceCode" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingURL" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingTitle" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingCode" type="xs:string"/>
<xs:element minOccurs="0" name="hasWaitlist" type="xs:boolean"/>
<xs:element minOccurs="0" name="waitlistTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="waitlistMaximum" type="xs:int"/>
<xs:element minOccurs="0" name="isWaitlistCheckinRequired" type="xs:boolean"/>
<xs:element minOccurs="0" name="waitlistCheckinFrequency" type="tns:TimeAmountInfo"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="RichTextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="plain" type="xs:string"/>
<xs:element minOccurs="0" name="formatted" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="OfferingInstructorInfo">
<xs:sequence>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="percentageEffort" type="xs:float"/>
<xs:element minOccurs="0" name="personName" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="MetaInfo">
<xs:sequence>
<xs:element minOccurs="0" name="versionInd" type="xs:string"/>
<xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createId" type="xs:string"/>
<xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="updateId" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType final="extension restriction" name="AttributeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="key" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="TimeAmountInfo">
<xs:sequence>
<xs:element minOccurs="0" name="atpDurationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="timeQuantity" type="xs:int"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ContextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="authenticatedPrincipalId" type="xs:string"/>
<xs:element minOccurs="0" name="principalId" type="xs:string"/>
<xs:element minOccurs="0" name="currentDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="locale" type="tns:LocaleInfo"/>
<xs:element minOccurs="0" name="timeZone" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LocaleInfo">
<xs:sequence>
<xs:element minOccurs="0" name="localeLanguage" type="xs:string"/>
<xs:element minOccurs="0" name="localeVariant" type="xs:string"/>
<xs:element minOccurs="0" name="localeRegion" type="xs:string"/>
<xs:element minOccurs="0" name="localeScript" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="validationType" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingInfo" type="tns:CourseOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CourseOfferingInfo">
<xs:sequence>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="courseId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingCode" type="xs:string"/>
<xs:element minOccurs="0" name="courseNumberSuffix" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingTitle" type="xs:string"/>
<xs:element minOccurs="0" name="isHonorsOffering" type="xs:boolean"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="instructors" type="tns:OfferingInstructorInfo"/>
<xs:element minOccurs="0" name="subjectArea" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="unitsDeploymentOrgIds" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="unitsContentOwnerOrgIds" type="xs:string"/>
<xs:element minOccurs="0" name="maximumEnrollment" type="xs:int"/>
<xs:element minOccurs="0" name="minimumEnrollment" type="xs:int"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="jointOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="gradingOptionId" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="registrationGradingOptionIds" type="xs:string"/>
<xs:element minOccurs="0" name="creditOptionDisplay" type="xs:string"/>
<xs:element minOccurs="0" name="creditOptionId" type="xs:string"/>
<xs:element minOccurs="0" name="waitlistLevelTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="waitlistMaximum" type="xs:int"/>
<xs:element minOccurs="0" name="hasWaitlist" type="xs:boolean"/>
<xs:element minOccurs="0" name="waitlistTypeKey" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="campusLocations" type="xs:string"/>
<xs:element minOccurs="0" name="isEvaluated" type="xs:boolean"/>
<xs:element minOccurs="0" name="fundingSource" type="xs:string"/>
<xs:element minOccurs="0" name="isFeeAtActivityOffering" type="xs:boolean"/>
<xs:element minOccurs="0" name="isFinancialAidEligible" type="xs:boolean"/>
<xs:element minOccurs="0" name="courseOfferingURL" type="xs:string"/>
<xs:element minOccurs="0" name="finalExamType" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="validateCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ValidationResultInfo">
<xs:sequence>
<xs:element minOccurs="0" name="element" type="xs:string"/>
<xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupTemplateId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupTemplateResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationGroupTemplateInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationGroupTemplateInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingTemplates" type="tns:ActivityOfferingTemplateInfo"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="ActivityOfferingTemplateInfo">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingIds" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="StatusInfo">
<xs:sequence>
<xs:element minOccurs="0" name="isSuccess" type="xs:boolean"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationGroupTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupTemplateId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationGroupTemplateResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getTermTypes">
<xs:sequence>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getTermTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="TypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="refObjectUri" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getValidRolloverOptionKeys">
<xs:sequence>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getValidRolloverOptionKeysResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addSeatPoolDefinitionToActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="seatPoolDefinitionId" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addSeatPoolDefinitionToActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateOutofClassContactHoursForTerm">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateOutofClassContactHoursForTermResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:float"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForSeatpoolDefinitions">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForSeatpoolDefinitionsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SeatPoolDefinitionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="SeatPoolDefinitionInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="expirationMilestoneTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="isPercentage" type="xs:boolean"/>
<xs:element minOccurs="0" name="seatLimit" type="xs:int"/>
<xs:element minOccurs="0" name="processingPriority" type="xs:int"/>
<xs:element minOccurs="0" name="populationId" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByTermAndInstructor">
<xs:sequence>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="instructorId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByTermAndInstructorResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationGroupIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationGroupIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateInClassContactHoursForTerm">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateInClassContactHoursForTermResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:float"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroup">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationGroupInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationCode" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="isHonorsOffering" type="xs:boolean"/>
<xs:element minOccurs="0" name="maximumEnrollment" type="xs:int"/>
<xs:element minOccurs="0" name="isGenerated" type="xs:boolean"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="deleteCourseOfferingCascaded">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteCourseOfferingCascadedResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createSeatPoolDefinition">
<xs:sequence>
<xs:element minOccurs="0" name="seatPoolDefinitionInfo" type="tns:SeatPoolDefinitionInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createSeatPoolDefinitionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:SeatPoolDefinitionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="rolloverCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="sourceCourseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="targetTermId" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="rolloverCourseOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="activityId" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingInfo" type="tns:ActivityOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseOfferingIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseOfferingIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTerm">
<xs:sequence>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="useIncludedTerm" type="xs:boolean"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTermResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingInfo" type="tns:FormatOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="FormatOfferingInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="formatId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="shortName" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingTypeKeys" type="xs:string"/>
<xs:element minOccurs="0" name="gradeRosterLevelTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="finalExamLevelTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="updateFormatOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:FormatOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityOfferingIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityOfferingIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRegistrationGroupTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupTemplateId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupTemplateInfo" type="tns:RegistrationGroupTemplateInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRegistrationGroupTemplateResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationGroupTemplateInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingInfo" type="tns:CourseOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateCourseOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateRegistrationGroup">
<xs:sequence>
<xs:element minOccurs="0" name="validationType" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupInfo" type="tns:RegistrationGroupInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateRegistrationGroupResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingInfo" type="tns:CourseOfferingInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createCourseOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRegistrationGroup">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupInfo" type="tns:RegistrationGroupInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRegistrationGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSeatPoolDefinition">
<xs:sequence>
<xs:element minOccurs="0" name="seatPoolDefinitionId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSeatPoolDefinitionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:SeatPoolDefinitionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingTypes">
<xs:sequence>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteFormatOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseOfferings">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForCourseOfferingsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByFormatOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getValidCanonicalCourseToCourseOfferingOptionKeys">
<xs:sequence>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getValidCanonicalCourseToCourseOfferingOptionKeysResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationGroupsByFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationGroupsByFormatOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingTypes">
<xs:sequence>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByCourse">
<xs:sequence>
<xs:element minOccurs="0" name="courseId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByCourseResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateSeatPoolDefinition">
<xs:sequence>
<xs:element minOccurs="0" name="validationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="seatPoolDefinitionInfo" type="tns:SeatPoolDefinitionInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateSeatPoolDefinitionResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteActivityOfferingCascaded">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteActivityOfferingCascadedResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationGroupTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupTemplateInfo" type="tns:RegistrationGroupTemplateInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationGroupTemplateResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationGroupTemplateInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateTotalContactHoursForTerm">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="calculateTotalContactHoursForTermResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:float"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingType">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingTypeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="validationType" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingInfo" type="tns:ActivityOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateActivityOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateCourseOfferingFromCanonical">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingInfo" type="tns:CourseOfferingInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateCourseOfferingFromCanonicalResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="validationType" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingInfo" type="tns:FormatOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateFormatOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="generateActivityOfferings">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingType" type="xs:string"/>
<xs:element minOccurs="0" name="quantity" type="xs:int"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="generateActivityOfferingsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingAdminDisplaysByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="courseOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingAdminDisplaysByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseOfferingAdminDisplayInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CourseOfferingAdminDisplayInfo">
<xs:sequence>
<xs:element minOccurs="0" name="courseId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingCode" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingTitle" type="xs:string"/>
<xs:element minOccurs="0" name="subjectArea" type="xs:string"/>
<xs:element minOccurs="0" name="termName" type="xs:string"/>
<xs:element minOccurs="0" name="termCode" type="xs:string"/>
<xs:element minOccurs="0" name="displayGrading" type="xs:string"/>
<xs:element minOccurs="0" name="displayCredit" type="xs:string"/>
<xs:element minOccurs="0" name="typeName" type="xs:string"/>
<xs:element minOccurs="0" name="stateName" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activtyOfferingTypes" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="deleteCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteCourseOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateRegistrationGroupTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="validationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupTemplateInfo" type="tns:RegistrationGroupTemplateInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateRegistrationGroupTemplateResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteGeneratedRegistrationGroupsForTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupTemplateId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteGeneratedRegistrationGroupsForTemplateResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteSeatPoolDefinition">
<xs:sequence>
<xs:element minOccurs="0" name="seatPoolDefinitionId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteSeatPoolDefinitionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getInstructorTypesForActivityOfferingType">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getInstructorTypesForActivityOfferingTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationGroup">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteRegistrationGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingType">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingTypeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingTypesForActivityType">
<xs:sequence>
<xs:element minOccurs="0" name="activityTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingTypesForActivityTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="generateRegistrationGroupsForTemplate">
<xs:sequence>
<xs:element minOccurs="0" name="registrationGroupTemplateId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="generateRegistrationGroupsForTemplateResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSeatPoolDefinitionsForActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSeatPoolDefinitionsForActivityOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:SeatPoolDefinitionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTermAndSubjectArea">
<xs:sequence>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="subjectArea" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTermAndSubjectAreaResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingAdminDisplaysForCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingAdminDisplaysForCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingAdminDisplayInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ActivityOfferingAdminDisplayInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="typeName" type="xs:string"/>
<xs:element minOccurs="0" name="stateName" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingTitle" type="xs:string"/>
<xs:element minOccurs="0" name="courseOfferingCode" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingName" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingCode" type="xs:string"/>
<xs:element minOccurs="0" name="instructorId" type="xs:string"/>
<xs:element minOccurs="0" name="instructorName" type="xs:string"/>
<xs:element minOccurs="0" name="scheduleWeekdays" type="xs:string"/>
<xs:element minOccurs="0" name="scheduleTime" type="xs:string"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="searchForActivityOfferings">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForActivityOfferingsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateCourseOfferingFromCanonical">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="optionKeys" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateCourseOfferingFromCanonicalResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsWithActivityOfferings">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsWithActivityOfferingsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForSeatpoolDefinitionIds">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForSeatpoolDefinitionIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getFormatOfferingsByCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getFormatOfferingsByCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:FormatOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="formatId" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingType" type="xs:string"/>
<xs:element minOccurs="0" name="formatOfferingInfo" type="tns:FormatOfferingInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createFormatOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:FormatOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="copyActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="copyActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingAdminDisplay">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingAdminDisplayResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:CourseOfferingAdminDisplayInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteGeneratedRegistrationGroupsByFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteGeneratedRegistrationGroupsByFormatOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getTerm">
<xs:sequence>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getTermResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:TermInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="TermInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="code" type="xs:string"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="createRegistrationGroup">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupType" type="xs:string"/>
<xs:element minOccurs="0" name="registrationGroupInfo" type="tns:RegistrationGroupInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createRegistrationGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsForCourseOffering">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsForCourseOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsByFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsByFormatOfferingResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByType">
<xs:sequence>
<xs:element minOccurs="0" name="typeKey" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationGroups">
<xs:sequence>
<xs:element minOccurs="0" name="criteria" type="ns1:QueryByCriteriaType"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchForRegistrationGroupsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getFormatOffering">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getFormatOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:FormatOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="courseOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingAdminDisplaysByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="activityOfferingIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingAdminDisplaysByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingAdminDisplayInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTermAndUnitsContentOwner">
<xs:sequence>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="unitsContentOwnerId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingIdsByTermAndUnitsContentOwnerResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeSeatPoolDefinitionFromActivityOffering">
<xs:sequence>
<xs:element minOccurs="0" name="seatPoolDefinitionId" type="xs:string"/>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeSeatPoolDefinitionFromActivityOfferingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="registrationGroupIds" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRegistrationGroupsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:RegistrationGroupInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingAdminDisplay">
<xs:sequence>
<xs:element minOccurs="0" name="activityOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingAdminDisplayResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ActivityOfferingAdminDisplayInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByCourseAndTerm">
<xs:sequence>
<xs:element minOccurs="0" name="courseId" type="xs:string"/>
<xs:element minOccurs="0" name="termId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCourseOfferingsByCourseAndTermResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:CourseOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByFormatOfferingWithoutRegGroup">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActivityOfferingsByFormatOfferingWithoutRegGroupResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ActivityOfferingInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getInstructorTypesForCourseOfferingType">
<xs:sequence>
<xs:element minOccurs="0" name="courseOfferingTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getInstructorTypesForCourseOfferingTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:TypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteFormatOfferingCascaded">
<xs:sequence>
<xs:element minOccurs="0" name="formatOfferingId" type="xs:string"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteFormatOfferingCascadedResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateSeatPoolDefinition">
<xs:sequence>
<xs:element minOccurs="0" name="seatPoolDefinitionId" type="xs:string"/>
<xs:element minOccurs="0" name="seatPoolDefinitionInfo" type="tns:SeatPoolDefinitionInfo"/>
<xs:element minOccurs="0" name="context" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateSeatPoolDefinitionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:SeatPoolDefinitionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="errorLevel">
<xs:restriction base="xs:string">
<xs:enumeration value="OK"/>
<xs:enumeration value="WARN"/>
<xs:enumeration value="ERROR"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
<xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
<xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
<xs:element name="ReadOnlyException" nillable="true" type="ns0:ReadOnlyException"/>
<xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
<xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
<xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
<xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
<xs:element name="DependentObjectsExistException" nillable="true" type="ns0:DependentObjectsExistException"/>
<xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://rice.kuali.org/core/v2_0" elementFormDefault="qualified" targetNamespace="http://rice.kuali.org/core/v2_0" version="1.0">
<xs:element name="and" type="tns:AndType"/>
<xs:element name="dateTimeValue" type="tns:CriteriaDateTimeValueType"/>
<xs:element name="decimalValue" type="tns:CriteriaDecimalValueType"/>
<xs:element name="equal" type="tns:EqualType"/>
<xs:element name="greaterThan" type="tns:GreaterThanType"/>
<xs:element name="greaterThanOrEqual" type="tns:GreaterThanOrEqualType"/>
<xs:element name="in" type="tns:InType"/>
<xs:element name="integerValue" type="tns:CriteriaIntegerValueType"/>
<xs:element name="lessThan" type="tns:LessThanType"/>
<xs:element name="lessThanOrEqual" type="tns:LessThanOrEqualType"/>
<xs:element name="like" type="tns:LikeType"/>
<xs:element name="notEqual" type="tns:NotEqualType"/>
<xs:element name="notIn" type="tns:NotInType"/>
<xs:element name="notLike" type="tns:NotLikeType"/>
<xs:element name="notNull" type="tns:NotNullType"/>
<xs:element name="null" type="tns:NullType"/>
<xs:element name="or" type="tns:OrType"/>
<xs:element name="queryByCriteria" type="tns:QueryByCriteriaType"/>
<xs:element name="stringValue" type="tns:CriteriaStringValueType"/>
<xs:complexType final="extension restriction" name="QueryByCriteriaType">
<xs:sequence>
<xs:choice minOccurs="0">
<xs:element ref="tns:and"/>
<xs:element ref="tns:equal"/>
<xs:element ref="tns:greaterThan"/>
<xs:element ref="tns:greaterThanOrEqual"/>
<xs:element ref="tns:in"/>
<xs:element ref="tns:lessThan"/>
<xs:element ref="tns:lessThanOrEqual"/>
<xs:element ref="tns:like"/>
<xs:element ref="tns:notEqual"/>
<xs:element ref="tns:notIn"/>
<xs:element ref="tns:notLike"/>
<xs:element ref="tns:notNull"/>
<xs:element ref="tns:null"/>
<xs:element ref="tns:or"/>
</xs:choice>
<xs:element minOccurs="0" name="startAtIndex" type="xs:int"/>
<xs:element minOccurs="0" name="maxResults" type="xs:int"/>
<xs:element name="countFlag" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType final="extension restriction" name="AndType">
<xs:complexContent>
<xs:extension base="tns:CompositePredicateType">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType abstract="true" name="CompositePredicateType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice maxOccurs="unbounded">
<xs:element ref="tns:and"/>
<xs:element ref="tns:equal"/>
<xs:element ref="tns:greaterThan"/>
<xs:element ref="tns:greaterThanOrEqual"/>
<xs:element ref="tns:in"/>
<xs:element ref="tns:lessThan"/>
<xs:element ref="tns:lessThanOrEqual"/>
<xs:element ref="tns:like"/>
<xs:element ref="tns:notEqual"/>
<xs:element ref="tns:notIn"/>
<xs:element ref="tns:notLike"/>
<xs:element ref="tns:notNull"/>
<xs:element ref="tns:null"/>
<xs:element ref="tns:or"/>
</xs:choice>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType abstract="true" name="abstractPredicate">
<xs:sequence/>
</xs:complexType>
<xs:complexType final="extension restriction" name="EqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:simpleType name="CriteriaStringValueType">
<xs:restriction base="xs:string"/>
</xs:simpleType>
<xs:simpleType name="CriteriaDateTimeValueType">
<xs:restriction base="xs:dateTime"/>
</xs:simpleType>
<xs:simpleType name="CriteriaDecimalValueType">
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
<xs:simpleType name="CriteriaIntegerValueType">
<xs:restriction base="xs:integer"/>
</xs:simpleType>
<xs:complexType final="extension restriction" name="GreaterThanType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="GreaterThanOrEqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="InType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice maxOccurs="unbounded">
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:decimalValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="LessThanType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="LessThanOrEqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:dateTimeValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="LikeType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:element ref="tns:stringValue"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotEqualType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice>
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:decimalValue"/>
<xs:element ref="tns:integerValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotInType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:choice maxOccurs="unbounded">
<xs:element ref="tns:stringValue"/>
<xs:element ref="tns:dateTimeValue"/>
<xs:element ref="tns:integerValue"/>
<xs:element ref="tns:decimalValue"/>
</xs:choice>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotLikeType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:element ref="tns:stringValue"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NotNullType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="NullType">
<xs:complexContent>
<xs:extension base="tns:abstractPredicate">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="propertyPath" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType final="extension restriction" name="OrType">
<xs:complexContent>
<xs:extension base="tns:CompositePredicateType">
<xs:sequence>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://exceptions.common.r2.student.kuali.org/" targetNamespace="http://exceptions.common.r2.student.kuali.org/" version="1.0">
<xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
<xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
<xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
<xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
<xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
<xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
<xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
<xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
<xs:element name="ReadOnlyException" type="tns:ReadOnlyException"/>
<xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
<xs:complexType name="PermissionDeniedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="VersionMismatchException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="OperationFailedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ReadOnlyException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="MissingParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="InvalidParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DataValidationErrorException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" nillable="true" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DoesNotExistException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DependentObjectsExistException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AlreadyExistsException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getRegistrationGroupsWithActivityOfferingsResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsWithActivityOfferingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsByFormatOffering">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsByFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityOfferingsResponse">
    <wsdl:part name="parameters" element="tns:searchForActivityOfferingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationGroupTemplate">
    <wsdl:part name="parameters" element="tns:deleteRegistrationGroupTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateActivityOffering">
    <wsdl:part name="parameters" element="tns:validateActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateOutofClassContactHoursForTermResponse">
    <wsdl:part name="parameters" element="tns:calculateOutofClassContactHoursForTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRegistrationGroup">
    <wsdl:part name="parameters" element="tns:updateRegistrationGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationGroups">
    <wsdl:part name="parameters" element="tns:searchForRegistrationGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTermResponse">
    <wsdl:part name="parameters" element="tns:getTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingAdminDisplaysByIds">
    <wsdl:part name="parameters" element="tns:getCourseOfferingAdminDisplaysByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingType">
    <wsdl:part name="parameters" element="tns:getActivityOfferingType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRegistrationGroupTemplate">
    <wsdl:part name="parameters" element="tns:validateRegistrationGroupTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRegistrationGroupTemplate">
    <wsdl:part name="parameters" element="tns:updateRegistrationGroupTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFormatOfferingsByCourseOffering">
    <wsdl:part name="parameters" element="tns:getFormatOfferingsByCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:updateActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTermTypesResponse">
    <wsdl:part name="parameters" element="tns:getTermTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteActivityOfferingCascadedResponse">
    <wsdl:part name="parameters" element="tns:deleteActivityOfferingCascadedResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteActivityOffering">
    <wsdl:part name="parameters" element="tns:deleteActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReadOnlyException">
    <wsdl:part name="ReadOnlyException" element="tns:ReadOnlyException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRegistrationGroup">
    <wsdl:part name="parameters" element="tns:validateRegistrationGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCourseOfferingFromCanonicalResponse">
    <wsdl:part name="parameters" element="tns:validateCourseOfferingFromCanonicalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTermTypes">
    <wsdl:part name="parameters" element="tns:getTermTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationGroup">
    <wsdl:part name="parameters" element="tns:createRegistrationGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseOfferingIds">
    <wsdl:part name="parameters" element="tns:searchForCourseOfferingIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRegistrationGroupTemplateResponse">
    <wsdl:part name="parameters" element="tns:validateRegistrationGroupTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSeatPoolDefinition">
    <wsdl:part name="parameters" element="tns:getSeatPoolDefinition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingTypesResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part name="DependentObjectsExistException" element="tns:DependentObjectsExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationGroupTemplate">
    <wsdl:part name="parameters" element="tns:createRegistrationGroupTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTermAndUnitsContentOwner">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTermAndUnitsContentOwner">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSeatPoolDefinitionsForActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:getSeatPoolDefinitionsForActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFormatOffering">
    <wsdl:part name="parameters" element="tns:createFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCourseOffering">
    <wsdl:part name="parameters" element="tns:validateCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCourseOfferingCascadedResponse">
    <wsdl:part name="parameters" element="tns:deleteCourseOfferingCascadedResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationGroupsByFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:deleteRegistrationGroupsByFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForSeatpoolDefinitionIds">
    <wsdl:part name="parameters" element="tns:searchForSeatpoolDefinitionIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructorTypesForCourseOfferingTypeResponse">
    <wsdl:part name="parameters" element="tns:getInstructorTypesForCourseOfferingTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTermResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationGroupResponse">
    <wsdl:part name="parameters" element="tns:deleteRegistrationGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationGroupsResponse">
    <wsdl:part name="parameters" element="tns:searchForRegistrationGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:updateCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingAdminDisplaysByIdsResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingAdminDisplaysByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateInClassContactHoursForTermResponse">
    <wsdl:part name="parameters" element="tns:calculateInClassContactHoursForTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCourseOfferingFromCanonical">
    <wsdl:part name="parameters" element="tns:updateCourseOfferingFromCanonical">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:validateActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="rolloverCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:rolloverCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupTemplateResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructorTypesForCourseOfferingType">
    <wsdl:part name="parameters" element="tns:getInstructorTypesForCourseOfferingType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTermAndSubjectAreaResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTermAndSubjectAreaResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateActivityOfferingsResponse">
    <wsdl:part name="parameters" element="tns:generateActivityOfferingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRegistrationGroupsForTemplate">
    <wsdl:part name="parameters" element="tns:generateRegistrationGroupsForTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByIds">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTermAndSubjectArea">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTermAndSubjectArea">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByFormatOffering">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructorTypesForActivityOfferingTypeResponse">
    <wsdl:part name="parameters" element="tns:getInstructorTypesForActivityOfferingTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCourseOfferingFromCanonical">
    <wsdl:part name="parameters" element="tns:validateCourseOfferingFromCanonical">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addSeatPoolDefinitionToActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:addSeatPoolDefinitionToActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCourseOffering">
    <wsdl:part name="parameters" element="tns:deleteCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRegistrationGroupTemplateResponse">
    <wsdl:part name="parameters" element="tns:updateRegistrationGroupTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCourseOffering">
    <wsdl:part name="parameters" element="tns:updateCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addSeatPoolDefinitionToActivityOffering">
    <wsdl:part name="parameters" element="tns:addSeatPoolDefinitionToActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseOfferings">
    <wsdl:part name="parameters" element="tns:searchForCourseOfferings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationGroupTemplateResponse">
    <wsdl:part name="parameters" element="tns:createRegistrationGroupTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateActivityOffering">
    <wsdl:part name="parameters" element="tns:updateActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByFormatOfferingWithoutRegGroup">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByFormatOfferingWithoutRegGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationGroupIds">
    <wsdl:part name="parameters" element="tns:searchForRegistrationGroupIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForSeatpoolDefinitions">
    <wsdl:part name="parameters" element="tns:searchForSeatpoolDefinitions">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateFormatOffering">
    <wsdl:part name="parameters" element="tns:updateFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:createActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTerm">
    <wsdl:part name="parameters" element="tns:getTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFormatOfferingsByCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getFormatOfferingsByCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsForCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsForCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupTemplate">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyActivityOffering">
    <wsdl:part name="parameters" element="tns:copyActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createSeatPoolDefinitionResponse">
    <wsdl:part name="parameters" element="tns:createSeatPoolDefinitionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeSeatPoolDefinitionFromActivityOffering">
    <wsdl:part name="parameters" element="tns:removeSeatPoolDefinitionFromActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSeatPoolDefinitionResponse">
    <wsdl:part name="parameters" element="tns:getSeatPoolDefinitionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateSeatPoolDefinitionResponse">
    <wsdl:part name="parameters" element="tns:validateSeatPoolDefinitionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGeneratedRegistrationGroupsForTemplateResponse">
    <wsdl:part name="parameters" element="tns:deleteGeneratedRegistrationGroupsForTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityOfferingIds">
    <wsdl:part name="parameters" element="tns:searchForActivityOfferingIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForSeatpoolDefinitionIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForSeatpoolDefinitionIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:deleteActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsByIds">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsForCourseOffering">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsForCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroup">
    <wsdl:part name="parameters" element="tns:getRegistrationGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSeatPoolDefinitionResponse">
    <wsdl:part name="parameters" element="tns:updateSeatPoolDefinitionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingAdminDisplay">
    <wsdl:part name="parameters" element="tns:getActivityOfferingAdminDisplay">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationGroup">
    <wsdl:part name="parameters" element="tns:deleteRegistrationGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateInClassContactHoursForTerm">
    <wsdl:part name="parameters" element="tns:calculateInClassContactHoursForTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteActivityOfferingCascaded">
    <wsdl:part name="parameters" element="tns:deleteActivityOfferingCascaded">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteFormatOfferingCascaded">
    <wsdl:part name="parameters" element="tns:deleteFormatOfferingCascaded">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSeatPoolDefinitionsForActivityOffering">
    <wsdl:part name="parameters" element="tns:getSeatPoolDefinitionsForActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityOfferings">
    <wsdl:part name="parameters" element="tns:searchForActivityOfferings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRegistrationGroupResponse">
    <wsdl:part name="parameters" element="tns:createRegistrationGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingAdminDisplayResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingAdminDisplayResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getValidRolloverOptionKeysResponse">
    <wsdl:part name="parameters" element="tns:getValidRolloverOptionKeysResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:getFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateSeatPoolDefinition">
    <wsdl:part name="parameters" element="tns:validateSeatPoolDefinition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRegistrationGroupResponse">
    <wsdl:part name="parameters" element="tns:updateRegistrationGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByIds">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseOfferingsResponse">
    <wsdl:part name="parameters" element="tns:searchForCourseOfferingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingTypesResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getValidCanonicalCourseToCourseOfferingOptionKeys">
    <wsdl:part name="parameters" element="tns:getValidCanonicalCourseToCourseOfferingOptionKeys">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingTypes">
    <wsdl:part name="parameters" element="tns:getActivityOfferingTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCourseOfferingCascaded">
    <wsdl:part name="parameters" element="tns:deleteCourseOfferingCascaded">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByCourseResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByCourseResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getValidCanonicalCourseToCourseOfferingOptionKeysResponse">
    <wsdl:part name="parameters" element="tns:getValidCanonicalCourseToCourseOfferingOptionKeysResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTerm">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getValidRolloverOptionKeys">
    <wsdl:part name="parameters" element="tns:getValidRolloverOptionKeys">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:deleteFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsWithActivityOfferings">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsWithActivityOfferings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingAdminDisplayResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingAdminDisplayResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsByFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsByFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeSeatPoolDefinitionFromActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:removeSeatPoolDefinitionFromActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:validateFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:deleteCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByCourseAndTerm">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByCourseAndTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByTermAndInstructor">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByTermAndInstructor">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:createFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByTermAndUnitsContentOwnerResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByTermAndUnitsContentOwnerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingIdsByType">
    <wsdl:part name="parameters" element="tns:getCourseOfferingIdsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingTypeResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingAdminDisplay">
    <wsdl:part name="parameters" element="tns:getCourseOfferingAdminDisplay">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteFormatOffering">
    <wsdl:part name="parameters" element="tns:deleteFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByCourseOffering">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:validateCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationGroupTemplateResponse">
    <wsdl:part name="parameters" element="tns:deleteRegistrationGroupTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSeatPoolDefinition">
    <wsdl:part name="parameters" element="tns:updateSeatPoolDefinition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGeneratedRegistrationGroupsByFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:deleteGeneratedRegistrationGroupsByFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingType">
    <wsdl:part name="parameters" element="tns:getCourseOfferingType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteSeatPoolDefinitionResponse">
    <wsdl:part name="parameters" element="tns:deleteSeatPoolDefinitionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByCourseAndTermResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByCourseAndTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingAdminDisplaysByIds">
    <wsdl:part name="parameters" element="tns:getActivityOfferingAdminDisplaysByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByTermAndInstructorResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByTermAndInstructorResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingTypes">
    <wsdl:part name="parameters" element="tns:getCourseOfferingTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingTypesForActivityType">
    <wsdl:part name="parameters" element="tns:getActivityOfferingTypesForActivityType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForCourseOfferingIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForCourseOfferingIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForSeatpoolDefinitionsResponse">
    <wsdl:part name="parameters" element="tns:searchForSeatpoolDefinitionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRegistrationGroupResponse">
    <wsdl:part name="parameters" element="tns:validateRegistrationGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForRegistrationGroupIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForRegistrationGroupIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingTypeResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:copyActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFormatOffering">
    <wsdl:part name="parameters" element="tns:getFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateFormatOfferingResponse">
    <wsdl:part name="parameters" element="tns:updateFormatOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOffering">
    <wsdl:part name="parameters" element="tns:getCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteFormatOfferingCascadedResponse">
    <wsdl:part name="parameters" element="tns:deleteFormatOfferingCascadedResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGeneratedRegistrationGroupsByFormatOffering">
    <wsdl:part name="parameters" element="tns:deleteGeneratedRegistrationGroupsByFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="rolloverCourseOffering">
    <wsdl:part name="parameters" element="tns:rolloverCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateTotalContactHoursForTerm">
    <wsdl:part name="parameters" element="tns:calculateTotalContactHoursForTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCourseOfferingFromCanonicalResponse">
    <wsdl:part name="parameters" element="tns:updateCourseOfferingFromCanonicalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingTypesForActivityTypeResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingTypesForActivityTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingAdminDisplaysByIdsResponse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingAdminDisplaysByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createActivityOffering">
    <wsdl:part name="parameters" element="tns:createActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteSeatPoolDefinition">
    <wsdl:part name="parameters" element="tns:deleteSeatPoolDefinition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateActivityOfferings">
    <wsdl:part name="parameters" element="tns:generateActivityOfferings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructorTypesForActivityOfferingType">
    <wsdl:part name="parameters" element="tns:getInstructorTypesForActivityOfferingType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRegistrationGroupsForTemplateResponse">
    <wsdl:part name="parameters" element="tns:generateRegistrationGroupsForTemplateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingsByFormatOfferingWithoutRegGroupResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingsByFormatOfferingWithoutRegGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingAdminDisplaysForCourseOffering">
    <wsdl:part name="parameters" element="tns:getActivityOfferingAdminDisplaysForCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateFormatOffering">
    <wsdl:part name="parameters" element="tns:validateFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForActivityOfferingIdsResponse">
    <wsdl:part name="parameters" element="tns:searchForActivityOfferingIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingAdminDisplaysForCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingAdminDisplaysForCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGeneratedRegistrationGroupsForTemplate">
    <wsdl:part name="parameters" element="tns:deleteGeneratedRegistrationGroupsForTemplate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRegistrationGroupsByFormatOffering">
    <wsdl:part name="parameters" element="tns:deleteRegistrationGroupsByFormatOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegistrationGroupsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getRegistrationGroupsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOfferingResponse">
    <wsdl:part name="parameters" element="tns:getActivityOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createSeatPoolDefinition">
    <wsdl:part name="parameters" element="tns:createSeatPoolDefinition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCourseOfferingsByCourse">
    <wsdl:part name="parameters" element="tns:getCourseOfferingsByCourse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateTotalContactHoursForTermResponse">
    <wsdl:part name="parameters" element="tns:calculateTotalContactHoursForTermResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCourseOfferingResponse">
    <wsdl:part name="parameters" element="tns:createCourseOfferingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCourseOffering">
    <wsdl:part name="parameters" element="tns:createCourseOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="calculateOutofClassContactHoursForTerm">
    <wsdl:part name="parameters" element="tns:calculateOutofClassContactHoursForTerm">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActivityOffering">
    <wsdl:part name="parameters" element="tns:getActivityOffering">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CourseOfferingService">
    <wsdl:operation name="updateActivityOffering">
      <wsdl:input name="updateActivityOffering" message="tns:updateActivityOffering">
    </wsdl:input>
      <wsdl:output name="updateActivityOfferingResponse" message="tns:updateActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCourseOffering">
      <wsdl:input name="validateCourseOffering" message="tns:validateCourseOffering">
    </wsdl:input>
      <wsdl:output name="validateCourseOfferingResponse" message="tns:validateCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupTemplate">
      <wsdl:input name="getRegistrationGroupTemplate" message="tns:getRegistrationGroupTemplate">
    </wsdl:input>
      <wsdl:output name="getRegistrationGroupTemplateResponse" message="tns:getRegistrationGroupTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteActivityOffering">
      <wsdl:input name="deleteActivityOffering" message="tns:deleteActivityOffering">
    </wsdl:input>
      <wsdl:output name="deleteActivityOfferingResponse" message="tns:deleteActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationGroupTemplate">
      <wsdl:input name="deleteRegistrationGroupTemplate" message="tns:deleteRegistrationGroupTemplate">
    </wsdl:input>
      <wsdl:output name="deleteRegistrationGroupTemplateResponse" message="tns:deleteRegistrationGroupTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTermTypes">
      <wsdl:input name="getTermTypes" message="tns:getTermTypes">
    </wsdl:input>
      <wsdl:output name="getTermTypesResponse" message="tns:getTermTypesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getValidRolloverOptionKeys">
      <wsdl:input name="getValidRolloverOptionKeys" message="tns:getValidRolloverOptionKeys">
    </wsdl:input>
      <wsdl:output name="getValidRolloverOptionKeysResponse" message="tns:getValidRolloverOptionKeysResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSeatPoolDefinitionToActivityOffering">
      <wsdl:input name="addSeatPoolDefinitionToActivityOffering" message="tns:addSeatPoolDefinitionToActivityOffering">
    </wsdl:input>
      <wsdl:output name="addSeatPoolDefinitionToActivityOfferingResponse" message="tns:addSeatPoolDefinitionToActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateOutofClassContactHoursForTerm">
      <wsdl:input name="calculateOutofClassContactHoursForTerm" message="tns:calculateOutofClassContactHoursForTerm">
    </wsdl:input>
      <wsdl:output name="calculateOutofClassContactHoursForTermResponse" message="tns:calculateOutofClassContactHoursForTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForSeatpoolDefinitions">
      <wsdl:input name="searchForSeatpoolDefinitions" message="tns:searchForSeatpoolDefinitions">
    </wsdl:input>
      <wsdl:output name="searchForSeatpoolDefinitionsResponse" message="tns:searchForSeatpoolDefinitionsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByTermAndInstructor">
      <wsdl:input name="getCourseOfferingsByTermAndInstructor" message="tns:getCourseOfferingsByTermAndInstructor">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingsByTermAndInstructorResponse" message="tns:getCourseOfferingsByTermAndInstructorResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationGroupIds">
      <wsdl:input name="searchForRegistrationGroupIds" message="tns:searchForRegistrationGroupIds">
    </wsdl:input>
      <wsdl:output name="searchForRegistrationGroupIdsResponse" message="tns:searchForRegistrationGroupIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateInClassContactHoursForTerm">
      <wsdl:input name="calculateInClassContactHoursForTerm" message="tns:calculateInClassContactHoursForTerm">
    </wsdl:input>
      <wsdl:output name="calculateInClassContactHoursForTermResponse" message="tns:calculateInClassContactHoursForTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroup">
      <wsdl:input name="getRegistrationGroup" message="tns:getRegistrationGroup">
    </wsdl:input>
      <wsdl:output name="getRegistrationGroupResponse" message="tns:getRegistrationGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCourseOfferingCascaded">
      <wsdl:input name="deleteCourseOfferingCascaded" message="tns:deleteCourseOfferingCascaded">
    </wsdl:input>
      <wsdl:output name="deleteCourseOfferingCascadedResponse" message="tns:deleteCourseOfferingCascadedResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createSeatPoolDefinition">
      <wsdl:input name="createSeatPoolDefinition" message="tns:createSeatPoolDefinition">
    </wsdl:input>
      <wsdl:output name="createSeatPoolDefinitionResponse" message="tns:createSeatPoolDefinitionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rolloverCourseOffering">
      <wsdl:input name="rolloverCourseOffering" message="tns:rolloverCourseOffering">
    </wsdl:input>
      <wsdl:output name="rolloverCourseOfferingResponse" message="tns:rolloverCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createActivityOffering">
      <wsdl:input name="createActivityOffering" message="tns:createActivityOffering">
    </wsdl:input>
      <wsdl:output name="createActivityOfferingResponse" message="tns:createActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForCourseOfferingIds">
      <wsdl:input name="searchForCourseOfferingIds" message="tns:searchForCourseOfferingIds">
    </wsdl:input>
      <wsdl:output name="searchForCourseOfferingIdsResponse" message="tns:searchForCourseOfferingIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByTerm">
      <wsdl:input name="getCourseOfferingIdsByTerm" message="tns:getCourseOfferingIdsByTerm">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTermResponse" message="tns:getCourseOfferingIdsByTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateFormatOffering">
      <wsdl:input name="updateFormatOffering" message="tns:updateFormatOffering">
    </wsdl:input>
      <wsdl:output name="updateFormatOfferingResponse" message="tns:updateFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityOfferingIds">
      <wsdl:input name="searchForActivityOfferingIds" message="tns:searchForActivityOfferingIds">
    </wsdl:input>
      <wsdl:output name="searchForActivityOfferingIdsResponse" message="tns:searchForActivityOfferingIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRegistrationGroupTemplate">
      <wsdl:input name="updateRegistrationGroupTemplate" message="tns:updateRegistrationGroupTemplate">
    </wsdl:input>
      <wsdl:output name="updateRegistrationGroupTemplateResponse" message="tns:updateRegistrationGroupTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCourseOffering">
      <wsdl:input name="updateCourseOffering" message="tns:updateCourseOffering">
    </wsdl:input>
      <wsdl:output name="updateCourseOfferingResponse" message="tns:updateCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByIds">
      <wsdl:input name="getActivityOfferingsByIds" message="tns:getActivityOfferingsByIds">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingsByIdsResponse" message="tns:getActivityOfferingsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRegistrationGroup">
      <wsdl:input name="validateRegistrationGroup" message="tns:validateRegistrationGroup">
    </wsdl:input>
      <wsdl:output name="validateRegistrationGroupResponse" message="tns:validateRegistrationGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCourseOffering">
      <wsdl:input name="createCourseOffering" message="tns:createCourseOffering">
    </wsdl:input>
      <wsdl:output name="createCourseOfferingResponse" message="tns:createCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRegistrationGroup">
      <wsdl:input name="updateRegistrationGroup" message="tns:updateRegistrationGroup">
    </wsdl:input>
      <wsdl:output name="updateRegistrationGroupResponse" message="tns:updateRegistrationGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSeatPoolDefinition">
      <wsdl:input name="getSeatPoolDefinition" message="tns:getSeatPoolDefinition">
    </wsdl:input>
      <wsdl:output name="getSeatPoolDefinitionResponse" message="tns:getSeatPoolDefinitionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingTypes">
      <wsdl:input name="getCourseOfferingTypes" message="tns:getCourseOfferingTypes">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingTypesResponse" message="tns:getCourseOfferingTypesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFormatOffering">
      <wsdl:input name="deleteFormatOffering" message="tns:deleteFormatOffering">
    </wsdl:input>
      <wsdl:output name="deleteFormatOfferingResponse" message="tns:deleteFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForCourseOfferings">
      <wsdl:input name="searchForCourseOfferings" message="tns:searchForCourseOfferings">
    </wsdl:input>
      <wsdl:output name="searchForCourseOfferingsResponse" message="tns:searchForCourseOfferingsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByFormatOffering">
      <wsdl:input name="getActivityOfferingsByFormatOffering" message="tns:getActivityOfferingsByFormatOffering">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingsByFormatOfferingResponse" message="tns:getActivityOfferingsByFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getValidCanonicalCourseToCourseOfferingOptionKeys">
      <wsdl:input name="getValidCanonicalCourseToCourseOfferingOptionKeys" message="tns:getValidCanonicalCourseToCourseOfferingOptionKeys">
    </wsdl:input>
      <wsdl:output name="getValidCanonicalCourseToCourseOfferingOptionKeysResponse" message="tns:getValidCanonicalCourseToCourseOfferingOptionKeysResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationGroupsByFormatOffering">
      <wsdl:input name="deleteRegistrationGroupsByFormatOffering" message="tns:deleteRegistrationGroupsByFormatOffering">
    </wsdl:input>
      <wsdl:output name="deleteRegistrationGroupsByFormatOfferingResponse" message="tns:deleteRegistrationGroupsByFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingTypes">
      <wsdl:input name="getActivityOfferingTypes" message="tns:getActivityOfferingTypes">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingTypesResponse" message="tns:getActivityOfferingTypesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByCourse">
      <wsdl:input name="getCourseOfferingsByCourse" message="tns:getCourseOfferingsByCourse">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingsByCourseResponse" message="tns:getCourseOfferingsByCourseResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateSeatPoolDefinition">
      <wsdl:input name="validateSeatPoolDefinition" message="tns:validateSeatPoolDefinition">
    </wsdl:input>
      <wsdl:output name="validateSeatPoolDefinitionResponse" message="tns:validateSeatPoolDefinitionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteActivityOfferingCascaded">
      <wsdl:input name="deleteActivityOfferingCascaded" message="tns:deleteActivityOfferingCascaded">
    </wsdl:input>
      <wsdl:output name="deleteActivityOfferingCascadedResponse" message="tns:deleteActivityOfferingCascadedResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationGroupTemplate">
      <wsdl:input name="createRegistrationGroupTemplate" message="tns:createRegistrationGroupTemplate">
    </wsdl:input>
      <wsdl:output name="createRegistrationGroupTemplateResponse" message="tns:createRegistrationGroupTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateTotalContactHoursForTerm">
      <wsdl:input name="calculateTotalContactHoursForTerm" message="tns:calculateTotalContactHoursForTerm">
    </wsdl:input>
      <wsdl:output name="calculateTotalContactHoursForTermResponse" message="tns:calculateTotalContactHoursForTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingType">
      <wsdl:input name="getActivityOfferingType" message="tns:getActivityOfferingType">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingTypeResponse" message="tns:getActivityOfferingTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateActivityOffering">
      <wsdl:input name="validateActivityOffering" message="tns:validateActivityOffering">
    </wsdl:input>
      <wsdl:output name="validateActivityOfferingResponse" message="tns:validateActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCourseOfferingFromCanonical">
      <wsdl:input name="validateCourseOfferingFromCanonical" message="tns:validateCourseOfferingFromCanonical">
    </wsdl:input>
      <wsdl:output name="validateCourseOfferingFromCanonicalResponse" message="tns:validateCourseOfferingFromCanonicalResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateFormatOffering">
      <wsdl:input name="validateFormatOffering" message="tns:validateFormatOffering">
    </wsdl:input>
      <wsdl:output name="validateFormatOfferingResponse" message="tns:validateFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateActivityOfferings">
      <wsdl:input name="generateActivityOfferings" message="tns:generateActivityOfferings">
    </wsdl:input>
      <wsdl:output name="generateActivityOfferingsResponse" message="tns:generateActivityOfferingsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingAdminDisplaysByIds">
      <wsdl:input name="getCourseOfferingAdminDisplaysByIds" message="tns:getCourseOfferingAdminDisplaysByIds">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingAdminDisplaysByIdsResponse" message="tns:getCourseOfferingAdminDisplaysByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCourseOffering">
      <wsdl:input name="deleteCourseOffering" message="tns:deleteCourseOffering">
    </wsdl:input>
      <wsdl:output name="deleteCourseOfferingResponse" message="tns:deleteCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRegistrationGroupTemplate">
      <wsdl:input name="validateRegistrationGroupTemplate" message="tns:validateRegistrationGroupTemplate">
    </wsdl:input>
      <wsdl:output name="validateRegistrationGroupTemplateResponse" message="tns:validateRegistrationGroupTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGeneratedRegistrationGroupsForTemplate">
      <wsdl:input name="deleteGeneratedRegistrationGroupsForTemplate" message="tns:deleteGeneratedRegistrationGroupsForTemplate">
    </wsdl:input>
      <wsdl:output name="deleteGeneratedRegistrationGroupsForTemplateResponse" message="tns:deleteGeneratedRegistrationGroupsForTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOffering">
      <wsdl:input name="getActivityOffering" message="tns:getActivityOffering">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingResponse" message="tns:getActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSeatPoolDefinition">
      <wsdl:input name="deleteSeatPoolDefinition" message="tns:deleteSeatPoolDefinition">
    </wsdl:input>
      <wsdl:output name="deleteSeatPoolDefinitionResponse" message="tns:deleteSeatPoolDefinitionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructorTypesForActivityOfferingType">
      <wsdl:input name="getInstructorTypesForActivityOfferingType" message="tns:getInstructorTypesForActivityOfferingType">
    </wsdl:input>
      <wsdl:output name="getInstructorTypesForActivityOfferingTypeResponse" message="tns:getInstructorTypesForActivityOfferingTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByCourseOffering">
      <wsdl:input name="getActivityOfferingsByCourseOffering" message="tns:getActivityOfferingsByCourseOffering">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingsByCourseOfferingResponse" message="tns:getActivityOfferingsByCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationGroup">
      <wsdl:input name="deleteRegistrationGroup" message="tns:deleteRegistrationGroup">
    </wsdl:input>
      <wsdl:output name="deleteRegistrationGroupResponse" message="tns:deleteRegistrationGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingType">
      <wsdl:input name="getCourseOfferingType" message="tns:getCourseOfferingType">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingTypeResponse" message="tns:getCourseOfferingTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingTypesForActivityType">
      <wsdl:input name="getActivityOfferingTypesForActivityType" message="tns:getActivityOfferingTypesForActivityType">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingTypesForActivityTypeResponse" message="tns:getActivityOfferingTypesForActivityTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRegistrationGroupsForTemplate">
      <wsdl:input name="generateRegistrationGroupsForTemplate" message="tns:generateRegistrationGroupsForTemplate">
    </wsdl:input>
      <wsdl:output name="generateRegistrationGroupsForTemplateResponse" message="tns:generateRegistrationGroupsForTemplateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSeatPoolDefinitionsForActivityOffering">
      <wsdl:input name="getSeatPoolDefinitionsForActivityOffering" message="tns:getSeatPoolDefinitionsForActivityOffering">
    </wsdl:input>
      <wsdl:output name="getSeatPoolDefinitionsForActivityOfferingResponse" message="tns:getSeatPoolDefinitionsForActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByTermAndSubjectArea">
      <wsdl:input name="getCourseOfferingIdsByTermAndSubjectArea" message="tns:getCourseOfferingIdsByTermAndSubjectArea">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTermAndSubjectAreaResponse" message="tns:getCourseOfferingIdsByTermAndSubjectAreaResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOffering">
      <wsdl:input name="getCourseOffering" message="tns:getCourseOffering">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingResponse" message="tns:getCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingAdminDisplaysForCourseOffering">
      <wsdl:input name="getActivityOfferingAdminDisplaysForCourseOffering" message="tns:getActivityOfferingAdminDisplaysForCourseOffering">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingAdminDisplaysForCourseOfferingResponse" message="tns:getActivityOfferingAdminDisplaysForCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityOfferings">
      <wsdl:input name="searchForActivityOfferings" message="tns:searchForActivityOfferings">
    </wsdl:input>
      <wsdl:output name="searchForActivityOfferingsResponse" message="tns:searchForActivityOfferingsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCourseOfferingFromCanonical">
      <wsdl:input name="updateCourseOfferingFromCanonical" message="tns:updateCourseOfferingFromCanonical">
    </wsdl:input>
      <wsdl:output name="updateCourseOfferingFromCanonicalResponse" message="tns:updateCourseOfferingFromCanonicalResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsWithActivityOfferings">
      <wsdl:input name="getRegistrationGroupsWithActivityOfferings" message="tns:getRegistrationGroupsWithActivityOfferings">
    </wsdl:input>
      <wsdl:output name="getRegistrationGroupsWithActivityOfferingsResponse" message="tns:getRegistrationGroupsWithActivityOfferingsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForSeatpoolDefinitionIds">
      <wsdl:input name="searchForSeatpoolDefinitionIds" message="tns:searchForSeatpoolDefinitionIds">
    </wsdl:input>
      <wsdl:output name="searchForSeatpoolDefinitionIdsResponse" message="tns:searchForSeatpoolDefinitionIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFormatOfferingsByCourseOffering">
      <wsdl:input name="getFormatOfferingsByCourseOffering" message="tns:getFormatOfferingsByCourseOffering">
    </wsdl:input>
      <wsdl:output name="getFormatOfferingsByCourseOfferingResponse" message="tns:getFormatOfferingsByCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFormatOffering">
      <wsdl:input name="createFormatOffering" message="tns:createFormatOffering">
    </wsdl:input>
      <wsdl:output name="createFormatOfferingResponse" message="tns:createFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copyActivityOffering">
      <wsdl:input name="copyActivityOffering" message="tns:copyActivityOffering">
    </wsdl:input>
      <wsdl:output name="copyActivityOfferingResponse" message="tns:copyActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingAdminDisplay">
      <wsdl:input name="getCourseOfferingAdminDisplay" message="tns:getCourseOfferingAdminDisplay">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingAdminDisplayResponse" message="tns:getCourseOfferingAdminDisplayResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGeneratedRegistrationGroupsByFormatOffering">
      <wsdl:input name="deleteGeneratedRegistrationGroupsByFormatOffering" message="tns:deleteGeneratedRegistrationGroupsByFormatOffering">
    </wsdl:input>
      <wsdl:output name="deleteGeneratedRegistrationGroupsByFormatOfferingResponse" message="tns:deleteGeneratedRegistrationGroupsByFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTerm">
      <wsdl:input name="getTerm" message="tns:getTerm">
    </wsdl:input>
      <wsdl:output name="getTermResponse" message="tns:getTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationGroup">
      <wsdl:input name="createRegistrationGroup" message="tns:createRegistrationGroup">
    </wsdl:input>
      <wsdl:output name="createRegistrationGroupResponse" message="tns:createRegistrationGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsForCourseOffering">
      <wsdl:input name="getRegistrationGroupsForCourseOffering" message="tns:getRegistrationGroupsForCourseOffering">
    </wsdl:input>
      <wsdl:output name="getRegistrationGroupsForCourseOfferingResponse" message="tns:getRegistrationGroupsForCourseOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsByFormatOffering">
      <wsdl:input name="getRegistrationGroupsByFormatOffering" message="tns:getRegistrationGroupsByFormatOffering">
    </wsdl:input>
      <wsdl:output name="getRegistrationGroupsByFormatOfferingResponse" message="tns:getRegistrationGroupsByFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByType">
      <wsdl:input name="getCourseOfferingIdsByType" message="tns:getCourseOfferingIdsByType">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTypeResponse" message="tns:getCourseOfferingIdsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationGroups">
      <wsdl:input name="searchForRegistrationGroups" message="tns:searchForRegistrationGroups">
    </wsdl:input>
      <wsdl:output name="searchForRegistrationGroupsResponse" message="tns:searchForRegistrationGroupsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFormatOffering">
      <wsdl:input name="getFormatOffering" message="tns:getFormatOffering">
    </wsdl:input>
      <wsdl:output name="getFormatOfferingResponse" message="tns:getFormatOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByIds">
      <wsdl:input name="getCourseOfferingsByIds" message="tns:getCourseOfferingsByIds">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingsByIdsResponse" message="tns:getCourseOfferingsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingAdminDisplaysByIds">
      <wsdl:input name="getActivityOfferingAdminDisplaysByIds" message="tns:getActivityOfferingAdminDisplaysByIds">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingAdminDisplaysByIdsResponse" message="tns:getActivityOfferingAdminDisplaysByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByTermAndUnitsContentOwner">
      <wsdl:input name="getCourseOfferingIdsByTermAndUnitsContentOwner" message="tns:getCourseOfferingIdsByTermAndUnitsContentOwner">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTermAndUnitsContentOwnerResponse" message="tns:getCourseOfferingIdsByTermAndUnitsContentOwnerResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeSeatPoolDefinitionFromActivityOffering">
      <wsdl:input name="removeSeatPoolDefinitionFromActivityOffering" message="tns:removeSeatPoolDefinitionFromActivityOffering">
    </wsdl:input>
      <wsdl:output name="removeSeatPoolDefinitionFromActivityOfferingResponse" message="tns:removeSeatPoolDefinitionFromActivityOfferingResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsByIds">
      <wsdl:input name="getRegistrationGroupsByIds" message="tns:getRegistrationGroupsByIds">
    </wsdl:input>
      <wsdl:output name="getRegistrationGroupsByIdsResponse" message="tns:getRegistrationGroupsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingAdminDisplay">
      <wsdl:input name="getActivityOfferingAdminDisplay" message="tns:getActivityOfferingAdminDisplay">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingAdminDisplayResponse" message="tns:getActivityOfferingAdminDisplayResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByCourseAndTerm">
      <wsdl:input name="getCourseOfferingsByCourseAndTerm" message="tns:getCourseOfferingsByCourseAndTerm">
    </wsdl:input>
      <wsdl:output name="getCourseOfferingsByCourseAndTermResponse" message="tns:getCourseOfferingsByCourseAndTermResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByFormatOfferingWithoutRegGroup">
      <wsdl:input name="getActivityOfferingsByFormatOfferingWithoutRegGroup" message="tns:getActivityOfferingsByFormatOfferingWithoutRegGroup">
    </wsdl:input>
      <wsdl:output name="getActivityOfferingsByFormatOfferingWithoutRegGroupResponse" message="tns:getActivityOfferingsByFormatOfferingWithoutRegGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructorTypesForCourseOfferingType">
      <wsdl:input name="getInstructorTypesForCourseOfferingType" message="tns:getInstructorTypesForCourseOfferingType">
    </wsdl:input>
      <wsdl:output name="getInstructorTypesForCourseOfferingTypeResponse" message="tns:getInstructorTypesForCourseOfferingTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFormatOfferingCascaded">
      <wsdl:input name="deleteFormatOfferingCascaded" message="tns:deleteFormatOfferingCascaded">
    </wsdl:input>
      <wsdl:output name="deleteFormatOfferingCascadedResponse" message="tns:deleteFormatOfferingCascadedResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSeatPoolDefinition">
      <wsdl:input name="updateSeatPoolDefinition" message="tns:updateSeatPoolDefinition">
    </wsdl:input>
      <wsdl:output name="updateSeatPoolDefinitionResponse" message="tns:updateSeatPoolDefinitionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CourseOfferingServiceSoapBinding" type="tns:CourseOfferingService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="updateActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationGroupTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationGroupTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationGroupTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRegistrationGroupTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRegistrationGroupTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTermTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTermTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTermTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSeatPoolDefinitionToActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addSeatPoolDefinitionToActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addSeatPoolDefinitionToActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getValidRolloverOptionKeys">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getValidRolloverOptionKeys">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getValidRolloverOptionKeysResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateOutofClassContactHoursForTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="calculateOutofClassContactHoursForTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="calculateOutofClassContactHoursForTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByTermAndInstructor">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingsByTermAndInstructor">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingsByTermAndInstructorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForSeatpoolDefinitions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForSeatpoolDefinitions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForSeatpoolDefinitionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationGroupIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForRegistrationGroupIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForRegistrationGroupIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateInClassContactHoursForTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="calculateInClassContactHoursForTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="calculateInClassContactHoursForTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createSeatPoolDefinition">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createSeatPoolDefinition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createSeatPoolDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCourseOfferingCascaded">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCourseOfferingCascaded">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCourseOfferingCascadedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rolloverCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rolloverCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="rolloverCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingIdsByTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForCourseOfferingIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForCourseOfferingIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForCourseOfferingIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityOfferingIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForActivityOfferingIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForActivityOfferingIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRegistrationGroupTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRegistrationGroupTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRegistrationGroupTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRegistrationGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateRegistrationGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateRegistrationGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRegistrationGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRegistrationGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRegistrationGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSeatPoolDefinition">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSeatPoolDefinition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSeatPoolDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForCourseOfferings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForCourseOfferings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForCourseOfferingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingsByFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingsByFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getValidCanonicalCourseToCourseOfferingOptionKeys">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getValidCanonicalCourseToCourseOfferingOptionKeys">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getValidCanonicalCourseToCourseOfferingOptionKeysResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationGroupsByFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRegistrationGroupsByFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRegistrationGroupsByFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByCourse">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingsByCourse">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingsByCourseResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateSeatPoolDefinition">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateSeatPoolDefinition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateSeatPoolDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteActivityOfferingCascaded">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteActivityOfferingCascaded">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteActivityOfferingCascadedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="calculateTotalContactHoursForTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="calculateTotalContactHoursForTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="calculateTotalContactHoursForTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationGroupTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRegistrationGroupTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRegistrationGroupTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCourseOfferingFromCanonical">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCourseOfferingFromCanonical">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCourseOfferingFromCanonicalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateActivityOfferings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateActivityOfferings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateActivityOfferingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingAdminDisplaysByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingAdminDisplaysByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingAdminDisplaysByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRegistrationGroupTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateRegistrationGroupTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateRegistrationGroupTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGeneratedRegistrationGroupsForTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteGeneratedRegistrationGroupsForTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteGeneratedRegistrationGroupsForTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSeatPoolDefinition">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteSeatPoolDefinition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteSeatPoolDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructorTypesForActivityOfferingType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInstructorTypesForActivityOfferingType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInstructorTypesForActivityOfferingTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRegistrationGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRegistrationGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRegistrationGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingsByCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingsByCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingTypesForActivityType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingTypesForActivityType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingTypesForActivityTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRegistrationGroupsForTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateRegistrationGroupsForTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateRegistrationGroupsForTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingAdminDisplaysForCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingAdminDisplaysForCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingAdminDisplaysForCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByTermAndSubjectArea">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingIdsByTermAndSubjectArea">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTermAndSubjectAreaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSeatPoolDefinitionsForActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSeatPoolDefinitionsForActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSeatPoolDefinitionsForActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForActivityOfferings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForActivityOfferings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForActivityOfferingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCourseOfferingFromCanonical">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCourseOfferingFromCanonical">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCourseOfferingFromCanonicalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsWithActivityOfferings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationGroupsWithActivityOfferings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationGroupsWithActivityOfferingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForSeatpoolDefinitionIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForSeatpoolDefinitionIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForSeatpoolDefinitionIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFormatOfferingsByCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFormatOfferingsByCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFormatOfferingsByCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copyActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="copyActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="copyActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingAdminDisplay">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingAdminDisplay">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingAdminDisplayResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGeneratedRegistrationGroupsByFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteGeneratedRegistrationGroupsByFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteGeneratedRegistrationGroupsByFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRegistrationGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRegistrationGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRegistrationGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsForCourseOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationGroupsForCourseOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationGroupsForCourseOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsByFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationGroupsByFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationGroupsByFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingIdsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForRegistrationGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForRegistrationGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForRegistrationGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingAdminDisplaysByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingAdminDisplaysByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingAdminDisplaysByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFormatOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFormatOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFormatOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingIdsByTermAndUnitsContentOwner">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingIdsByTermAndUnitsContentOwner">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingIdsByTermAndUnitsContentOwnerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingAdminDisplay">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingAdminDisplay">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingAdminDisplayResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegistrationGroupsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRegistrationGroupsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRegistrationGroupsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeSeatPoolDefinitionFromActivityOffering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeSeatPoolDefinitionFromActivityOffering">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeSeatPoolDefinitionFromActivityOfferingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourseOfferingsByCourseAndTerm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCourseOfferingsByCourseAndTerm">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCourseOfferingsByCourseAndTermResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivityOfferingsByFormatOfferingWithoutRegGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActivityOfferingsByFormatOfferingWithoutRegGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActivityOfferingsByFormatOfferingWithoutRegGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFormatOfferingCascaded">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteFormatOfferingCascaded">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteFormatOfferingCascadedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructorTypesForCourseOfferingType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInstructorTypesForCourseOfferingType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInstructorTypesForCourseOfferingTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSeatPoolDefinition">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateSeatPoolDefinition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateSeatPoolDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CourseOfferingService">
    <wsdl:port name="CourseOfferingService" binding="tns:CourseOfferingServiceSoapBinding">
      <soap:address location="http://localhost:9090/CourseOfferingService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
