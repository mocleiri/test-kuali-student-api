<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="ExemptionServiceService" targetNamespace="http://student.kuali.org/wsdl/hold" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/hold" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://exceptions.common.r2.student.kuali.org/" xmlns:tns="http://student.kuali.org/wsdl/hold" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/hold">
<xs:element name="addUseToExemption" type="tns:addUseToExemption"/>
<xs:element name="addUseToExemptionResponse" type="tns:addUseToExemptionResponse"/>
<xs:element name="createExemption" type="tns:createExemption"/>
<xs:element name="createExemptionRequest" type="tns:createExemptionRequest"/>
<xs:element name="createExemptionRequestResponse" type="tns:createExemptionRequestResponse"/>
<xs:element name="createExemptionResponse" type="tns:createExemptionResponse"/>
<xs:element name="deleteExemption" type="tns:deleteExemption"/>
<xs:element name="deleteExemptionRequest" type="tns:deleteExemptionRequest"/>
<xs:element name="deleteExemptionRequestResponse" type="tns:deleteExemptionRequestResponse"/>
<xs:element name="deleteExemptionResponse" type="tns:deleteExemptionResponse"/>
<xs:element name="getActiveExemptionsByTypeForPerson" type="tns:getActiveExemptionsByTypeForPerson"/>
<xs:element name="getActiveExemptionsByTypeForPersonResponse" type="tns:getActiveExemptionsByTypeForPersonResponse"/>
<xs:element name="getActiveExemptionsByTypeProcessAndCheckForPerson" type="tns:getActiveExemptionsByTypeProcessAndCheckForPerson"/>
<xs:element name="getActiveExemptionsByTypeProcessAndCheckForPersonResponse" type="tns:getActiveExemptionsByTypeProcessAndCheckForPersonResponse"/>
<xs:element name="getActiveExemptionsForPerson" type="tns:getActiveExemptionsForPerson"/>
<xs:element name="getActiveExemptionsForPersonResponse" type="tns:getActiveExemptionsForPersonResponse"/>
<xs:element name="getExemption" type="tns:getExemption"/>
<xs:element name="getExemptionIdsByType" type="tns:getExemptionIdsByType"/>
<xs:element name="getExemptionIdsByTypeResponse" type="tns:getExemptionIdsByTypeResponse"/>
<xs:element name="getExemptionRequest" type="tns:getExemptionRequest"/>
<xs:element name="getExemptionRequestIdsByType" type="tns:getExemptionRequestIdsByType"/>
<xs:element name="getExemptionRequestIdsByTypeResponse" type="tns:getExemptionRequestIdsByTypeResponse"/>
<xs:element name="getExemptionRequestResponse" type="tns:getExemptionRequestResponse"/>
<xs:element name="getExemptionRequestsByIds" type="tns:getExemptionRequestsByIds"/>
<xs:element name="getExemptionRequestsByIdsResponse" type="tns:getExemptionRequestsByIdsResponse"/>
<xs:element name="getExemptionResponse" type="tns:getExemptionResponse"/>
<xs:element name="getExemptionsByIds" type="tns:getExemptionsByIds"/>
<xs:element name="getExemptionsByIdsResponse" type="tns:getExemptionsByIdsResponse"/>
<xs:element name="getExemptionsByTypeForPerson" type="tns:getExemptionsByTypeForPerson"/>
<xs:element name="getExemptionsByTypeForPersonResponse" type="tns:getExemptionsByTypeForPersonResponse"/>
<xs:element name="getExemptionsForPerson" type="tns:getExemptionsForPerson"/>
<xs:element name="getExemptionsForPersonResponse" type="tns:getExemptionsForPersonResponse"/>
<xs:element name="getExemptionsForRequest" type="tns:getExemptionsForRequest"/>
<xs:element name="getExemptionsForRequestResponse" type="tns:getExemptionsForRequestResponse"/>
<xs:element name="getRequestsByPerson" type="tns:getRequestsByPerson"/>
<xs:element name="getRequestsByPersonResponse" type="tns:getRequestsByPersonResponse"/>
<xs:element name="getRequestsByRequester" type="tns:getRequestsByRequester"/>
<xs:element name="getRequestsByRequesterResponse" type="tns:getRequestsByRequesterResponse"/>
<xs:element name="updateExemption" type="tns:updateExemption"/>
<xs:element name="updateExemptionRequest" type="tns:updateExemptionRequest"/>
<xs:element name="updateExemptionRequestResponse" type="tns:updateExemptionRequestResponse"/>
<xs:element name="updateExemptionResponse" type="tns:updateExemptionResponse"/>
<xs:element name="validateExemption" type="tns:validateExemption"/>
<xs:element name="validateExemptionRequest" type="tns:validateExemptionRequest"/>
<xs:element name="validateExemptionRequestResponse" type="tns:validateExemptionRequestResponse"/>
<xs:element name="validateExemptionResponse" type="tns:validateExemptionResponse"/>
<xs:complexType name="getRequestsByPerson">
<xs:sequence>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ContextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="authenticatedPrincipalId" type="xs:string"/>
<xs:element minOccurs="0" name="principalId" type="xs:string"/>
<xs:element minOccurs="0" name="currentDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="locale" type="tns:LocaleInfo"/>
<xs:element minOccurs="0" name="timeZone" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LocaleInfo">
<xs:sequence>
<xs:element minOccurs="0" name="localeLanguage" type="xs:string"/>
<xs:element minOccurs="0" name="localeVariant" type="xs:string"/>
<xs:element minOccurs="0" name="localeRegion" type="xs:string"/>
<xs:element minOccurs="0" name="localeScript" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType final="extension restriction" name="AttributeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="key" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRequestsByPersonResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ExemptionRequestInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="processKey" type="xs:string"/>
<xs:element minOccurs="0" name="checkId" type="xs:string"/>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="requesterId" type="xs:string"/>
<xs:element minOccurs="0" name="requestDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="approvedByPersonId" type="xs:string"/>
<xs:element minOccurs="0" name="approvedDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="dateOverride" type="tns:DateOverrideInfo"/>
<xs:element minOccurs="0" name="milestoneOverride" type="tns:MilestoneOverrideInfo"/>
<xs:element minOccurs="0" name="learningResultOverride" type="tns:LearningResultOverrideInfo"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="RichTextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="plain" type="xs:string"/>
<xs:element minOccurs="0" name="formatted" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DateOverrideInfo">
<xs:sequence>
<xs:element minOccurs="0" name="milestoneId" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveStartDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="effectiveEndDate" type="xs:dateTime"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="MilestoneOverrideInfo">
<xs:sequence>
<xs:element minOccurs="0" name="milestoneId" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveMilestoneId" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LearningResultOverrideInfo">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="lrrIds" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="MetaInfo">
<xs:sequence>
<xs:element minOccurs="0" name="versionInd" type="xs:string"/>
<xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createId" type="xs:string"/>
<xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="updateId" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateExemption">
<xs:sequence>
<xs:element minOccurs="0" name="validationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionInfo" type="tns:ExemptionInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ExemptionInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="descr" type="tns:RichTextInfo"/>
<xs:element minOccurs="0" name="exemptionRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="processKey" type="xs:string"/>
<xs:element minOccurs="0" name="checkId" type="xs:string"/>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="useLimit" type="xs:int"/>
<xs:element minOccurs="0" name="useCount" type="xs:int"/>
<xs:element minOccurs="0" name="dateOverride" type="tns:DateOverrideInfo"/>
<xs:element minOccurs="0" name="milestoneOverride" type="tns:MilestoneOverrideInfo"/>
<xs:element minOccurs="0" name="learningResultOverride" type="tns:LearningResultOverrideInfo"/>
<xs:element minOccurs="0" name="meta" type="tns:MetaInfo"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:AttributeInfo"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="typeKey" type="xs:string"/>
<xs:attribute name="stateKey" type="xs:string"/>
</xs:complexType>
<xs:complexType name="validateExemptionResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ValidationResultInfo">
<xs:sequence>
<xs:element minOccurs="0" name="element" type="xs:string"/>
<xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateExemption">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionId" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionInfo" type="tns:ExemptionInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateExemptionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveExemptionsByTypeProcessAndCheckForPerson">
<xs:sequence>
<xs:element minOccurs="0" name="typeKey" type="xs:string"/>
<xs:element minOccurs="0" name="processKey" type="xs:string"/>
<xs:element minOccurs="0" name="checkId" type="xs:string"/>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="asOfDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="arg5" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveExemptionsByTypeProcessAndCheckForPersonResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="exemptionIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemption">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateExemptionRequest">
<xs:sequence>
<xs:element minOccurs="0" name="validationTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionRequestInfo" type="tns:ExemptionRequestInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateExemptionRequestResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ValidationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsByTypeForPerson">
<xs:sequence>
<xs:element minOccurs="0" name="typeKey" type="xs:string"/>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsByTypeForPersonResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionRequestsByIds">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="exemptionRequestIds" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionRequestsByIdsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteExemption">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteExemptionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="StatusInfo">
<xs:sequence>
<xs:element minOccurs="0" name="isSuccess" type="xs:boolean"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateExemptionRequest">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionRequestInfo" type="tns:ExemptionRequestInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateExemptionRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ExemptionRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createExemptionRequest">
<xs:sequence>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionRequestTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionRequestInfo" type="tns:ExemptionRequestInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createExemptionRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ExemptionRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveExemptionsForPerson">
<xs:sequence>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="asOfDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveExemptionsForPersonResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveExemptionsByTypeForPerson">
<xs:sequence>
<xs:element minOccurs="0" name="typeKey" type="xs:string"/>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="asOfDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveExemptionsByTypeForPersonResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUseToExemption">
<xs:sequence>
<xs:element minOccurs="0" name="exeptionId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUseToExemptionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsForRequest">
<xs:sequence>
<xs:element minOccurs="0" name="requestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsForRequestResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionIdsByType">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionIdsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteExemptionRequest">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteExemptionRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:StatusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createExemption">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="exemptionInfo" type="tns:ExemptionInfo"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createExemptionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsForPerson">
<xs:sequence>
<xs:element minOccurs="0" name="personId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionsForPersonResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionRequestIdsByType">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionRequestTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionRequestIdsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRequestsByRequester">
<xs:sequence>
<xs:element minOccurs="0" name="requesterId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRequestsByRequesterResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ExemptionRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionRequest">
<xs:sequence>
<xs:element minOccurs="0" name="exemptionRequestId" type="xs:string"/>
<xs:element minOccurs="0" name="contextInfo" type="tns:ContextInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getExemptionRequestResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:ExemptionRequestInfo"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="errorLevel">
<xs:restriction base="xs:string">
<xs:enumeration value="OK"/>
<xs:enumeration value="WARN"/>
<xs:enumeration value="ERROR"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
<xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
<xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
<xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
<xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
<xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
<xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
<xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://exceptions.common.r2.student.kuali.org/" targetNamespace="http://exceptions.common.r2.student.kuali.org/" version="1.0">
<xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
<xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
<xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
<xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
<xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
<xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
<xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
<xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
<xs:complexType name="InvalidParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="OperationFailedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="MissingParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="PermissionDeniedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DoesNotExistException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="VersionMismatchException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DataValidationErrorException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" nillable="true" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AlreadyExistsException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="validateExemptionRequestResponse">
    <wsdl:part name="parameters" element="tns:validateExemptionRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUseToExemptionResponse">
    <wsdl:part name="parameters" element="tns:addUseToExemptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateExemptionRequest">
    <wsdl:part name="parameters" element="tns:updateExemptionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRequestsByPerson">
    <wsdl:part name="parameters" element="tns:getRequestsByPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsForRequestResponse">
    <wsdl:part name="parameters" element="tns:getExemptionsForRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsByTypeForPerson">
    <wsdl:part name="parameters" element="tns:getExemptionsByTypeForPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRequestsByRequester">
    <wsdl:part name="parameters" element="tns:getRequestsByRequester">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteExemptionRequestResponse">
    <wsdl:part name="parameters" element="tns:deleteExemptionRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsByIds">
    <wsdl:part name="parameters" element="tns:getExemptionsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createExemptionResponse">
    <wsdl:part name="parameters" element="tns:createExemptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionRequestIdsByType">
    <wsdl:part name="parameters" element="tns:getExemptionRequestIdsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionIdsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getExemptionIdsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveExemptionsForPersonResponse">
    <wsdl:part name="parameters" element="tns:getActiveExemptionsForPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateExemption">
    <wsdl:part name="parameters" element="tns:validateExemption">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemption">
    <wsdl:part name="parameters" element="tns:getExemption">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUseToExemption">
    <wsdl:part name="parameters" element="tns:addUseToExemption">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveExemptionsByTypeProcessAndCheckForPerson">
    <wsdl:part name="parameters" element="tns:getActiveExemptionsByTypeProcessAndCheckForPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createExemptionRequest">
    <wsdl:part name="parameters" element="tns:createExemptionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveExemptionsByTypeProcessAndCheckForPersonResponse">
    <wsdl:part name="parameters" element="tns:getActiveExemptionsByTypeProcessAndCheckForPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionRequest">
    <wsdl:part name="parameters" element="tns:getExemptionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createExemption">
    <wsdl:part name="parameters" element="tns:createExemption">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionRequestResponse">
    <wsdl:part name="parameters" element="tns:getExemptionRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateExemptionResponse">
    <wsdl:part name="parameters" element="tns:updateExemptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionRequestsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getExemptionRequestsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionIdsByType">
    <wsdl:part name="parameters" element="tns:getExemptionIdsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteExemption">
    <wsdl:part name="parameters" element="tns:deleteExemption">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateExemptionResponse">
    <wsdl:part name="parameters" element="tns:validateExemptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsForPerson">
    <wsdl:part name="parameters" element="tns:getExemptionsForPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createExemptionRequestResponse">
    <wsdl:part name="parameters" element="tns:createExemptionRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsForPersonResponse">
    <wsdl:part name="parameters" element="tns:getExemptionsForPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsByTypeForPersonResponse">
    <wsdl:part name="parameters" element="tns:getExemptionsByTypeForPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateExemption">
    <wsdl:part name="parameters" element="tns:updateExemption">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRequestsByRequesterResponse">
    <wsdl:part name="parameters" element="tns:getRequestsByRequesterResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsByIdsResponse">
    <wsdl:part name="parameters" element="tns:getExemptionsByIdsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveExemptionsByTypeForPerson">
    <wsdl:part name="parameters" element="tns:getActiveExemptionsByTypeForPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteExemptionResponse">
    <wsdl:part name="parameters" element="tns:deleteExemptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRequestsByPersonResponse">
    <wsdl:part name="parameters" element="tns:getRequestsByPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveExemptionsForPerson">
    <wsdl:part name="parameters" element="tns:getActiveExemptionsForPerson">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateExemptionRequestResponse">
    <wsdl:part name="parameters" element="tns:updateExemptionRequestResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionsForRequest">
    <wsdl:part name="parameters" element="tns:getExemptionsForRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateExemptionRequest">
    <wsdl:part name="parameters" element="tns:validateExemptionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteExemptionRequest">
    <wsdl:part name="parameters" element="tns:deleteExemptionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionRequestIdsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getExemptionRequestIdsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveExemptionsByTypeForPersonResponse">
    <wsdl:part name="parameters" element="tns:getActiveExemptionsByTypeForPersonResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionResponse">
    <wsdl:part name="parameters" element="tns:getExemptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExemptionRequestsByIds">
    <wsdl:part name="parameters" element="tns:getExemptionRequestsByIds">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ExemptionService">
    <wsdl:operation name="getRequestsByPerson">
      <wsdl:input name="getRequestsByPerson" message="tns:getRequestsByPerson">
    </wsdl:input>
      <wsdl:output name="getRequestsByPersonResponse" message="tns:getRequestsByPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateExemption">
      <wsdl:input name="validateExemption" message="tns:validateExemption">
    </wsdl:input>
      <wsdl:output name="validateExemptionResponse" message="tns:validateExemptionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateExemption">
      <wsdl:input name="updateExemption" message="tns:updateExemption">
    </wsdl:input>
      <wsdl:output name="updateExemptionResponse" message="tns:updateExemptionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveExemptionsByTypeProcessAndCheckForPerson">
      <wsdl:input name="getActiveExemptionsByTypeProcessAndCheckForPerson" message="tns:getActiveExemptionsByTypeProcessAndCheckForPerson">
    </wsdl:input>
      <wsdl:output name="getActiveExemptionsByTypeProcessAndCheckForPersonResponse" message="tns:getActiveExemptionsByTypeProcessAndCheckForPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsByIds">
      <wsdl:input name="getExemptionsByIds" message="tns:getExemptionsByIds">
    </wsdl:input>
      <wsdl:output name="getExemptionsByIdsResponse" message="tns:getExemptionsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemption">
      <wsdl:input name="getExemption" message="tns:getExemption">
    </wsdl:input>
      <wsdl:output name="getExemptionResponse" message="tns:getExemptionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateExemptionRequest">
      <wsdl:input name="validateExemptionRequest" message="tns:validateExemptionRequest">
    </wsdl:input>
      <wsdl:output name="validateExemptionRequestResponse" message="tns:validateExemptionRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsByTypeForPerson">
      <wsdl:input name="getExemptionsByTypeForPerson" message="tns:getExemptionsByTypeForPerson">
    </wsdl:input>
      <wsdl:output name="getExemptionsByTypeForPersonResponse" message="tns:getExemptionsByTypeForPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionRequestsByIds">
      <wsdl:input name="getExemptionRequestsByIds" message="tns:getExemptionRequestsByIds">
    </wsdl:input>
      <wsdl:output name="getExemptionRequestsByIdsResponse" message="tns:getExemptionRequestsByIdsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExemption">
      <wsdl:input name="deleteExemption" message="tns:deleteExemption">
    </wsdl:input>
      <wsdl:output name="deleteExemptionResponse" message="tns:deleteExemptionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateExemptionRequest">
      <wsdl:input name="updateExemptionRequest" message="tns:updateExemptionRequest">
    </wsdl:input>
      <wsdl:output name="updateExemptionRequestResponse" message="tns:updateExemptionRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createExemptionRequest">
      <wsdl:input name="createExemptionRequest" message="tns:createExemptionRequest">
    </wsdl:input>
      <wsdl:output name="createExemptionRequestResponse" message="tns:createExemptionRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveExemptionsForPerson">
      <wsdl:input name="getActiveExemptionsForPerson" message="tns:getActiveExemptionsForPerson">
    </wsdl:input>
      <wsdl:output name="getActiveExemptionsForPersonResponse" message="tns:getActiveExemptionsForPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveExemptionsByTypeForPerson">
      <wsdl:input name="getActiveExemptionsByTypeForPerson" message="tns:getActiveExemptionsByTypeForPerson">
    </wsdl:input>
      <wsdl:output name="getActiveExemptionsByTypeForPersonResponse" message="tns:getActiveExemptionsByTypeForPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUseToExemption">
      <wsdl:input name="addUseToExemption" message="tns:addUseToExemption">
    </wsdl:input>
      <wsdl:output name="addUseToExemptionResponse" message="tns:addUseToExemptionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsForRequest">
      <wsdl:input name="getExemptionsForRequest" message="tns:getExemptionsForRequest">
    </wsdl:input>
      <wsdl:output name="getExemptionsForRequestResponse" message="tns:getExemptionsForRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionIdsByType">
      <wsdl:input name="getExemptionIdsByType" message="tns:getExemptionIdsByType">
    </wsdl:input>
      <wsdl:output name="getExemptionIdsByTypeResponse" message="tns:getExemptionIdsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExemptionRequest">
      <wsdl:input name="deleteExemptionRequest" message="tns:deleteExemptionRequest">
    </wsdl:input>
      <wsdl:output name="deleteExemptionRequestResponse" message="tns:deleteExemptionRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createExemption">
      <wsdl:input name="createExemption" message="tns:createExemption">
    </wsdl:input>
      <wsdl:output name="createExemptionResponse" message="tns:createExemptionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsForPerson">
      <wsdl:input name="getExemptionsForPerson" message="tns:getExemptionsForPerson">
    </wsdl:input>
      <wsdl:output name="getExemptionsForPersonResponse" message="tns:getExemptionsForPersonResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionRequestIdsByType">
      <wsdl:input name="getExemptionRequestIdsByType" message="tns:getExemptionRequestIdsByType">
    </wsdl:input>
      <wsdl:output name="getExemptionRequestIdsByTypeResponse" message="tns:getExemptionRequestIdsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsByRequester">
      <wsdl:input name="getRequestsByRequester" message="tns:getRequestsByRequester">
    </wsdl:input>
      <wsdl:output name="getRequestsByRequesterResponse" message="tns:getRequestsByRequesterResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionRequest">
      <wsdl:input name="getExemptionRequest" message="tns:getExemptionRequest">
    </wsdl:input>
      <wsdl:output name="getExemptionRequestResponse" message="tns:getExemptionRequestResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ExemptionServiceServiceSoapBinding" type="tns:ExemptionService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getRequestsByPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRequestsByPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRequestsByPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateExemption">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateExemption">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateExemptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveExemptionsByTypeProcessAndCheckForPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActiveExemptionsByTypeProcessAndCheckForPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveExemptionsByTypeProcessAndCheckForPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateExemption">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateExemption">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateExemptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemption">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemption">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateExemptionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateExemptionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateExemptionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsByTypeForPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionsByTypeForPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionsByTypeForPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionRequestsByIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionRequestsByIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionRequestsByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExemption">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteExemption">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteExemptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateExemptionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateExemptionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateExemptionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createExemptionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createExemptionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createExemptionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUseToExemption">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addUseToExemption">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUseToExemptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveExemptionsByTypeForPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActiveExemptionsByTypeForPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveExemptionsByTypeForPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveExemptionsForPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActiveExemptionsForPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveExemptionsForPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsForRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionsForRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionsForRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createExemption">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createExemption">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createExemptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExemptionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteExemptionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteExemptionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionIdsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionIdsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionIdsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionsForPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionsForPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionsForPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionRequestIdsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionRequestIdsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionRequestIdsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsByRequester">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRequestsByRequester">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRequestsByRequesterResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExemptionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExemptionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExemptionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ExemptionServiceService">
    <wsdl:port name="ExemptionServicePort" binding="tns:ExemptionServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/ExemptionServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
