<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright 2010 The Kuali Foundation Licensed under the
  Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may
  obtain a copy of the License at

  http://www.osedu.org/licenses/ECL-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  or implied. See the License for the specific language governing
  permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <!-- This context requires that a spring Transaction Manager named 'transactionManager'
        be defined
    -->


<!-- 
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" value="#{bootstrapConfig.getProperties()}" />
	</bean>

	<bean id="bootstrapConfig" class="org.kuali.rice.core.impl.config.property.ConfigFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:org/kuali/rice/standalone/config/standalone-config.xml</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.kuali.rice.core.impl.config.property.ConfigInitializer.initialize" />
		<property name="arguments">
			<list><ref bean="bootstrapConfig"/></list>
		</property>
	</bean>

    <bean class="org.kuali.rice.core.framework.resourceloader.RiceSpringResourceLoaderConfigurer">
        <property name="localServiceName" value="KSLumContext"/>
    </bean>
-->    
	<import resource="classpath:ks-data-dictionary-services-configuration.xml"/>
	<import resource="classpath:ks-data-dictionary-validator-configuration.xml"/>
    <import resource="classpath:enrollDao.xml"/>

    <!-- JTA -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <bean id="enrollDataSource"
          class="org.kuali.rice.student.core.database.DerbyXAPoolDataSource">
        <property name="transactionManager" ref="userTransaction"/>
        <property name="driverClassName" value="${ks.enroll.datasource.driver.name}"/>
        <property name="maxSize" value="${ks.enroll.datasource.maxSize}"/>
        <property name="minSize" value="${ks.enroll.datasource.minSize}"/>
        <property name="maxWait" value="${ks.enroll.datasource.maxWait}"/>
        <property name="validationQuery" value="${ks.enroll.datasource.validationQuery}"/>
        <property name="url" value="${ks.enroll.datasource.url}"/>
        <property name="username" value="${ks.enroll.datasource.username}"/>
        <property name="password" value="${ks.enroll.datasource.password}"/>
    </bean>

    <!-- Default JPA EntityManagerFactory -->
    <bean id="enrollDefaultEntityManagerFactory" abstract="true"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean
                    class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${ks.enroll.jpa.DatabasePlatform}"/>
                <property name="showSql" value="${ks.enroll.jpa.showSql}"/>
                <property name="generateDdl" value="${ks.enroll.jpa.generateDdl}"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.transaction.manager_lookup_class"
                       value="${ks.enroll.jpa.JpaProperties.hibernate.transaction.manager_lookup_class}"/>
                <entry key="hibernate.hbm2ddl.auto"
                       value="${ks.enroll.jpa.JpaProperties.hibernate.hbm2ddl.auto}"/>
                <entry key="hibernate.connection.release_mode"
                	   value="${ks.enroll.jpa.JpaProperties.hibernate.connection.release_mode}"/>
            </map>
        </property>
    </bean>


<bean id="atpEnrService" class="org.kuali.student.r2.core.class1.atp.service.impl.AtpServiceImpl">
	  	<property name="atpDao" ref="atpEnrDao"/>
	  	<property name="atpTypeDao" ref="atpTypeDao"/>
	  	<property name="atpStateDao" ref="atpStateDao"/>
	  	<property name="atpRichTextDao" ref="atpRichTextDao"/>
	  	<property name="atpRelDao" ref="atpAtpRelationDao"/>
	  	<property name="atpRelTypeDao" ref="atpAtpRelationTypeDao"/>
	  	<property name="milestoneDao" ref="milestoneDao"/>
	  	<property name="milestoneTypeDao" ref="milestoneTypeDao"/>
	  	<property name="atpMilestoneRelationDao" ref="atpMilestoneRelationDao"/>
    	<property name="atpMilestoneRelationTypeDao" ref="atpMilestoneRelationTypeDao"/>
    	<property name="typeTypeRelationDao" ref="typeTypeRelationDao"/>
    	<property name="stateService" ref="stateService"/>
    </bean>
 
     <bean id="acalService" class="org.kuali.student.enrollment.class2.acal.service.impl.AcademicCalendarServiceImpl">
    	<property name="atpService" ref="atpEnrService"/>
    	<property name="acalAssembler" ref="acalAssembler" />
    	<property name="termAssembler" ref="termAssembler"/>
    </bean>
       
    <bean id="ks.exp.acalService" class="org.kuali.rice.ksb.api.bus.support.ServiceBusExporter">
       <property name="serviceDefinition">
           <bean class="org.kuali.rice.ksb.api.bus.support.SoapServiceDefinition">
               <property name="jaxWsService" value="true"/>
               <property name="service" ref="acalService"/>
               <property name="serviceInterface"
                         value="org.kuali.student.enrollment.acal.service.AcademicCalendarService"/>
               <property name="localServiceName" value="AcademicCalendarService"/>
               <property name="serviceNameSpaceURI" value="http://student.kuali.org/wsdl/acal"/>
               <property name="busSecurity" value="${ks.lum.bus.security}"/>
           </bean>
       </property>
   </bean>
       
    <bean id="acalAssembler" class="org.kuali.student.enrollment.class2.acal.service.assembler.AcademicCalendarAssembler">
    	<property name="atpService" ref="atpEnrService"/>
    	<property name="relAssembler" ref="relAssembler" />
    </bean>
      
	<bean  id="termAssembler" class="org.kuali.student.enrollment.class2.acal.service.assembler.TermAssembler"></bean>
	<bean  id="relAssembler" class="org.kuali.student.enrollment.class2.acal.service.assembler.AtpAtpRelationAssembler">
    	<property name="atpService" ref="atpEnrService"/>
	</bean>
	
    <bean id="roleService" class="org.kuali.student.kim.permission.mock.RoleServiceMockImpl " />
    <bean id="permissionService" class="org.kuali.student.kim.permission.mock.PermissionServiceMockImpl" />
	
    
    <bean id="atpEnrDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="atpTypeDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpTypeDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="atpStateDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpStateDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="atpRichTextDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpRichTextDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
   <bean id="atpAtpRelationDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpAtpRelationDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="atpAtpRelationTypeDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpAtpRelationTypeDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="milestoneDao" class="org.kuali.student.r2.core.class1.atp.dao.MilestoneDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="milestoneTypeDao" class="org.kuali.student.r2.core.class1.atp.dao.MilestoneTypeDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="atpMilestoneRelationDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpMilestoneRelationDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
    
    <bean id="atpMilestoneRelationTypeDao" class="org.kuali.student.r2.core.class1.atp.dao.AtpMilestoneRelationTypeDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>

    <bean id="typeTypeRelationDao" class="org.kuali.student.r2.common.dao.TypeTypeRelationDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
        
	<bean id="stateService" class="org.kuali.student.r2.common.service.impl.StateServiceImpl">
        <property name="stateDao" ref="stateDao"/>
        <property name="spDao" ref="stateProcessDao"/>
        <property name="sprDao" ref="stateProcessRelationDao"/>
    </bean>
    
    <bean id="stateDao" class="org.kuali.student.r2.common.dao.StateDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
 
     <bean id="stateProcessDao" class="org.kuali.student.r2.common.dao.StateProcessDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>

    <bean id="stateProcessRelationDao" class="org.kuali.student.r2.common.dao.StateProcessRelationDao">
        <property name="em" ref="enrollEntityManager"/>
    </bean>
              	   
	<tx:annotation-driven transaction-manager="JtaTxManager"
		order="1000" />


    <!-- Exception mapping. This is needed because many operations are proxied
        and do not throw exceptions until a later time
    -->
    <bean id="mapExceptionAdvisor" class="org.kuali.student.common.util.ExceptionMappingAdvice">
        <property name="defaultException"
                  value="org.kuali.student.common.exceptions.OperationFailedException"/>
        <property name="exceptionMapping">
            <map>
                <entry key="javax.persistence.EntityExistsException"
                       value="org.kuali.student.common.exceptions.AlreadyExistsException"/>
                <entry key="org.hibernate.exception.ConstraintViolationException"
                       value="org.kuali.student.common.exceptions.AlreadyExistsException"/>
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:aspect id="dataAccessToBusinessException" ref="mapExceptionAdvisor">
            <aop:after-throwing
                    pointcut="execution(* org.kuali.student.lum.lu.service.impl.LuServiceImpl.*(..))"
                    method="afterThrowing" throwing="ex"/>
            <aop:after-throwing
                    pointcut="execution(* org.kuali.student.lum.lrc.service.impl.LrcServiceImpl.*(..))"
                    method="afterThrowing" throwing="ex"/>
            <aop:after-throwing
                    pointcut="execution(* org.kuali.student.lum.lo.service.impl.LearningObjectiveServiceImpl.*(..))"
                    method="afterThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>


</beans>
