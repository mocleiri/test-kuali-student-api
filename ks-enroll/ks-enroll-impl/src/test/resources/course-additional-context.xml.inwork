<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 The Kuali Foundation Licensed under the
    Educational Community License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may
    obtain a copy of the License at

    http://www.osedu.org/licenses/ECL-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing
    permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	
	<!-- CourseService
		<property name="luService" ref="luClient"/>
		<property name="courseAssembler" ref="courseAssembler"/>
		<property name="courseServiceMethodInvoker" ref="courseServiceMethodInvoker"/>
		<property name="dictionaryServiceDelegate" ref="dictionaryService"/>
		<property name="validator" ref="serviceValidator"/>
	</bean>
	<bean id="courseService" class="org.kuali.student.lum.course.service.impl.CourseServiceImpl">
	-->
	
	<jaxws:endpoint id="luServiceWS" implementor="#luClient"
		implementorClass="org.kuali.student.lum.lu.service.impl.LuServiceImpl" address="/luService" />
	
	<bean id="luClient"
		class="org.kuali.student.lum.lu.service.impl.LuServiceImpl" />
		
	<bean id="searchManager"
		class="org.kuali.student.common.search.service.impl.SearchManagerImpl"
		autowire="byType">
		<constructor-arg index="0" value="classpath:lu-search-config.xml" />
	</bean>

	<bean id="courseServiceMethodInvoker" class="org.kuali.student.lum.course.service.impl.CourseServiceMethodInvoker">
		<property name="luService" ref="luClient"/>
	</bean>
	
	<bean id="courseAssembler" class="org.kuali.student.lum.course.service.assembler.CourseAssembler">
		<property name="formatAssembler" ref="formatAssembler"/>
		<property name="courseJointAssembler" ref="courseJointAssembler"/>
		<property name="luService" ref="luClient"/>
	</bean>
	
	<bean id="formatAssembler" class="org.kuali.student.lum.course.service.assembler.FormatAssembler">
		<property name="activityAssembler" ref="activityAssembler"/>
		<property name="luService" ref="luClient"/>
	</bean>
	
	<bean id="activityAssembler" class="org.kuali.student.lum.course.service.assembler.ActivityAssembler">
		<property name="luService" ref="luClient"/>
	</bean>

	<bean id="courseJointAssembler" class="org.kuali.student.lum.course.service.assembler.CourseJointAssembler">
		<property name="luService" ref="luClient"/>
	</bean>
	
	<bean id="dictionaryService" class="org.kuali.student.common.dictionary.service.impl.poc.DictionaryServiceImpl">
		<constructor-arg index="0" value="classpath:ks-courseInfo-dictionary-context.xml" />	
	</bean>
	
	<bean id="serviceValidator" class="org.kuali.student.common.validator.poc.Validator">
		<!--<property name="messageService" ref="ks.messageServiceMock"/>-->		
	</bean>
	<bean id="dictionaryServiceDelegate" 
	   class="org.kuali.student.common.dictionary.service.impl.DictionaryServiceSpringImpl">
		<constructor-arg index="0" value="classpath:lu-dictionary-config.xml" />
	</bean>

	<bean id="ks.messageServiceMock" class="org.kuali.student.common.messages.service.impl.MessageServiceMock">
		<property name="messageFiles">
			<list>
 				<value>classpath:gwt-messages.xml</value>				
			</list>
		</property>
	</bean>
	
	<bean id="validator" class="org.kuali.student.common.validator.Validator">
 		<property name="messageService" ref="ks.messageServiceMock"/> 		
	</bean>

    <bean id="mapExceptionAdvisor"
        class="org.kuali.student.common.util.ExceptionMappingAdvice">
        <property name="defaultException"
            value="org.kuali.student.common.exceptions.OperationFailedException" />
        <property name="exceptionMapping">
            <map>
                <entry key="javax.persistence.EntityExistsException"
                    value="org.kuali.student.common.exceptions.AlreadyExistsException" />
                <entry
                    key="org.hibernate.exception.ConstraintViolationException"
                    value="org.kuali.student.common.exceptions.AlreadyExistsException" />
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:aspect id="dataAccessToBusinessException"
            ref="mapExceptionAdvisor">
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.lum.lu.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.lum.lrc.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
        </aop:aspect>
    </aop:config>

</beans>