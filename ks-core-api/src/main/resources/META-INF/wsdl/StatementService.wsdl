<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="StatementService" targetNamespace="http://student.kuali.org/wsdl/statement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/statement" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:tns="http://student.kuali.org/wsdl/organization" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization">
    <xs:import namespace="http://student.kuali.org/wsdl/search"/>
    <xs:element name="search" type="tns:search"/>
    <xs:element name="searchResponse" type="tns:searchResponse"/>
    <xs:complexType name="search">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/statement" xmlns:tns="http://student.kuali.org/wsdl/exceptions" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions">
    <xs:import namespace="http://student.kuali.org/wsdl/statement"/>
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:element name="CircularReferenceException" type="tns:CircularReferenceException"/>
    <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
    <xs:complexType name="OperationFailedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VersionMismatchException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="MissingParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" nillable="true" type="ns1:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="CircularReferenceException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:ns2="http://student.kuali.org/wsdl/search" xmlns:ns3="http://student.kuali.org/wsdl/organization" xmlns:tns="http://student.kuali.org/wsdl/statement" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/statement">
    <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
    <xs:element name="createRefStatementRelation" type="tns:createRefStatementRelation"/>
    <xs:element name="createRefStatementRelationResponse" type="tns:createRefStatementRelationResponse"/>
    <xs:element name="createReqComponent" type="tns:createReqComponent"/>
    <xs:element name="createReqComponentResponse" type="tns:createReqComponentResponse"/>
    <xs:element name="createStatement" type="tns:createStatement"/>
    <xs:element name="createStatementResponse" type="tns:createStatementResponse"/>
    <xs:element name="deleteRefStatementRelation" type="tns:deleteRefStatementRelation"/>
    <xs:element name="deleteRefStatementRelationResponse" type="tns:deleteRefStatementRelationResponse"/>
    <xs:element name="deleteReqComponent" type="tns:deleteReqComponent"/>
    <xs:element name="deleteReqComponentResponse" type="tns:deleteReqComponentResponse"/>
    <xs:element name="deleteStatement" type="tns:deleteStatement"/>
    <xs:element name="deleteStatementResponse" type="tns:deleteStatementResponse"/>
    <xs:element name="getNaturalLanguageForRefStatementRelation" type="tns:getNaturalLanguageForRefStatementRelation"/>
    <xs:element name="getNaturalLanguageForRefStatementRelationResponse" type="tns:getNaturalLanguageForRefStatementRelationResponse"/>
    <xs:element name="getNaturalLanguageForReqComponent" type="tns:getNaturalLanguageForReqComponent"/>
    <xs:element name="getNaturalLanguageForReqComponentResponse" type="tns:getNaturalLanguageForReqComponentResponse"/>
    <xs:element name="getNaturalLanguageForStatement" type="tns:getNaturalLanguageForStatement"/>
    <xs:element name="getNaturalLanguageForStatementResponse" type="tns:getNaturalLanguageForStatementResponse"/>
    <xs:element name="getNlUsageType" type="tns:getNlUsageType"/>
    <xs:element name="getNlUsageTypeResponse" type="tns:getNlUsageTypeResponse"/>
    <xs:element name="getNlUsageTypes" type="tns:getNlUsageTypes"/>
    <xs:element name="getNlUsageTypesResponse" type="tns:getNlUsageTypesResponse"/>
    <xs:element name="getRefObjectSubTypes" type="tns:getRefObjectSubTypes"/>
    <xs:element name="getRefObjectSubTypesResponse" type="tns:getRefObjectSubTypesResponse"/>
    <xs:element name="getRefObjectTypes" type="tns:getRefObjectTypes"/>
    <xs:element name="getRefObjectTypesResponse" type="tns:getRefObjectTypesResponse"/>
    <xs:element name="getRefStatementRelation" type="tns:getRefStatementRelation"/>
    <xs:element name="getRefStatementRelationResponse" type="tns:getRefStatementRelationResponse"/>
    <xs:element name="getRefStatementRelationType" type="tns:getRefStatementRelationType"/>
    <xs:element name="getRefStatementRelationTypeResponse" type="tns:getRefStatementRelationTypeResponse"/>
    <xs:element name="getRefStatementRelationTypes" type="tns:getRefStatementRelationTypes"/>
    <xs:element name="getRefStatementRelationTypesForRefObjectSubType" type="tns:getRefStatementRelationTypesForRefObjectSubType"/>
    <xs:element name="getRefStatementRelationTypesForRefObjectSubTypeResponse" type="tns:getRefStatementRelationTypesForRefObjectSubTypeResponse"/>
    <xs:element name="getRefStatementRelationTypesResponse" type="tns:getRefStatementRelationTypesResponse"/>
    <xs:element name="getRefStatementRelationsByRef" type="tns:getRefStatementRelationsByRef"/>
    <xs:element name="getRefStatementRelationsByRefResponse" type="tns:getRefStatementRelationsByRefResponse"/>
    <xs:element name="getRefStatementRelationsByStatement" type="tns:getRefStatementRelationsByStatement"/>
    <xs:element name="getRefStatementRelationsByStatementResponse" type="tns:getRefStatementRelationsByStatementResponse"/>
    <xs:element name="getReqComponent" type="tns:getReqComponent"/>
    <xs:element name="getReqComponentResponse" type="tns:getReqComponentResponse"/>
    <xs:element name="getReqComponentType" type="tns:getReqComponentType"/>
    <xs:element name="getReqComponentTypeResponse" type="tns:getReqComponentTypeResponse"/>
    <xs:element name="getReqComponentTypes" type="tns:getReqComponentTypes"/>
    <xs:element name="getReqComponentTypesForStatementType" type="tns:getReqComponentTypesForStatementType"/>
    <xs:element name="getReqComponentTypesForStatementTypeResponse" type="tns:getReqComponentTypesForStatementTypeResponse"/>
    <xs:element name="getReqComponentTypesResponse" type="tns:getReqComponentTypesResponse"/>
    <xs:element name="getReqComponentsByType" type="tns:getReqComponentsByType"/>
    <xs:element name="getReqComponentsByTypeResponse" type="tns:getReqComponentsByTypeResponse"/>
    <xs:element name="getStatement" type="tns:getStatement"/>
    <xs:element name="getStatementResponse" type="tns:getStatementResponse"/>
    <xs:element name="getStatementTreeView" type="tns:getStatementTreeView"/>
    <xs:element name="getStatementTreeViewForNlUsageType" type="tns:getStatementTreeViewForNlUsageType"/>
    <xs:element name="getStatementTreeViewForNlUsageTypeResponse" type="tns:getStatementTreeViewForNlUsageTypeResponse"/>
    <xs:element name="getStatementTreeViewResponse" type="tns:getStatementTreeViewResponse"/>
    <xs:element name="getStatementType" type="tns:getStatementType"/>
    <xs:element name="getStatementTypeResponse" type="tns:getStatementTypeResponse"/>
    <xs:element name="getStatementTypes" type="tns:getStatementTypes"/>
    <xs:element name="getStatementTypesForRefStatementRelationType" type="tns:getStatementTypesForRefStatementRelationType"/>
    <xs:element name="getStatementTypesForRefStatementRelationTypeResponse" type="tns:getStatementTypesForRefStatementRelationTypeResponse"/>
    <xs:element name="getStatementTypesForStatementType" type="tns:getStatementTypesForStatementType"/>
    <xs:element name="getStatementTypesForStatementTypeResponse" type="tns:getStatementTypesForStatementTypeResponse"/>
    <xs:element name="getStatementTypesResponse" type="tns:getStatementTypesResponse"/>
    <xs:element name="getStatementsByType" type="tns:getStatementsByType"/>
    <xs:element name="getStatementsByTypeResponse" type="tns:getStatementsByTypeResponse"/>
    <xs:element name="getStatementsUsingReqComponent" type="tns:getStatementsUsingReqComponent"/>
    <xs:element name="getStatementsUsingReqComponentResponse" type="tns:getStatementsUsingReqComponentResponse"/>
    <xs:element name="getStatementsUsingStatement" type="tns:getStatementsUsingStatement"/>
    <xs:element name="getStatementsUsingStatementResponse" type="tns:getStatementsUsingStatementResponse"/>
    <xs:element name="translateReqComponentToNL" type="tns:translateReqComponentToNL"/>
    <xs:element name="translateReqComponentToNLResponse" type="tns:translateReqComponentToNLResponse"/>
    <xs:element name="translateStatementTreeViewToNL" type="tns:translateStatementTreeViewToNL"/>
    <xs:element name="translateStatementTreeViewToNLResponse" type="tns:translateStatementTreeViewToNLResponse"/>
    <xs:element name="updateRefStatementRelation" type="tns:updateRefStatementRelation"/>
    <xs:element name="updateRefStatementRelationResponse" type="tns:updateRefStatementRelationResponse"/>
    <xs:element name="updateReqComponent" type="tns:updateReqComponent"/>
    <xs:element name="updateReqComponentResponse" type="tns:updateReqComponentResponse"/>
    <xs:element name="updateStatement" type="tns:updateStatement"/>
    <xs:element name="updateStatementResponse" type="tns:updateStatementResponse"/>
    <xs:element name="updateStatementTreeView" type="tns:updateStatementTreeView"/>
    <xs:element name="updateStatementTreeViewResponse" type="tns:updateStatementTreeViewResponse"/>
    <xs:element name="validateRefStatementRelation" type="tns:validateRefStatementRelation"/>
    <xs:element name="validateRefStatementRelationResponse" type="tns:validateRefStatementRelationResponse"/>
    <xs:element name="validateReqComponent" type="tns:validateReqComponent"/>
    <xs:element name="validateReqComponentResponse" type="tns:validateReqComponentResponse"/>
    <xs:element name="validateStatement" type="tns:validateStatement"/>
    <xs:element name="validateStatementResponse" type="tns:validateStatementResponse"/>
    <xs:complexType name="updateStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
            <xs:element minOccurs="0" name="statementInfo" type="tns:statementInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statementInfo">
        <xs:complexContent>
            <xs:extension base="tns:abstractStatementInfo">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="statementIds" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentIds" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="abstractStatementInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element minOccurs="0" name="operator" type="tns:statementOperatorTypeKey"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="parentId" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="richTextInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="plain" type="xs:string"/>
            <xs:element minOccurs="0" name="formatted" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateStatementResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validationResultInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="element" type="xs:string"/>
            <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="translateReqComponentToNL">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="reqComponentInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="reqCompFields" type="tns:reqCompFieldInfo"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
            <xs:element minOccurs="0" name="requiredComponentType" type="tns:reqComponentTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="naturalLanguageTranslation" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="reqCompFieldInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="reqComponentTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="reqCompFieldTypes">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="reqCompFieldType" type="tns:reqCompFieldTypeInfo"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="reqCompFieldTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="translateReqComponentToNLResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTypesForStatementType">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTypesForStatementTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentType" type="xs:string"/>
            <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createReqComponentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForRefStatementRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForRefStatementRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="statementInfo" type="tns:statementInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateStatementResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateRefStatementRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
            <xs:element minOccurs="0" name="refStatementRelationInfo" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="refStatementRelationInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="refObjectTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="refObjectId" type="xs:string"/>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="updateRefStatementRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
            <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateReqComponentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentType">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:reqComponentTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementType" type="xs:string"/>
            <xs:element minOccurs="0" name="statementInfo" type="tns:statementInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createStatementResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementType">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statementTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="allowedReqComponentTypes">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="allowedStatementTypes">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="statementTypeKey" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="deleteRefStatementRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteRefStatementRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="success" type="xs:boolean"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefObjectSubTypes">
        <xs:sequence>
            <xs:element minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefObjectSubTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteStatementResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateReqComponentResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefObjectTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getRefObjectTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateStatementTreeView">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
            <xs:element minOccurs="0" name="statementTreeViewInfo" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statementTreeViewInfo">
        <xs:complexContent>
            <xs:extension base="tns:abstractStatementInfo">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="statements" type="tns:statementTreeViewInfo"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponents" type="tns:reqComponentInfo"/>
                    <xs:element minOccurs="0" name="naturalLanguageTranslation" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateStatementTreeViewResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementsUsingStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementsUsingStatementResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationsByRef">
        <xs:sequence>
            <xs:element minOccurs="0" name="refObjectTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="refObjectId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationsByRefResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementsUsingReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementsUsingReqComponentResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTreeViewForNlUsageType">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="xs:string"/>
            <xs:element minOccurs="0" name="arg1" type="xs:string"/>
            <xs:element minOccurs="0" name="arg2" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTreeViewForNlUsageTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationType">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:refStatementRelationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="refStatementRelationTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationsByStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationsByStatementResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getStatementTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteReqComponentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="translateStatementTreeViewToNL">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementTreeViewInfo" type="tns:statementTreeViewInfo"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="translateStatementTreeViewToNLResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementsByType">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementsByTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRefStatementRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationInfo" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRefStatementRelationResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationTypesForRefObjectSubType">
        <xs:sequence>
            <xs:element minOccurs="0" name="refSubTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationTypesForRefObjectSubTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getReqComponentTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentsByType">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentsByTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentTypesForStatementType">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentTypesForStatementTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNlUsageTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getNlUsageTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTreeView">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTreeViewResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getReqComponentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForReqComponentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateRefStatementRelation">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="refStatementRelationInfo" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateRefStatementRelationResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForStatementResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNlUsageType">
        <xs:sequence>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNlUsageTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:nlUsageTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="nlUsageTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getRefStatementRelationTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTypesForRefStatementRelationType">
        <xs:sequence>
            <xs:element minOccurs="0" name="refStatementRelationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getStatementTypesForRefStatementRelationTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="statementOperatorTypeKey">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AND"/>
            <xs:enumeration value="OR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="WARN"/>
            <xs:enumeration value="ERROR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
    <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
    <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
    <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
    <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
    <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
    <xs:element name="CircularReferenceException" nillable="true" type="ns0:CircularReferenceException"/>
    <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
    <xs:element name="getObjectStructure" nillable="true" type="ns1:getObjectStructure"/>
    <xs:element name="getObjectStructureResponse" nillable="true" type="ns1:getObjectStructureResponse"/>
    <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns2:getSearchCriteriaTypes"/>
    <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns2:getSearchCriteriaTypesResponse"/>
    <xs:element name="search" nillable="true" type="ns3:search"/>
    <xs:element name="searchResponse" nillable="true" type="ns3:searchResponse"/>
    <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
    <xs:element name="getSearchType" nillable="true" type="ns2:getSearchType"/>
    <xs:element name="getSearchTypeResponse" nillable="true" type="ns2:getSearchTypeResponse"/>
    <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns2:getSearchTypesByCriteria"/>
    <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns2:getSearchTypesByCriteriaResponse"/>
    <xs:element name="getObjectTypes" nillable="true" type="ns1:getObjectTypes"/>
    <xs:element name="getObjectTypesResponse" nillable="true" type="ns1:getObjectTypesResponse"/>
    <xs:element name="getSearchCriteriaType" nillable="true" type="ns2:getSearchCriteriaType"/>
    <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns2:getSearchCriteriaTypeResponse"/>
    <xs:element name="getSearchTypes" nillable="true" type="ns2:getSearchTypes"/>
    <xs:element name="getSearchTypesResponse" nillable="true" type="ns2:getSearchTypesResponse"/>
    <xs:element name="getSearchTypesByResult" nillable="true" type="ns2:getSearchTypesByResult"/>
    <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns2:getSearchTypesByResultResponse"/>
    <xs:element name="getSearchResultTypes" nillable="true" type="ns2:getSearchResultTypes"/>
    <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns2:getSearchResultTypesResponse"/>
    <xs:element name="getSearchResultType" nillable="true" type="ns2:getSearchResultType"/>
    <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns2:getSearchResultTypeResponse"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/statement" xmlns:tns="http://student.kuali.org/wsdl/dictionary" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary">
    <xs:import namespace="http://student.kuali.org/wsdl/statement"/>
    <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
    <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
    <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
    <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
    <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
    <xs:complexType name="fieldDescriptor">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="desc" type="xs:string"/>
            <xs:element name="readOnly" type="xs:boolean"/>
            <xs:element name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
            <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
            <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="objectStructure">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="type">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element name="modifiable" type="xs:boolean"/>
            <xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="state">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="field">
        <xs:sequence>
            <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
            <xs:element name="selector" type="xs:boolean"/>
            <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintDescriptor">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="minValue" type="xs:string"/>
            <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
            <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
            <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="validCharsConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="caseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="whenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="occursConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
    </xs:complexType>
    <xs:complexType name="getObjectStructure">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getObjectTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search">
    <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
    <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
    <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
    <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
    <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
    <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
    <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
    <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
    <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
    <xs:element name="getSearchType" type="tns:getSearchType"/>
    <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
    <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
    <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
    <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
    <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
    <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
    <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
    <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="queryParams">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="queryParamInfo">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="optional" type="xs:boolean" use="required"/>
    </xs:complexType>
    <xs:complexType name="searchRequest">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchKey" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
            <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
            <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
            <xs:element minOccurs="0" name="startAt" type="xs:int"/>
            <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
            <xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchParam">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchResult">
        <xs:sequence>
            <xs:element minOccurs="0" name="startAt" type="xs:int"/>
            <xs:element minOccurs="0" name="totalResults" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
            <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
            <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResultRow">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResultCell">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element minOccurs="0" name="key" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
            <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="resultColumns">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="resultColumnInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchResultType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchRelationship">
        <xs:sequence>
            <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
            <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeAttribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="parentType" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ASC"/>
            <xs:enumeration value="DESC"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="updateStatementResponse">
    <wsdl:part name="parameters" element="tns:updateStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectSubTypesResponse">
    <wsdl:part name="parameters" element="tns:getRefObjectSubTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part name="parameters" element="tns:getSearchType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateStatement">
    <wsdl:part name="parameters" element="tns:updateStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createStatement">
    <wsdl:part name="parameters" element="tns:createStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteStatementResponse">
    <wsdl:part name="parameters" element="tns:deleteStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTreeViewForNlUsageTypeResponse">
    <wsdl:part name="parameters" element="tns:getStatementTreeViewForNlUsageTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationResponse">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatementResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingStatementResponse">
    <wsdl:part name="parameters" element="tns:getStatementsUsingStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsByType">
    <wsdl:part name="parameters" element="tns:getStatementsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part name="parameters" element="tns:getObjectTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatement">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelation">
    <wsdl:part name="parameters" element="tns:getRefStatementRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesResponse">
    <wsdl:part name="parameters" element="tns:getStatementTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentType">
    <wsdl:part name="parameters" element="tns:getReqComponentType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingStatement">
    <wsdl:part name="parameters" element="tns:getStatementsUsingStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesByCriteriaResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByRef">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationsByRef">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageTypeResponse">
    <wsdl:part name="parameters" element="tns:getNlUsageTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getReqComponentsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentResponse">
    <wsdl:part name="parameters" element="tns:getReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createReqComponentResponse">
    <wsdl:part name="parameters" element="tns:createReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRefStatementRelationResponse">
    <wsdl:part name="parameters" element="tns:createRefStatementRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateReqComponentResponse">
    <wsdl:part name="parameters" element="tns:updateReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateStatementTreeView">
    <wsdl:part name="parameters" element="tns:updateStatementTreeView">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRefStatementRelationResponse">
    <wsdl:part name="parameters" element="tns:updateRefStatementRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part name="parameters" element="tns:searchResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageTypes">
    <wsdl:part name="parameters" element="tns:getNlUsageTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part name="parameters" element="tns:getSearchTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchResultTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateStatementTreeViewToNLResponse">
    <wsdl:part name="parameters" element="tns:translateStatementTreeViewToNLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRefStatementRelationResponse">
    <wsdl:part name="parameters" element="tns:deleteRefStatementRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForRefStatementRelation">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForRefStatementRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponent">
    <wsdl:part name="parameters" element="tns:getReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteReqComponentResponse">
    <wsdl:part name="parameters" element="tns:deleteReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypes">
    <wsdl:part name="parameters" element="tns:getReqComponentTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateStatementTreeViewResponse">
    <wsdl:part name="parameters" element="tns:updateStatementTreeViewResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRefStatementRelation">
    <wsdl:part name="parameters" element="tns:updateRefStatementRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatement">
    <wsdl:part name="parameters" element="tns:getStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CircularReferenceException">
    <wsdl:part name="CircularReferenceException" element="tns:CircularReferenceException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentsByType">
    <wsdl:part name="parameters" element="tns:getReqComponentsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createStatementResponse">
    <wsdl:part name="parameters" element="tns:createStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectSubTypes">
    <wsdl:part name="parameters" element="tns:getRefObjectSubTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementResponse">
    <wsdl:part name="parameters" element="tns:getStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getStatementsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingReqComponent">
    <wsdl:part name="parameters" element="tns:getStatementsUsingReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createReqComponent">
    <wsdl:part name="parameters" element="tns:createReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateReqComponentToNL">
    <wsdl:part name="parameters" element="tns:translateReqComponentToNL">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStatement">
    <wsdl:part name="parameters" element="tns:validateStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRefStatementRelation">
    <wsdl:part name="parameters" element="tns:deleteRefStatementRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingReqComponentResponse">
    <wsdl:part name="parameters" element="tns:getStatementsUsingReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part name="parameters" element="tns:getObjectTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForRefStatementRelationResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForRefStatementRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypesResponse">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteStatement">
    <wsdl:part name="parameters" element="tns:deleteStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponent">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part name="parameters" element="tns:getObjectStructure">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForStatementType">
    <wsdl:part name="parameters" element="tns:getStatementTypesForStatementType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypes">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateReqComponent">
    <wsdl:part name="parameters" element="tns:updateReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByStatement">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationsByStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForRefStatementRelationTypeResponse">
    <wsdl:part name="parameters" element="tns:getStatementTypesForRefStatementRelationTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part name="parameters" element="tns:getObjectStructureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageType">
    <wsdl:part name="parameters" element="tns:getNlUsageType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypesForRefObjectSubTypeResponse">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationTypesForRefObjectSubTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForRefStatementRelationType">
    <wsdl:part name="parameters" element="tns:getStatementTypesForRefStatementRelationType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByRefResponse">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationsByRefResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypesForRefObjectSubType">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationTypesForRefObjectSubType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypes">
    <wsdl:part name="parameters" element="tns:getStatementTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypesResponse">
    <wsdl:part name="parameters" element="tns:getReqComponentTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStatementResponse">
    <wsdl:part name="parameters" element="tns:validateStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTreeViewForNlUsageType">
    <wsdl:part name="parameters" element="tns:getStatementTreeViewForNlUsageType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationType">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTreeView">
    <wsdl:part name="parameters" element="tns:getStatementTreeView">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementType">
    <wsdl:part name="parameters" element="tns:getStatementType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateReqComponentResponse">
    <wsdl:part name="parameters" element="tns:validateReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForStatementTypeResponse">
    <wsdl:part name="parameters" element="tns:getStatementTypesForStatementTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateReqComponent">
    <wsdl:part name="parameters" element="tns:validateReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRefStatementRelation">
    <wsdl:part name="parameters" element="tns:createRefStatementRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectTypesResponse">
    <wsdl:part name="parameters" element="tns:getRefObjectTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part name="parameters" element="tns:getSearchResultType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteReqComponent">
    <wsdl:part name="parameters" element="tns:deleteReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part name="parameters" element="tns:search">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByStatementResponse">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationsByStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTreeViewResponse">
    <wsdl:part name="parameters" element="tns:getStatementTreeViewResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageTypesResponse">
    <wsdl:part name="parameters" element="tns:getNlUsageTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypesForStatementType">
    <wsdl:part name="parameters" element="tns:getReqComponentTypesForStatementType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchResultTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypeResponse">
    <wsdl:part name="parameters" element="tns:getReqComponentTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part name="parameters" element="tns:getSearchResultTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypesForStatementTypeResponse">
    <wsdl:part name="parameters" element="tns:getReqComponentTypesForStatementTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateStatementTreeViewToNL">
    <wsdl:part name="parameters" element="tns:translateStatementTreeViewToNL">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRefStatementRelationResponse">
    <wsdl:part name="parameters" element="tns:validateRefStatementRelationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypeResponse">
    <wsdl:part name="parameters" element="tns:getStatementTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypeResponse">
    <wsdl:part name="parameters" element="tns:getRefStatementRelationTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesByResultResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateReqComponentToNLResponse">
    <wsdl:part name="parameters" element="tns:translateReqComponentToNLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part name="parameters" element="tns:getSearchTypesByResult">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part name="parameters" element="tns:getSearchTypesByCriteria">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRefStatementRelation">
    <wsdl:part name="parameters" element="tns:validateRefStatementRelation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectTypes">
    <wsdl:part name="parameters" element="tns:getRefObjectTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponentResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="StatementService">
    <wsdl:operation name="updateStatement">
      <wsdl:input name="updateStatement" message="tns:updateStatement">
    </wsdl:input>
      <wsdl:output name="updateStatementResponse" message="tns:updateStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="CircularReferenceException" message="tns:CircularReferenceException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateReqComponentToNL">
      <wsdl:input name="translateReqComponentToNL" message="tns:translateReqComponentToNL">
    </wsdl:input>
      <wsdl:output name="translateReqComponentToNLResponse" message="tns:translateReqComponentToNLResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input name="getObjectStructure" message="tns:getObjectStructure">
    </wsdl:input>
      <wsdl:output name="getObjectStructureResponse" message="tns:getObjectStructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input name="getSearchCriteriaTypes" message="tns:getSearchCriteriaTypes">
    </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse" message="tns:getSearchCriteriaTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForStatementType">
      <wsdl:input name="getStatementTypesForStatementType" message="tns:getStatementTypesForStatementType">
    </wsdl:input>
      <wsdl:output name="getStatementTypesForStatementTypeResponse" message="tns:getStatementTypesForStatementTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input name="search" message="tns:search">
    </wsdl:input>
      <wsdl:output name="searchResponse" message="tns:searchResponse">
    </wsdl:output>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createReqComponent">
      <wsdl:input name="createReqComponent" message="tns:createReqComponent">
    </wsdl:input>
      <wsdl:output name="createReqComponentResponse" message="tns:createReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForRefStatementRelation">
      <wsdl:input name="getNaturalLanguageForRefStatementRelation" message="tns:getNaturalLanguageForRefStatementRelation">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForRefStatementRelationResponse" message="tns:getNaturalLanguageForRefStatementRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStatement">
      <wsdl:input name="validateStatement" message="tns:validateStatement">
    </wsdl:input>
      <wsdl:output name="validateStatementResponse" message="tns:validateStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRefStatementRelation">
      <wsdl:input name="updateRefStatementRelation" message="tns:updateRefStatementRelation">
    </wsdl:input>
      <wsdl:output name="updateRefStatementRelationResponse" message="tns:updateRefStatementRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input name="getSearchType" message="tns:getSearchType">
    </wsdl:input>
      <wsdl:output name="getSearchTypeResponse" message="tns:getSearchTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateReqComponent">
      <wsdl:input name="updateReqComponent" message="tns:updateReqComponent">
    </wsdl:input>
      <wsdl:output name="updateReqComponentResponse" message="tns:updateReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentType">
      <wsdl:input name="getReqComponentType" message="tns:getReqComponentType">
    </wsdl:input>
      <wsdl:output name="getReqComponentTypeResponse" message="tns:getReqComponentTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createStatement">
      <wsdl:input name="createStatement" message="tns:createStatement">
    </wsdl:input>
      <wsdl:output name="createStatementResponse" message="tns:createStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementType">
      <wsdl:input name="getStatementType" message="tns:getStatementType">
    </wsdl:input>
      <wsdl:output name="getStatementTypeResponse" message="tns:getStatementTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRefStatementRelation">
      <wsdl:input name="deleteRefStatementRelation" message="tns:deleteRefStatementRelation">
    </wsdl:input>
      <wsdl:output name="deleteRefStatementRelationResponse" message="tns:deleteRefStatementRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectSubTypes">
      <wsdl:input name="getRefObjectSubTypes" message="tns:getRefObjectSubTypes">
    </wsdl:input>
      <wsdl:output name="getRefObjectSubTypesResponse" message="tns:getRefObjectSubTypesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStatement">
      <wsdl:input name="deleteStatement" message="tns:deleteStatement">
    </wsdl:input>
      <wsdl:output name="deleteStatementResponse" message="tns:deleteStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateReqComponent">
      <wsdl:input name="validateReqComponent" message="tns:validateReqComponent">
    </wsdl:input>
      <wsdl:output name="validateReqComponentResponse" message="tns:validateReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectTypes">
      <wsdl:input name="getRefObjectTypes" message="tns:getRefObjectTypes">
    </wsdl:input>
      <wsdl:output name="getRefObjectTypesResponse" message="tns:getRefObjectTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelation">
      <wsdl:input name="getRefStatementRelation" message="tns:getRefStatementRelation">
    </wsdl:input>
      <wsdl:output name="getRefStatementRelationResponse" message="tns:getRefStatementRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatementTreeView">
      <wsdl:input name="updateStatementTreeView" message="tns:updateStatementTreeView">
    </wsdl:input>
      <wsdl:output name="updateStatementTreeViewResponse" message="tns:updateStatementTreeViewResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="CircularReferenceException" message="tns:CircularReferenceException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingStatement">
      <wsdl:input name="getStatementsUsingStatement" message="tns:getStatementsUsingStatement">
    </wsdl:input>
      <wsdl:output name="getStatementsUsingStatementResponse" message="tns:getStatementsUsingStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatement">
      <wsdl:input name="getStatement" message="tns:getStatement">
    </wsdl:input>
      <wsdl:output name="getStatementResponse" message="tns:getStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByRef">
      <wsdl:input name="getRefStatementRelationsByRef" message="tns:getRefStatementRelationsByRef">
    </wsdl:input>
      <wsdl:output name="getRefStatementRelationsByRefResponse" message="tns:getRefStatementRelationsByRefResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input name="getSearchTypesByCriteria" message="tns:getSearchTypesByCriteria">
    </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse" message="tns:getSearchTypesByCriteriaResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingReqComponent">
      <wsdl:input name="getStatementsUsingReqComponent" message="tns:getStatementsUsingReqComponent">
    </wsdl:input>
      <wsdl:output name="getStatementsUsingReqComponentResponse" message="tns:getStatementsUsingReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTreeViewForNlUsageType">
      <wsdl:input name="getStatementTreeViewForNlUsageType" message="tns:getStatementTreeViewForNlUsageType">
    </wsdl:input>
      <wsdl:output name="getStatementTreeViewForNlUsageTypeResponse" message="tns:getStatementTreeViewForNlUsageTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationType">
      <wsdl:input name="getRefStatementRelationType" message="tns:getRefStatementRelationType">
    </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypeResponse" message="tns:getRefStatementRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByStatement">
      <wsdl:input name="getRefStatementRelationsByStatement" message="tns:getRefStatementRelationsByStatement">
    </wsdl:input>
      <wsdl:output name="getRefStatementRelationsByStatementResponse" message="tns:getRefStatementRelationsByStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypes">
      <wsdl:input name="getStatementTypes" message="tns:getStatementTypes">
    </wsdl:input>
      <wsdl:output name="getStatementTypesResponse" message="tns:getStatementTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteReqComponent">
      <wsdl:input name="deleteReqComponent" message="tns:deleteReqComponent">
    </wsdl:input>
      <wsdl:output name="deleteReqComponentResponse" message="tns:deleteReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateStatementTreeViewToNL">
      <wsdl:input name="translateStatementTreeViewToNL" message="tns:translateStatementTreeViewToNL">
    </wsdl:input>
      <wsdl:output name="translateStatementTreeViewToNLResponse" message="tns:translateStatementTreeViewToNLResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsByType">
      <wsdl:input name="getStatementsByType" message="tns:getStatementsByType">
    </wsdl:input>
      <wsdl:output name="getStatementsByTypeResponse" message="tns:getStatementsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRefStatementRelation">
      <wsdl:input name="createRefStatementRelation" message="tns:createRefStatementRelation">
    </wsdl:input>
      <wsdl:output name="createRefStatementRelationResponse" message="tns:createRefStatementRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypesForRefObjectSubType">
      <wsdl:input name="getRefStatementRelationTypesForRefObjectSubType" message="tns:getRefStatementRelationTypesForRefObjectSubType">
    </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypesForRefObjectSubTypeResponse" message="tns:getRefStatementRelationTypesForRefObjectSubTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypes">
      <wsdl:input name="getReqComponentTypes" message="tns:getReqComponentTypes">
    </wsdl:input>
      <wsdl:output name="getReqComponentTypesResponse" message="tns:getReqComponentTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input name="getObjectTypes" message="tns:getObjectTypes">
    </wsdl:input>
      <wsdl:output name="getObjectTypesResponse" message="tns:getObjectTypesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentsByType">
      <wsdl:input name="getReqComponentsByType" message="tns:getReqComponentsByType">
    </wsdl:input>
      <wsdl:output name="getReqComponentsByTypeResponse" message="tns:getReqComponentsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input name="getSearchCriteriaType" message="tns:getSearchCriteriaType">
    </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse" message="tns:getSearchCriteriaTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypesForStatementType">
      <wsdl:input name="getReqComponentTypesForStatementType" message="tns:getReqComponentTypesForStatementType">
    </wsdl:input>
      <wsdl:output name="getReqComponentTypesForStatementTypeResponse" message="tns:getReqComponentTypesForStatementTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageTypes">
      <wsdl:input name="getNlUsageTypes" message="tns:getNlUsageTypes">
    </wsdl:input>
      <wsdl:output name="getNlUsageTypesResponse" message="tns:getNlUsageTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTreeView">
      <wsdl:input name="getStatementTreeView" message="tns:getStatementTreeView">
    </wsdl:input>
      <wsdl:output name="getStatementTreeViewResponse" message="tns:getStatementTreeViewResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input name="getSearchTypes" message="tns:getSearchTypes">
    </wsdl:input>
      <wsdl:output name="getSearchTypesResponse" message="tns:getSearchTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponent">
      <wsdl:input name="getReqComponent" message="tns:getReqComponent">
    </wsdl:input>
      <wsdl:output name="getReqComponentResponse" message="tns:getReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForReqComponent">
      <wsdl:input name="getNaturalLanguageForReqComponent" message="tns:getNaturalLanguageForReqComponent">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentResponse" message="tns:getNaturalLanguageForReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input name="getSearchTypesByResult" message="tns:getSearchTypesByResult">
    </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse" message="tns:getSearchTypesByResultResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input name="getSearchResultTypes" message="tns:getSearchResultTypes">
    </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse" message="tns:getSearchResultTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRefStatementRelation">
      <wsdl:input name="validateRefStatementRelation" message="tns:validateRefStatementRelation">
    </wsdl:input>
      <wsdl:output name="validateRefStatementRelationResponse" message="tns:validateRefStatementRelationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatement">
      <wsdl:input name="getNaturalLanguageForStatement" message="tns:getNaturalLanguageForStatement">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementResponse" message="tns:getNaturalLanguageForStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageType">
      <wsdl:input name="getNlUsageType" message="tns:getNlUsageType">
    </wsdl:input>
      <wsdl:output name="getNlUsageTypeResponse" message="tns:getNlUsageTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input name="getSearchResultType" message="tns:getSearchResultType">
    </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse" message="tns:getSearchResultTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypes">
      <wsdl:input name="getRefStatementRelationTypes" message="tns:getRefStatementRelationTypes">
    </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypesResponse" message="tns:getRefStatementRelationTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForRefStatementRelationType">
      <wsdl:input name="getStatementTypesForRefStatementRelationType" message="tns:getStatementTypesForRefStatementRelationType">
    </wsdl:input>
      <wsdl:output name="getStatementTypesForRefStatementRelationTypeResponse" message="tns:getStatementTypesForRefStatementRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="StatementServiceServiceSoapBinding" type="tns:StatementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="translateReqComponentToNL">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="translateReqComponentToNL">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="translateReqComponentToNLResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularReferenceException">
        <soap:fault name="CircularReferenceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForStatementType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTypesForStatementType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypesForStatementTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectSubTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefObjectSubTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefObjectSubTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatementTreeView">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateStatementTreeView">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateStatementTreeViewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularReferenceException">
        <soap:fault name="CircularReferenceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementsUsingStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementsUsingStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByRef">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationsByRef">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationsByRefResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTreeViewForNlUsageType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTreeViewForNlUsageType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTreeViewForNlUsageTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementsUsingReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementsUsingReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationsByStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationsByStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateStatementTreeViewToNL">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="translateStatementTreeViewToNL">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="translateStatementTreeViewToNLResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypesForRefObjectSubType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationTypesForRefObjectSubType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypesForRefObjectSubTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNlUsageTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNlUsageTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypesForStatementType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentTypesForStatementType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentTypesForStatementTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTreeView">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTreeView">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTreeViewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNlUsageType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNlUsageTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForRefStatementRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTypesForRefStatementRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypesForRefStatementRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="StatementService">
    <wsdl:port name="StatementServicePort" binding="tns:StatementServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/StatementServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
