<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="DocumentService" targetNamespace="http://student.kuali.org/wsdl/document" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/document" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/exceptions" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions">
    <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
    <xs:complexType name="MissingParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OperationFailedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VersionMismatchException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:tns="http://student.kuali.org/wsdl/document" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/document">
    <xs:element name="addDocumentCategoryToDocument" type="tns:addDocumentCategoryToDocument"/>
    <xs:element name="addDocumentCategoryToDocumentResponse" type="tns:addDocumentCategoryToDocumentResponse"/>
    <xs:element name="createDocument" type="tns:createDocument"/>
    <xs:element name="createDocumentResponse" type="tns:createDocumentResponse"/>
    <xs:element name="deleteDocument" type="tns:deleteDocument"/>
    <xs:element name="deleteDocumentResponse" type="tns:deleteDocumentResponse"/>
    <xs:element name="getCategoriesByDocument" type="tns:getCategoriesByDocument"/>
    <xs:element name="getCategoriesByDocumentResponse" type="tns:getCategoriesByDocumentResponse"/>
    <xs:element name="getDocument" type="tns:getDocument"/>
    <xs:element name="getDocumentCategories" type="tns:getDocumentCategories"/>
    <xs:element name="getDocumentCategoriesResponse" type="tns:getDocumentCategoriesResponse"/>
    <xs:element name="getDocumentCategory" type="tns:getDocumentCategory"/>
    <xs:element name="getDocumentCategoryResponse" type="tns:getDocumentCategoryResponse"/>
    <xs:element name="getDocumentResponse" type="tns:getDocumentResponse"/>
    <xs:element name="getDocumentType" type="tns:getDocumentType"/>
    <xs:element name="getDocumentTypeResponse" type="tns:getDocumentTypeResponse"/>
    <xs:element name="getDocumentTypes" type="tns:getDocumentTypes"/>
    <xs:element name="getDocumentTypesResponse" type="tns:getDocumentTypesResponse"/>
    <xs:element name="getDocumentsByIdList" type="tns:getDocumentsByIdList"/>
    <xs:element name="getDocumentsByIdListResponse" type="tns:getDocumentsByIdListResponse"/>
    <xs:element name="removeDocumentCategoryFromDocument" type="tns:removeDocumentCategoryFromDocument"/>
    <xs:element name="removeDocumentCategoryFromDocumentResponse" type="tns:removeDocumentCategoryFromDocumentResponse"/>
    <xs:element name="updateDocument" type="tns:updateDocument"/>
    <xs:element name="updateDocumentResponse" type="tns:updateDocumentResponse"/>
    <xs:element name="validateDocument" type="tns:validateDocument"/>
    <xs:element name="validateDocumentResponse" type="tns:validateDocumentResponse"/>
    <xs:complexType name="getDocumentsByIdList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="documentIdList" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentsByIdListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="documentInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element minOccurs="0" name="documentBinaryInfo" type="tns:documentBinaryInfo"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="richTextInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="plain" type="xs:string"/>
            <xs:element minOccurs="0" name="formatted" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="documentBinaryInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="binary" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="documentInfo" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateDocumentResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validationResultInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="element" type="xs:string"/>
            <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentId" type="xs:string"/>
            <xs:element minOccurs="0" name="documentInfo" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateDocumentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteDocumentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="success" type="xs:boolean"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentType">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:documentTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="documentTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="removeDocumentCategoryFromDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentId" type="xs:string"/>
            <xs:element minOccurs="0" name="documentCategoryKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeDocumentCategoryFromDocumentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getCategoriesByDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getCategoriesByDocumentResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:documentCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="documentCategoryInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getDocumentCategories">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getDocumentCategoriesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:documentCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addDocumentCategoryToDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentId" type="xs:string"/>
            <xs:element minOccurs="0" name="documentCategoryKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addDocumentCategoryToDocumentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createDocument">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="documentCategoryKey" type="xs:string"/>
            <xs:element minOccurs="0" name="documentInfo" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createDocumentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:documentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getDocumentTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:documentTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="documentCategoryKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getDocumentCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:documentCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="WARN"/>
            <xs:enumeration value="ERROR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
    <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
    <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
    <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
    <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
    <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
    <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getDocumentsByIdList">
    <wsdl:part name="parameters" element="tns:getDocumentsByIdList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTypeResponse">
    <wsdl:part name="parameters" element="tns:getDocumentTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeDocumentCategoryFromDocumentResponse">
    <wsdl:part name="parameters" element="tns:removeDocumentCategoryFromDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateDocumentResponse">
    <wsdl:part name="parameters" element="tns:validateDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDocumentCategoryToDocument">
    <wsdl:part name="parameters" element="tns:addDocumentCategoryToDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeDocumentCategoryFromDocument">
    <wsdl:part name="parameters" element="tns:removeDocumentCategoryFromDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentCategory">
    <wsdl:part name="parameters" element="tns:getDocumentCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentCategoriesResponse">
    <wsdl:part name="parameters" element="tns:getDocumentCategoriesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTypes">
    <wsdl:part name="parameters" element="tns:getDocumentTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentsByIdListResponse">
    <wsdl:part name="parameters" element="tns:getDocumentsByIdListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDocumentResponse">
    <wsdl:part name="parameters" element="tns:deleteDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentCategories">
    <wsdl:part name="parameters" element="tns:getDocumentCategories">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentResponse">
    <wsdl:part name="parameters" element="tns:getDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTypesResponse">
    <wsdl:part name="parameters" element="tns:getDocumentTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDocumentResponse">
    <wsdl:part name="parameters" element="tns:updateDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDocument">
    <wsdl:part name="parameters" element="tns:deleteDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDocumentCategoryToDocumentResponse">
    <wsdl:part name="parameters" element="tns:addDocumentCategoryToDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDocumentResponse">
    <wsdl:part name="parameters" element="tns:createDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocument">
    <wsdl:part name="parameters" element="tns:getDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDocument">
    <wsdl:part name="parameters" element="tns:createDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDocument">
    <wsdl:part name="parameters" element="tns:updateDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCategoriesByDocument">
    <wsdl:part name="parameters" element="tns:getCategoriesByDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentCategoryResponse">
    <wsdl:part name="parameters" element="tns:getDocumentCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentType">
    <wsdl:part name="parameters" element="tns:getDocumentType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCategoriesByDocumentResponse">
    <wsdl:part name="parameters" element="tns:getCategoriesByDocumentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateDocument">
    <wsdl:part name="parameters" element="tns:validateDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="DocumentService">
    <wsdl:operation name="getDocumentsByIdList">
      <wsdl:input name="getDocumentsByIdList" message="tns:getDocumentsByIdList">
    </wsdl:input>
      <wsdl:output name="getDocumentsByIdListResponse" message="tns:getDocumentsByIdListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateDocument">
      <wsdl:input name="validateDocument" message="tns:validateDocument">
    </wsdl:input>
      <wsdl:output name="validateDocumentResponse" message="tns:validateDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <wsdl:input name="getDocument" message="tns:getDocument">
    </wsdl:input>
      <wsdl:output name="getDocumentResponse" message="tns:getDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDocument">
      <wsdl:input name="updateDocument" message="tns:updateDocument">
    </wsdl:input>
      <wsdl:output name="updateDocumentResponse" message="tns:updateDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDocument">
      <wsdl:input name="deleteDocument" message="tns:deleteDocument">
    </wsdl:input>
      <wsdl:output name="deleteDocumentResponse" message="tns:deleteDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentType">
      <wsdl:input name="getDocumentType" message="tns:getDocumentType">
    </wsdl:input>
      <wsdl:output name="getDocumentTypeResponse" message="tns:getDocumentTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeDocumentCategoryFromDocument">
      <wsdl:input name="removeDocumentCategoryFromDocument" message="tns:removeDocumentCategoryFromDocument">
    </wsdl:input>
      <wsdl:output name="removeDocumentCategoryFromDocumentResponse" message="tns:removeDocumentCategoryFromDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCategoriesByDocument">
      <wsdl:input name="getCategoriesByDocument" message="tns:getCategoriesByDocument">
    </wsdl:input>
      <wsdl:output name="getCategoriesByDocumentResponse" message="tns:getCategoriesByDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentCategories">
      <wsdl:input name="getDocumentCategories" message="tns:getDocumentCategories">
    </wsdl:input>
      <wsdl:output name="getDocumentCategoriesResponse" message="tns:getDocumentCategoriesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentCategoryToDocument">
      <wsdl:input name="addDocumentCategoryToDocument" message="tns:addDocumentCategoryToDocument">
    </wsdl:input>
      <wsdl:output name="addDocumentCategoryToDocumentResponse" message="tns:addDocumentCategoryToDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDocument">
      <wsdl:input name="createDocument" message="tns:createDocument">
    </wsdl:input>
      <wsdl:output name="createDocumentResponse" message="tns:createDocumentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTypes">
      <wsdl:input name="getDocumentTypes" message="tns:getDocumentTypes">
    </wsdl:input>
      <wsdl:output name="getDocumentTypesResponse" message="tns:getDocumentTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentCategory">
      <wsdl:input name="getDocumentCategory" message="tns:getDocumentCategory">
    </wsdl:input>
      <wsdl:output name="getDocumentCategoryResponse" message="tns:getDocumentCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DocumentServiceServiceSoapBinding" type="tns:DocumentService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getDocumentsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCategoriesByDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCategoriesByDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCategoriesByDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeDocumentCategoryFromDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeDocumentCategoryFromDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeDocumentCategoryFromDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentCategories">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentCategories">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentCategoriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentCategoryToDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addDocumentCategoryToDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addDocumentCategoryToDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DocumentService">
    <wsdl:port name="DocumentServicePort" binding="tns:DocumentServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/DocumentServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
